<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespaceNeoFOAM_1_1mpi" kind="namespace" language="C++">
    <compoundname>NeoFOAM::mpi</compoundname>
    <innerclass refid="structNeoFOAM_1_1mpi_1_1MPIInit" prot="public">NeoFOAM::mpi::MPIInit</innerclass>
    <innerclass refid="classNeoFOAM_1_1mpi_1_1MPIEnvironment" prot="public">NeoFOAM::mpi::MPIEnvironment</innerclass>
    <innerclass refid="classNeoFOAM_1_1mpi_1_1FullDuplexCommBuffer" prot="public">NeoFOAM::mpi::FullDuplexCommBuffer</innerclass>
    <innerclass refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer" prot="public">NeoFOAM::mpi::HalfDuplexCommBuffer</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespaceNeoFOAM_1_1mpi_1ad2080ed6fe76416aece0600b1993f496" prot="public" static="no" strong="yes">
        <type></type>
        <name>ReduceOp</name>
        <enumvalue id="namespaceNeoFOAM_1_1mpi_1ad2080ed6fe76416aece0600b1993f496a6a061313d22e51e0f25b7cd4dc065233" prot="public">
          <name>Max</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceNeoFOAM_1_1mpi_1ad2080ed6fe76416aece0600b1993f496a78d811e98514cd165dda532286610fd2" prot="public">
          <name>Min</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceNeoFOAM_1_1mpi_1ad2080ed6fe76416aece0600b1993f496aa0ec87054b5e5b7847d0d8780a01a3d5" prot="public">
          <name>Sum</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceNeoFOAM_1_1mpi_1ad2080ed6fe76416aece0600b1993f496a362a33c23b08e4a32a4ec53fbb82cccd" prot="public">
          <name>Prod</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceNeoFOAM_1_1mpi_1ad2080ed6fe76416aece0600b1993f496a512ef7c688a2c8572d5e16f44e17e869" prot="public">
          <name>Land</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceNeoFOAM_1_1mpi_1ad2080ed6fe76416aece0600b1993f496a67fd95fc1e88f15b3efb9feef0fc0dc9" prot="public">
          <name>Band</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceNeoFOAM_1_1mpi_1ad2080ed6fe76416aece0600b1993f496a8595fb71a368d49d1ce5eead7f7ec7a5" prot="public">
          <name>Lor</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceNeoFOAM_1_1mpi_1ad2080ed6fe76416aece0600b1993f496a2fc3e7b551bc67be82d33717e22f43df" prot="public">
          <name>Bor</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceNeoFOAM_1_1mpi_1ad2080ed6fe76416aece0600b1993f496aba589477cc8a0f3e2863ca6f0c2459d8" prot="public">
          <name>Maxloc</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespaceNeoFOAM_1_1mpi_1ad2080ed6fe76416aece0600b1993f496a5425939f10e63fc722bb5fc0d8da7a84" prot="public">
          <name>Minloc</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Enumeration of MPI reduction operations. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/operators.hpp" line="20" column="1" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/operators.hpp" bodystart="21" bodyend="32"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceNeoFOAM_1_1mpi_1a9c3c67ea5fefe92c9f5b59fe2c3e7ca8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>int NeoFOAM::mpi::bufferHash</definition>
        <argsstring>(const std::string &amp;str)</argsstring>
        <name>bufferHash</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>A hash function for a string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>str</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to be hashed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int The hash value of the string. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" line="28" column="12" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" bodystart="28" bodyend="36"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1mpi_1ae9840fe5d75027b3431398e3a6806ed0" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>constexpr MPI_Op</type>
        <definition>constexpr MPI_Op NeoFOAM::mpi::getOp</definition>
        <argsstring>(const ReduceOp op)</argsstring>
        <name>getOp</name>
        <param>
          <type>const <ref refid="namespaceNeoFOAM_1_1mpi_1ad2080ed6fe76416aece0600b1993f496" kindref="member">ReduceOp</ref></type>
          <declname>op</declname>
        </param>
        <briefdescription>
<para>Returns the corresponding MPI_Op for a given ReduceOp. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para>The reduction operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The corresponding MPI_Op </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/operators.hpp" line="40" column="18" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/operators.hpp" bodystart="40" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1mpi_1a715f9aea7eceddbac548898a5f1e2e8b" prot="public" static="no" constexpr="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename valueType</type>
          </param>
        </templateparamlist>
        <type>constexpr MPI_Datatype</type>
        <definition>constexpr MPI_Datatype NeoFOAM::mpi::getType</definition>
        <argsstring>()</argsstring>
        <name>getType</name>
        <briefdescription>
<para>Returns the corresponding MPI_Datatype for a given C++ type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>valueType</parametername>
</parameternamelist>
<parameterdescription>
<para>The C++ type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The corresponding MPI_Datatype </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/operators.hpp" line="77" column="24" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/operators.hpp" bodystart="77" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1mpi_1af04bb54610e8cfae03423dc2c4c8cfc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename valueType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NeoFOAM::mpi::allReduce</definition>
        <argsstring>(valueType &amp;value, const ReduceOp op, MPI_Comm comm)</argsstring>
        <name>allReduce</name>
        <param>
          <type>valueType &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceNeoFOAM_1_1mpi_1ad2080ed6fe76416aece0600b1993f496" kindref="member">ReduceOp</ref></type>
          <declname>op</declname>
        </param>
        <param>
          <type>MPI_Comm</type>
          <declname>comm</declname>
        </param>
        <briefdescription>
<para>Performs a blocking all-reduce operation on a value across all processes in the communicator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>valueType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to be all-reduced. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para>The reduction operation to be performed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>comm</parametername>
</parameternamelist>
<parameterdescription>
<para>The communicator across which the reduction operation is performed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Blocking MPI operation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/operators.hpp" line="128" column="6" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/operators.hpp" bodystart="128" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1mpi_1aadb797323c2020c5bf54669abdbc1c1c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
        </templateparamlist>
        <type>void</type>
        <definition>void NeoFOAM::mpi::allReduce</definition>
        <argsstring>(Vector &amp;vector, const ReduceOp op, MPI_Comm comm)</argsstring>
        <name>allReduce</name>
        <param>
          <type><ref refid="classNeoFOAM_1_1Vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>vector</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceNeoFOAM_1_1mpi_1ad2080ed6fe76416aece0600b1993f496" kindref="member">ReduceOp</ref></type>
          <declname>op</declname>
        </param>
        <param>
          <type>MPI_Comm</type>
          <declname>comm</declname>
        </param>
        <briefdescription>
<para>Performs a blocking all-reduce operation on a vector across all processes in the communicator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vector</parametername>
</parameternamelist>
<parameterdescription>
<para>The vector to be all-reduced. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>op</parametername>
</parameternamelist>
<parameterdescription>
<para>The reduction operation to be performed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>comm</parametername>
</parameternamelist>
<parameterdescription>
<para>The communicator across which the reduction operation is performed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Blocking MPI operation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/operators.hpp" line="145" column="13" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/operators.hpp" bodystart="145" bodyend="155"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1mpi_1a4b7f7a3712768795b481436b53327fe5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename valueType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NeoFOAM::mpi::isend</definition>
        <argsstring>(const valueType *buffer, const mpi_label_t size, mpi_label_t rankReceive, mpi_label_t tag, MPI_Comm comm, MPI_Request *request)</argsstring>
        <name>isend</name>
        <param>
          <type>const valueType *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceNeoFOAM_1a6340adc783ef78803a50be602055fba6" kindref="member">mpi_label_t</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoFOAM_1a6340adc783ef78803a50be602055fba6" kindref="member">mpi_label_t</ref></type>
          <declname>rankReceive</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoFOAM_1a6340adc783ef78803a50be602055fba6" kindref="member">mpi_label_t</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type>MPI_Comm</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>MPI_Request *</type>
          <declname>request</declname>
        </param>
        <briefdescription>
<para>Non-blocking send of a set of scalar values to a remote rank. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>valueType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the scalar value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to first scalar value to be sent. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the send buffer, i.e. number of components/elements. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rankReceive</parametername>
</parameternamelist>
<parameterdescription>
<para>The receiving rank index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>The tag of the message, used to identify the communication. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>comm</parametername>
</parameternamelist>
<parameterdescription>
<para>The MPI communicator across which the message is sent. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>request</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the MPI_Request object, is populated by the function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Non-blocking MPI operation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/operators.hpp" line="170" column="6" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/operators.hpp" bodystart="170" bodyend="182"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1mpi_1a6812bb90b0a66834757aee8a193e8115" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename valueType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NeoFOAM::mpi::irecv</definition>
        <argsstring>(valueType *buffer, const mpi_label_t size, mpi_label_t rankSend, mpi_label_t tag, MPI_Comm comm, MPI_Request *request)</argsstring>
        <name>irecv</name>
        <param>
          <type>valueType *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>const <ref refid="namespaceNeoFOAM_1a6340adc783ef78803a50be602055fba6" kindref="member">mpi_label_t</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoFOAM_1a6340adc783ef78803a50be602055fba6" kindref="member">mpi_label_t</ref></type>
          <declname>rankSend</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoFOAM_1a6340adc783ef78803a50be602055fba6" kindref="member">mpi_label_t</ref></type>
          <declname>tag</declname>
        </param>
        <param>
          <type>MPI_Comm</type>
          <declname>comm</declname>
        </param>
        <param>
          <type>MPI_Request *</type>
          <declname>request</declname>
        </param>
        <briefdescription>
<para>Non-blocking receive of a set of scalar values from a remote rank. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>valueType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the scalar value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the buffer where the received scalar values will be stored. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the receive buffer, i.e. number of components/elements. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rankSend</parametername>
</parameternamelist>
<parameterdescription>
<para>The rank index of the sender. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tag</parametername>
</parameternamelist>
<parameterdescription>
<para>The tag of the message, used to identify the communication. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>comm</parametername>
</parameternamelist>
<parameterdescription>
<para>The MPI communicator across which the message is received. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>request</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the MPI_Request object, is populated by the function. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Non-blocking MPI operation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/operators.hpp" line="197" column="6" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/operators.hpp" bodystart="197" bodyend="208"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1mpi_1ae6e3efafb27b0a2a0ffa30f04798832a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool NeoFOAM::mpi::test</definition>
        <argsstring>(MPI_Request *request)</argsstring>
        <name>test</name>
        <param>
          <type>MPI_Request *</type>
          <declname>request</declname>
        </param>
        <briefdescription>
<para>Tests if a non-blocking communication request has completed. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>request</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the MPI_Request object. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the request has completed, false otherwise. </para>
</simplesect>
<simplesect kind="note"><para>Non-blocking MPI operation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/operators.hpp" line="217" column="13" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/operators.hpp" bodystart="217" bodyend="223"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/environment.hpp" line="12" column="1"/>
  </compounddef>
</doxygen>
