<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="halfDuplexCommBuffer_8hpp" kind="file" language="C++">
    <compoundname>halfDuplexCommBuffer.hpp</compoundname>
    <includes local="no">span</includes>
    <includes local="no">string</includes>
    <includes local="no">typeindex</includes>
    <includes local="no">vector</includes>
    <includes local="no">mpi.h</includes>
    <includes refid="error_8hpp" local="yes">NeoFOAM/core/error.hpp</includes>
    <includes refid="environment_8hpp" local="yes">NeoFOAM/core/mpi/environment.hpp</includes>
    <includes refid="operators_8hpp" local="yes">NeoFOAM/core/mpi/operators.hpp</includes>
    <includedby refid="fullDuplexCommBuffer_8hpp" local="yes">/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/fullDuplexCommBuffer.hpp</includedby>
    <incdepgraph>
      <node id="20">
        <label>cstdint</label>
      </node>
      <node id="7">
        <label>NeoFOAM/core/error.hpp</label>
        <link refid="error_8hpp"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>string</label>
      </node>
      <node id="16">
        <label>NeoFOAM/core/primitives/vector.hpp</label>
        <link refid="vector_8hpp"/>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="18" relation="include">
        </childnode>
        <childnode refid="19" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>exception</label>
      </node>
      <node id="12">
        <label>NeoFOAM/core/mpi/environment.hpp</label>
        <link refid="environment_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="17">
        <label>Kokkos_Core.hpp</label>
      </node>
      <node id="11">
        <label>info.hpp</label>
        <link refid="info_8hpp"/>
      </node>
      <node id="1">
        <label>/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp</label>
        <link refid="halfDuplexCommBuffer_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="18">
        <label>NeoFOAM/core/primitives/scalar.hpp</label>
        <link refid="scalar_8hpp"/>
      </node>
      <node id="5">
        <label>vector</label>
      </node>
      <node id="10">
        <label>sstream</label>
      </node>
      <node id="9">
        <label>iostream</label>
      </node>
      <node id="13">
        <label>NeoFOAM/core/mpi/operators.hpp</label>
        <link refid="operators_8hpp"/>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>mpi.h</label>
      </node>
      <node id="19">
        <label>NeoFOAM/core/primitives/label.hpp</label>
        <link refid="label_8hpp"/>
        <childnode refid="20" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>type_traits</label>
      </node>
      <node id="2">
        <label>span</label>
      </node>
      <node id="14">
        <label>complex</label>
      </node>
      <node id="4">
        <label>typeindex</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="1">
        <label>/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp</label>
        <link refid="halfDuplexCommBuffer_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/mesh/unstructured/communicator.hpp</label>
        <link refid="communicator_8hpp"/>
      </node>
      <node id="2">
        <label>/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/fullDuplexCommBuffer.hpp</label>
        <link refid="fullDuplexCommBuffer_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer" prot="public">NeoFOAM::mpi::HalfDuplexCommBuffer</innerclass>
    <innernamespace refid="namespaceNeoFOAM">NeoFOAM</innernamespace>
    <innernamespace refid="namespaceNeoFOAM_1_1mpi">NeoFOAM::mpi</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>MIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2023<sp/>NeoFOAM<sp/>authors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;span&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;typeindex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;vector&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mpi.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="error_8hpp" kindref="compound">NeoFOAM/core/error.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="environment_8hpp" kindref="compound">NeoFOAM/core/mpi/environment.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="operators_8hpp" kindref="compound">NeoFOAM/core/mpi/operators.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceNeoFOAM" kindref="compound">NeoFOAM</ref></highlight></codeline>
<codeline lineno="17"><highlight class="normal">{</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">mpi</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="28" refid="namespaceNeoFOAM_1_1mpi_1a9c3c67ea5fefe92c9f5b59fe2c3e7ca8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespaceNeoFOAM_1_1mpi_1a9c3c67ea5fefe92c9f5b59fe2c3e7ca8" kindref="member">bufferHash</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/>str)</highlight></codeline>
<codeline lineno="29"><highlight class="normal">{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>There<sp/>is<sp/>also<sp/>an<sp/>MPI<sp/>environment<sp/>value<sp/>for<sp/>that,<sp/>but<sp/>somehow<sp/>it<sp/>doesn&apos;t<sp/>work<sp/>using<sp/>that</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Also<sp/>reserve<sp/>10<sp/>tags<sp/>for<sp/>other<sp/>uses</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/>constexpr<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxTagValue<sp/>=<sp/>32767<sp/>-<sp/>10;</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceNeoFOAM_1aa8ea339f1c9a4f2232da876ead30a82c" kindref="member">std::size_t</ref><sp/>tag<sp/>=<sp/>std::hash&lt;std::string&gt;<sp/>{}(str);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>tag<sp/>&amp;=<sp/>0x7FFFFFFF;<sp/></highlight><highlight class="comment">//<sp/>turn<sp/>&apos;int&apos;<sp/>signed<sp/>bit<sp/>to<sp/>0,<sp/>MPI<sp/>does<sp/>not<sp/>like<sp/>negative<sp/>tags.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">int</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(tag)<sp/>%<sp/>maxTagValue)<sp/>+<sp/>10;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">}</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer" kindref="compound">HalfDuplexCommBuffer</ref></highlight></codeline>
<codeline lineno="49"><highlight class="normal">{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1af20e262c707a7781915bda4984064d07" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1af20e262c707a7781915bda4984064d07" kindref="member">HalfDuplexCommBuffer</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1aa15ac8d9ca7064025bdbe555c6b4fa0f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1aa15ac8d9ca7064025bdbe555c6b4fa0f" kindref="member">~HalfDuplexCommBuffer</ref>()<sp/>=<sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a17ed0f8a3ecea469e55424d9ffa53f9c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a17ed0f8a3ecea469e55424d9ffa53f9c" kindref="member">HalfDuplexCommBuffer</ref>(<ref refid="classNeoFOAM_1_1mpi_1_1MPIEnvironment" kindref="compound">MPIEnvironment</ref><sp/>mpiEnviron,<sp/>std::vector&lt;size_t&gt;<sp/>rankCommSize)</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>:<sp/>mpiEnviron_(mpiEnviron)</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setCommRankSize&lt;char&gt;(rankCommSize);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1acf1cf11b08fda65368dcb759e2bf7aa8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1acf1cf11b08fda65368dcb759e2bf7aa8" kindref="member">setMPIEnvironment</ref>(<ref refid="classNeoFOAM_1_1mpi_1_1MPIEnvironment" kindref="compound">MPIEnvironment</ref><sp/>mpiEnviron)<sp/>{<sp/>mpiEnviron_<sp/>=<sp/>mpiEnviron;<sp/>}</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a29345f3444c1ec304ad99e779bdcacd9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a29345f3444c1ec304ad99e779bdcacd9" kindref="member">isCommInit</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tag_<sp/>!=<sp/>-1;<sp/>}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>valueType&gt;</highlight></codeline>
<codeline lineno="96" refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a46a963471bc9447a4a291298e159dc7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a46a963471bc9447a4a291298e159dc7a" kindref="member">setCommRankSize</ref>(std::vector&lt;size_t&gt;<sp/>rankCommSize)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1af1af39ea56903b56ed322432441511b5" kindref="member">NF_DEBUG_ASSERT</ref>(</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a29345f3444c1ec304ad99e779bdcacd9" kindref="member">isCommInit</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;Communication<sp/>buffer<sp/>was<sp/>initialised<sp/>by<sp/>name:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>commName_<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1af1af39ea56903b56ed322432441511b5" kindref="member">NF_DEBUG_ASSERT</ref>(</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rankCommSize.size()<sp/>==<sp/>mpiEnviron_.<ref refid="classNeoFOAM_1_1mpi_1_1MPIEnvironment_1ae0adf6f31335c281e2b610c1e7e1c75b" kindref="member">sizeRank</ref>(),</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Rank<sp/>size<sp/>mismatch.<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>rankCommSize.size()<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>vs.<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>mpiEnviron_.<ref refid="classNeoFOAM_1_1mpi_1_1MPIEnvironment_1ae0adf6f31335c281e2b610c1e7e1c75b" kindref="member">sizeRank</ref>()</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typeSize_<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(valueType);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rankOffset_.resize(rankCommSize.size()<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>request_.resize(rankCommSize.size(),<sp/>MPI_REQUEST_NULL);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateDataSize([&amp;](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rank)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>rankCommSize[rank];<sp/>},<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(valueType));</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>valueType&gt;</highlight></codeline>
<codeline lineno="118" refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a935964993a596bbe5f84d83ed85478f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a935964993a596bbe5f84d83ed85478f9" kindref="member">initComm</ref>(std::string<sp/>commName)</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1af1af39ea56903b56ed322432441511b5" kindref="member">NF_DEBUG_ASSERT</ref>(</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a29345f3444c1ec304ad99e779bdcacd9" kindref="member">isCommInit</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;Communication<sp/>buffer<sp/>was<sp/>initialised<sp/>by<sp/>name:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>commName_<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>setType&lt;valueType&gt;();</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>commName_<sp/>=<sp/>commName;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tag_<sp/>=<sp/><ref refid="namespaceNeoFOAM_1_1mpi_1a9c3c67ea5fefe92c9f5b59fe2c3e7ca8" kindref="member">bufferHash</ref>(commName);</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1ad02ee9b9b080d282b25b423d47d6e682" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>std::string&amp;<sp/><ref refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1ad02ee9b9b080d282b25b423d47d6e682" kindref="member">getCommName</ref>()</highlight><highlight class="keyword"><sp/>const<sp/></highlight><highlight class="normal">{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>commName_;<sp/>}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="139" refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a5799d6a1ccf218debf777b7de25e1be9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a5799d6a1ccf218debf777b7de25e1be9" kindref="member">isComplete</ref>();</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="144" refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a06def9638137dd2e815c12df3329a633" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a06def9638137dd2e815c12df3329a633" kindref="member">send</ref>();</highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight></codeline>
<codeline lineno="150" refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a4ac0d9f5d3deac6d7ecc1f06f0467f3a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a4ac0d9f5d3deac6d7ecc1f06f0467f3a" kindref="member">receive</ref>();</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a70e8643078efa5b90942e97595081c8b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a70e8643078efa5b90942e97595081c8b" kindref="member">waitComplete</ref>();</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1ada5a5b37dfa7308c580971c6e2569337" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1ada5a5b37dfa7308c580971c6e2569337" kindref="member">finaliseComm</ref>();</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>valueType&gt;</highlight></codeline>
<codeline lineno="170" refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1ac23a3c38b343a9f88e66f8a6b6fd0c4d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::span&lt;valueType&gt;<sp/><ref refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1ac23a3c38b343a9f88e66f8a6b6fd0c4d" kindref="member">get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rank)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1af1af39ea56903b56ed322432441511b5" kindref="member">NF_DEBUG_ASSERT</ref>(<ref refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a29345f3444c1ec304ad99e779bdcacd9" kindref="member">isCommInit</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;Communication<sp/>buffer<sp/>is<sp/>not<sp/>initialised.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1af1af39ea56903b56ed322432441511b5" kindref="member">NF_DEBUG_ASSERT</ref>(typeSize_<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(valueType),<sp/></highlight><highlight class="stringliteral">&quot;Data<sp/>type<sp/>(size)<sp/>mismatch.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::span&lt;valueType&gt;(</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="normal">valueType*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(rankBuffer_.data()<sp/>+<sp/>rankOffset_[rank]),</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(rankOffset_[rank<sp/>+<sp/>1]<sp/>-<sp/>rankOffset_[rank])<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(valueType)</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>valueType&gt;</highlight></codeline>
<codeline lineno="188" refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a5096217bbceb05ed3368487e76eb6b89" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::span&lt;const<sp/>valueType&gt;<sp/><ref refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a5096217bbceb05ed3368487e76eb6b89" kindref="member">get</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rank)</highlight><highlight class="keyword"><sp/>const</highlight></codeline>
<codeline lineno="189"><highlight class="keyword"><sp/><sp/><sp/><sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1af1af39ea56903b56ed322432441511b5" kindref="member">NF_DEBUG_ASSERT</ref>(<ref refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a29345f3444c1ec304ad99e779bdcacd9" kindref="member">isCommInit</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;Communication<sp/>buffer<sp/>is<sp/>not<sp/>initialised.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1af1af39ea56903b56ed322432441511b5" kindref="member">NF_DEBUG_ASSERT</ref>(typeSize_<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(valueType),<sp/></highlight><highlight class="stringliteral">&quot;Data<sp/>type<sp/>(size)<sp/>mismatch.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>std::span&lt;const<sp/>valueType&gt;(</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keyword">const<sp/></highlight><highlight class="normal">valueType*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(rankBuffer_.data()<sp/>+<sp/>rankOffset_[rank]),</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(rankOffset_[rank<sp/>+<sp/>1]<sp/>-<sp/>rankOffset_[rank])<sp/>/<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(valueType)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>tag_<sp/>{-1};<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*&lt;<sp/>The<sp/>tag<sp/>for<sp/>the<sp/>communication.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>commName_<sp/>{</highlight><highlight class="stringliteral">&quot;unassigned&quot;</highlight><highlight class="normal">};<sp/></highlight><highlight class="comment">/*&lt;<sp/>The<sp/>name<sp/>of<sp/>the<sp/>communication.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceNeoFOAM_1aa8ea339f1c9a4f2232da876ead30a82c" kindref="member">std::size_t</ref><sp/>typeSize_<sp/>{</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(char)};<sp/></highlight><highlight class="comment">/*&lt;<sp/>The<sp/>data<sp/>type<sp/>currently<sp/>stored<sp/>in<sp/>the<sp/>buffer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>MPIEnvironment<sp/>mpiEnviron_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*&lt;<sp/>The<sp/>MPI<sp/>environment.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;MPI_Request&gt;<sp/>request_;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*&lt;<sp/>The<sp/>MPI<sp/>request<sp/>for<sp/>communication<sp/>with<sp/>each<sp/>rank.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;char&gt;<sp/>rankBuffer_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*&lt;<sp/>The<sp/>buffer<sp/>data<sp/>for<sp/>all<sp/>ranks.<sp/>Never<sp/>shrinks.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;std::size_t&gt;</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rankOffset_;<sp/></highlight><highlight class="comment">/*&lt;<sp/>The<sp/>offset<sp/>(in<sp/>bytes)<sp/>for<sp/>a<sp/>rank<sp/>data<sp/>in<sp/>the<sp/>buffer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>valueType&gt;</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>setType()</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1af1af39ea56903b56ed322432441511b5" kindref="member">NF_DEBUG_ASSERT</ref>(</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>!<ref refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a29345f3444c1ec304ad99e779bdcacd9" kindref="member">isCommInit</ref>(),<sp/></highlight><highlight class="stringliteral">&quot;Communication<sp/>buffer<sp/>was<sp/>initialised<sp/>by<sp/>name:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>commName_<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;.&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(0<sp/>==<sp/>(typeSize_<sp/>-<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(valueType)))<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>updateDataSize(</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[rankOffset<sp/>=<sp/>rankOffset_,<sp/>typeSize<sp/>=<sp/>typeSize_](</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rank)</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(rankOffset[rank<sp/>+<sp/>1]<sp/>-<sp/>rankOffset[rank])<sp/>/<sp/>typeSize;<sp/>},</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(valueType)</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>typeSize_<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(valueType);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>func&gt;</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>updateDataSize(func<sp/>rankSize,<sp/><ref refid="namespaceNeoFOAM_1aa8ea339f1c9a4f2232da876ead30a82c" kindref="member">std::size_t</ref><sp/>newSize)</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceNeoFOAM_1aa8ea339f1c9a4f2232da876ead30a82c" kindref="member">std::size_t</ref><sp/>dataSize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>rank<sp/>=<sp/>0;<sp/>rank<sp/>&lt;<sp/>mpiEnviron_.sizeRank();<sp/>++rank)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rankOffset_[rank]<sp/>=<sp/>dataSize;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataSize<sp/>+=<sp/>rankSize(rank)<sp/>*<sp/>newSize;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rankOffset_.back()<sp/>=<sp/>dataSize;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rankBuffer_.size()<sp/>&lt;<sp/>dataSize)<sp/>rankBuffer_.resize(dataSize);<sp/></highlight><highlight class="comment">//<sp/>we<sp/>never<sp/>size<sp/>down.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="247"><highlight class="normal">};</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal">}</highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp"/>
  </compounddef>
</doxygen>
