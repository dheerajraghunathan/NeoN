<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classNeoFOAM_1_1Matrix" kind="class" language="C++" prot="public">
    <compoundname>NeoFOAM::Matrix</compoundname>
    <includes refid="linearAlgebra_2linearAlgebra_8hpp" local="no">linearAlgebra.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename ValueType</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classNeoFOAM_1_1Matrix_1a463bb90b1ca782c8db540224f4c6decc" prot="private" static="no" mutable="no">
        <type>std::shared_ptr&lt; gko::matrix::Coo&lt; ValueType, <ref refid="namespaceNeoFOAM_1a7c2c6a7a7bda94e9fb289fd81b96f745" kindref="member">label</ref> &gt; &gt;</type>
        <definition>std::shared_ptr&lt;gko::matrix::Coo&lt;ValueType, label&gt; &gt; NeoFOAM::Matrix&lt; ValueType &gt;::mtx</definition>
        <argsstring></argsstring>
        <name>mtx</name>
        <qualifiedname>NeoFOAM::Matrix::mtx</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearAlgebra.hpp" line="138" column="21" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearAlgebra.hpp" bodystart="138" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classNeoFOAM_1_1Matrix_1ad375372ce11e8e4fc539630ebf6628d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoFOAM::Matrix&lt; ValueType &gt;::Matrix</definition>
        <argsstring>()</argsstring>
        <name>Matrix</name>
        <qualifiedname>NeoFOAM::Matrix::Matrix</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearAlgebra.hpp" line="108" column="5" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearAlgebra.hpp" bodystart="108" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1Matrix_1a3eb34416aee887f82d288a888c742ed8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoFOAM::Matrix&lt; ValueType &gt;::Matrix</definition>
        <argsstring>(GinkgoMatrixAssembly&lt; ValueType, int &gt; &amp;&amp;matrixAssembly)</argsstring>
        <name>Matrix</name>
        <qualifiedname>NeoFOAM::Matrix::Matrix</qualifiedname>
        <param>
          <type><ref refid="structNeoFOAM_1_1GinkgoMatrixAssembly" kindref="compound">GinkgoMatrixAssembly</ref>&lt; ValueType, int &gt; &amp;&amp;</type>
          <declname>matrixAssembly</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearAlgebra.hpp" line="109" column="5" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearAlgebra.hpp" bodystart="109" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1Matrix_1afe3f5661cdcc5458913263b390914cb4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NeoFOAM::Matrix&lt; ValueType &gt;::apply</definition>
        <argsstring>(const Field&lt; ValueType &gt; &amp;in, Field&lt; ValueType &gt; &amp;out)</argsstring>
        <name>apply</name>
        <qualifiedname>NeoFOAM::Matrix::apply</qualifiedname>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1Field" kindref="compound">Field</ref>&lt; ValueType &gt; &amp;</type>
          <declname>in</declname>
        </param>
        <param>
          <type><ref refid="classNeoFOAM_1_1Field" kindref="compound">Field</ref>&lt; ValueType &gt; &amp;</type>
          <declname>out</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearAlgebra.hpp" line="118" column="10" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearAlgebra.hpp" bodystart="118" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1Matrix_1af211f49638b9fb16f8446129795f051e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>auto *</type>
        <definition>auto * NeoFOAM::Matrix&lt; ValueType &gt;::getUnderlyingData</definition>
        <argsstring>()</argsstring>
        <name>getUnderlyingData</name>
        <qualifiedname>NeoFOAM::Matrix::getUnderlyingData</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearAlgebra.hpp" line="134" column="10" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearAlgebra.hpp" bodystart="134" bodyend="134"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearAlgebra.hpp" line="104" column="1" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearAlgebra.hpp" bodystart="105" bodyend="139"/>
    <listofallmembers>
      <member refid="classNeoFOAM_1_1Matrix_1afe3f5661cdcc5458913263b390914cb4" prot="public" virt="non-virtual"><scope>NeoFOAM::Matrix</scope><name>apply</name></member>
      <member refid="classNeoFOAM_1_1Matrix_1af211f49638b9fb16f8446129795f051e" prot="public" virt="non-virtual"><scope>NeoFOAM::Matrix</scope><name>getUnderlyingData</name></member>
      <member refid="classNeoFOAM_1_1Matrix_1ad375372ce11e8e4fc539630ebf6628d2" prot="public" virt="non-virtual"><scope>NeoFOAM::Matrix</scope><name>Matrix</name></member>
      <member refid="classNeoFOAM_1_1Matrix_1a3eb34416aee887f82d288a888c742ed8" prot="public" virt="non-virtual"><scope>NeoFOAM::Matrix</scope><name>Matrix</name></member>
      <member refid="classNeoFOAM_1_1Matrix_1a463bb90b1ca782c8db540224f4c6decc" prot="private" virt="non-virtual"><scope>NeoFOAM::Matrix</scope><name>mtx</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
