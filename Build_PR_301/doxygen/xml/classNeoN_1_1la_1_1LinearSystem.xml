<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classNeoN_1_1la_1_1LinearSystem" kind="class" language="C++" prot="public">
    <compoundname>NeoN::la::LinearSystem</compoundname>
    <includes refid="linearSystem_8hpp" local="no">linearSystem.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename ValueType</type>
      </param>
      <param>
        <type>typename IndexType</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classNeoN_1_1la_1_1LinearSystem_1aa5fe62b88e1638abe6e620e455de17c1" prot="private" static="no" mutable="no">
        <type><ref refid="classNeoN_1_1la_1_1CSRMatrix" kindref="compound">CSRMatrix</ref>&lt; ValueType, IndexType &gt;</type>
        <definition>CSRMatrix&lt;ValueType, IndexType&gt; NeoN::la::LinearSystem&lt; ValueType, IndexType &gt;::matrix_</definition>
        <argsstring></argsstring>
        <name>matrix_</name>
        <qualifiedname>NeoN::la::LinearSystem::matrix_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearSystem.hpp" line="97" column="15" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearSystem.hpp" bodystart="97" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoN_1_1la_1_1LinearSystem_1a421a4f9dc671be98c01aaddf161cc593" prot="private" static="no" mutable="no">
        <type><ref refid="classNeoN_1_1Field" kindref="compound">Field</ref>&lt; ValueType &gt;</type>
        <definition>Field&lt;ValueType&gt; NeoN::la::LinearSystem&lt; ValueType, IndexType &gt;::rhs_</definition>
        <argsstring></argsstring>
        <name>rhs_</name>
        <qualifiedname>NeoN::la::LinearSystem::rhs_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearSystem.hpp" line="98" column="11" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearSystem.hpp" bodystart="98" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classNeoN_1_1la_1_1LinearSystem_1a26cab309c0e1d64021fc84806b487e35" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoN::la::LinearSystem&lt; ValueType, IndexType &gt;::LinearSystem</definition>
        <argsstring>(const CSRMatrix&lt; ValueType, IndexType &gt; &amp;matrix, const Field&lt; ValueType &gt; &amp;rhs)</argsstring>
        <name>LinearSystem</name>
        <qualifiedname>NeoN::la::LinearSystem::LinearSystem</qualifiedname>
        <param>
          <type>const <ref refid="classNeoN_1_1la_1_1CSRMatrix" kindref="compound">CSRMatrix</ref>&lt; ValueType, IndexType &gt; &amp;</type>
          <declname>matrix</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoN_1_1Field" kindref="compound">Field</ref>&lt; ValueType &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearSystem.hpp" line="47" column="5" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearSystem.hpp" bodystart="47" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1la_1_1LinearSystem_1a7a164f0361b5f26a6d517534cf650b5b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoN::la::LinearSystem&lt; ValueType, IndexType &gt;::LinearSystem</definition>
        <argsstring>(const LinearSystem &amp;ls)</argsstring>
        <name>LinearSystem</name>
        <qualifiedname>NeoN::la::LinearSystem::LinearSystem</qualifiedname>
        <param>
          <type>const <ref refid="classNeoN_1_1la_1_1LinearSystem" kindref="compound">LinearSystem</ref> &amp;</type>
          <declname>ls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearSystem.hpp" line="54" column="5" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearSystem.hpp" bodystart="54" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1la_1_1LinearSystem_1a98aef1fcbf093939bc3ea967f1b7610f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoN::la::LinearSystem&lt; ValueType, IndexType &gt;::LinearSystem</definition>
        <argsstring>(const Executor exec)</argsstring>
        <name>LinearSystem</name>
        <qualifiedname>NeoN::la::LinearSystem::LinearSystem</qualifiedname>
        <param>
          <type>const <ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref></type>
          <declname>exec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearSystem.hpp" line="56" column="5" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearSystem.hpp" bodystart="56" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1la_1_1LinearSystem_1a8c24b8b0b48f97c7a91bd884dfa5b019" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NeoN::la::LinearSystem&lt; ValueType, IndexType &gt;::~LinearSystem</definition>
        <argsstring>()=default</argsstring>
        <name>~LinearSystem</name>
        <qualifiedname>NeoN::la::LinearSystem::~LinearSystem</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearSystem.hpp" line="58" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1la_1_1LinearSystem_1a416fd6d5122482fcc2372590bc10b8f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoN_1_1la_1_1CSRMatrix" kindref="compound">CSRMatrix</ref>&lt; ValueType, IndexType &gt; &amp;</type>
        <definition>CSRMatrix&lt; ValueType, IndexType &gt; &amp; NeoN::la::LinearSystem&lt; ValueType, IndexType &gt;::matrix</definition>
        <argsstring>()</argsstring>
        <name>matrix</name>
        <qualifiedname>NeoN::la::LinearSystem::matrix</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearSystem.hpp" line="60" column="16" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearSystem.hpp" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1la_1_1LinearSystem_1a4d6200c0e1a5f1d9d274f923991bdaad" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoN_1_1Field" kindref="compound">Field</ref>&lt; ValueType &gt; &amp;</type>
        <definition>Field&lt; ValueType &gt; &amp; NeoN::la::LinearSystem&lt; ValueType, IndexType &gt;::rhs</definition>
        <argsstring>()</argsstring>
        <name>rhs</name>
        <qualifiedname>NeoN::la::LinearSystem::rhs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearSystem.hpp" line="62" column="12" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearSystem.hpp" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1la_1_1LinearSystem_1a18bd8cefa6ab9d8df2bc931fb953b633" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classNeoN_1_1la_1_1CSRMatrix" kindref="compound">CSRMatrix</ref>&lt; ValueType, IndexType &gt; &amp;</type>
        <definition>const CSRMatrix&lt; ValueType, IndexType &gt; &amp; NeoN::la::LinearSystem&lt; ValueType, IndexType &gt;::matrix</definition>
        <argsstring>() const</argsstring>
        <name>matrix</name>
        <qualifiedname>NeoN::la::LinearSystem::matrix</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearSystem.hpp" line="64" column="22" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearSystem.hpp" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1la_1_1LinearSystem_1abe4eb342da01c4d96c4781e5e7e39efa" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classNeoN_1_1Field" kindref="compound">Field</ref>&lt; ValueType &gt; &amp;</type>
        <definition>const Field&lt; ValueType &gt; &amp; NeoN::la::LinearSystem&lt; ValueType, IndexType &gt;::rhs</definition>
        <argsstring>() const</argsstring>
        <name>rhs</name>
        <qualifiedname>NeoN::la::LinearSystem::rhs</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearSystem.hpp" line="66" column="18" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearSystem.hpp" bodystart="66" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1la_1_1LinearSystem_1a5037a1bacaeea8253ce1849339669687" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoN_1_1la_1_1LinearSystem" kindref="compound">LinearSystem</ref></type>
        <definition>LinearSystem NeoN::la::LinearSystem&lt; ValueType, IndexType &gt;::copyToHost</definition>
        <argsstring>() const</argsstring>
        <name>copyToHost</name>
        <qualifiedname>NeoN::la::LinearSystem::copyToHost</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearSystem.hpp" line="68" column="19" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearSystem.hpp" bodystart="68" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1la_1_1LinearSystem_1a60e4fbaa89ccee0e8540c4d4c2a3c38f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NeoN::la::LinearSystem&lt; ValueType, IndexType &gt;::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <qualifiedname>NeoN::la::LinearSystem::reset</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearSystem.hpp" line="73" column="10" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearSystem.hpp" bodystart="73" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1la_1_1LinearSystem_1ad00f3e7eab80d4a8b35c8a70071ba6d9" prot="public" static="no" const="no" explicit="no" inline="no" refqual="rvalue" virt="non-virtual">
        <type><ref refid="structNeoN_1_1la_1_1LinearSystemView" kindref="compound">LinearSystemView</ref>&lt; ValueType, IndexType &gt;</type>
        <definition>LinearSystemView&lt; ValueType, IndexType &gt; NeoN::la::LinearSystem&lt; ValueType, IndexType &gt;::view</definition>
        <argsstring>() &amp;&amp;=delete</argsstring>
        <name>view</name>
        <qualifiedname>NeoN::la::LinearSystem::view</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearSystem.hpp" line="79" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1la_1_1LinearSystem_1a1b9f9ed3c857ab92398bb44c910670d2" prot="public" static="no" const="yes" explicit="no" inline="no" refqual="rvalue" virt="non-virtual">
        <type><ref refid="structNeoN_1_1la_1_1LinearSystemView" kindref="compound">LinearSystemView</ref>&lt; ValueType, IndexType &gt;</type>
        <definition>LinearSystemView&lt; ValueType, IndexType &gt; NeoN::la::LinearSystem&lt; ValueType, IndexType &gt;::view</definition>
        <argsstring>() const &amp;&amp;=delete</argsstring>
        <name>view</name>
        <qualifiedname>NeoN::la::LinearSystem::view</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearSystem.hpp" line="81" column="23"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1la_1_1LinearSystem_1a4fe783b48576e44b87a352a3528a87ee" prot="public" static="no" const="no" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <type><ref refid="structNeoN_1_1la_1_1LinearSystemView" kindref="compound">LinearSystemView</ref>&lt; ValueType, IndexType &gt;</type>
        <definition>LinearSystemView&lt; ValueType, IndexType &gt; NeoN::la::LinearSystem&lt; ValueType, IndexType &gt;::view</definition>
        <argsstring>() &amp;</argsstring>
        <name>view</name>
        <qualifiedname>NeoN::la::LinearSystem::view</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearSystem.hpp" line="83" column="23" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearSystem.hpp" bodystart="83" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1la_1_1LinearSystem_1a99feb73536d23fc1241b2c5e883d6a84" prot="public" static="no" const="yes" explicit="no" inline="yes" refqual="lvalue" virt="non-virtual">
        <type><ref refid="structNeoN_1_1la_1_1LinearSystemView" kindref="compound">LinearSystemView</ref>&lt; const ValueType, const IndexType &gt;</type>
        <definition>LinearSystemView&lt; const ValueType, const IndexType &gt; NeoN::la::LinearSystem&lt; ValueType, IndexType &gt;::view</definition>
        <argsstring>() const &amp;</argsstring>
        <name>view</name>
        <qualifiedname>NeoN::la::LinearSystem::view</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearSystem.hpp" line="88" column="23" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearSystem.hpp" bodystart="88" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1la_1_1LinearSystem_1abe338ae8538049aa833e2ad71f7bb573" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref> &amp;</type>
        <definition>const Executor &amp; NeoN::la::LinearSystem&lt; ValueType, IndexType &gt;::exec</definition>
        <argsstring>() const</argsstring>
        <name>exec</name>
        <qualifiedname>NeoN::la::LinearSystem::exec</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearSystem.hpp" line="93" column="20" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearSystem.hpp" bodystart="93" bodyend="93"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A class representing a linear system of equations. </para>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="classNeoN_1_1la_1_1LinearSystem" kindref="compound">LinearSystem</ref> class provides functionality to store and manipulate a linear system of equations. It supports the storage of the coefficient matrix and the right-hand side vector, as well as the solution vector. </para>
    </detaileddescription>
    <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearSystem.hpp" line="43" column="1" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/linearSystem.hpp" bodystart="44" bodyend="99"/>
    <listofallmembers>
      <member refid="classNeoN_1_1la_1_1LinearSystem_1a5037a1bacaeea8253ce1849339669687" prot="public" virt="non-virtual"><scope>NeoN::la::LinearSystem</scope><name>copyToHost</name></member>
      <member refid="classNeoN_1_1la_1_1LinearSystem_1abe338ae8538049aa833e2ad71f7bb573" prot="public" virt="non-virtual"><scope>NeoN::la::LinearSystem</scope><name>exec</name></member>
      <member refid="classNeoN_1_1la_1_1LinearSystem_1a26cab309c0e1d64021fc84806b487e35" prot="public" virt="non-virtual"><scope>NeoN::la::LinearSystem</scope><name>LinearSystem</name></member>
      <member refid="classNeoN_1_1la_1_1LinearSystem_1a7a164f0361b5f26a6d517534cf650b5b" prot="public" virt="non-virtual"><scope>NeoN::la::LinearSystem</scope><name>LinearSystem</name></member>
      <member refid="classNeoN_1_1la_1_1LinearSystem_1a98aef1fcbf093939bc3ea967f1b7610f" prot="public" virt="non-virtual"><scope>NeoN::la::LinearSystem</scope><name>LinearSystem</name></member>
      <member refid="classNeoN_1_1la_1_1LinearSystem_1a416fd6d5122482fcc2372590bc10b8f9" prot="public" virt="non-virtual"><scope>NeoN::la::LinearSystem</scope><name>matrix</name></member>
      <member refid="classNeoN_1_1la_1_1LinearSystem_1a18bd8cefa6ab9d8df2bc931fb953b633" prot="public" virt="non-virtual"><scope>NeoN::la::LinearSystem</scope><name>matrix</name></member>
      <member refid="classNeoN_1_1la_1_1LinearSystem_1aa5fe62b88e1638abe6e620e455de17c1" prot="private" virt="non-virtual"><scope>NeoN::la::LinearSystem</scope><name>matrix_</name></member>
      <member refid="classNeoN_1_1la_1_1LinearSystem_1a60e4fbaa89ccee0e8540c4d4c2a3c38f" prot="public" virt="non-virtual"><scope>NeoN::la::LinearSystem</scope><name>reset</name></member>
      <member refid="classNeoN_1_1la_1_1LinearSystem_1a4d6200c0e1a5f1d9d274f923991bdaad" prot="public" virt="non-virtual"><scope>NeoN::la::LinearSystem</scope><name>rhs</name></member>
      <member refid="classNeoN_1_1la_1_1LinearSystem_1abe4eb342da01c4d96c4781e5e7e39efa" prot="public" virt="non-virtual"><scope>NeoN::la::LinearSystem</scope><name>rhs</name></member>
      <member refid="classNeoN_1_1la_1_1LinearSystem_1a421a4f9dc671be98c01aaddf161cc593" prot="private" virt="non-virtual"><scope>NeoN::la::LinearSystem</scope><name>rhs_</name></member>
      <member refid="classNeoN_1_1la_1_1LinearSystem_1ad00f3e7eab80d4a8b35c8a70071ba6d9" prot="public" virt="non-virtual"><scope>NeoN::la::LinearSystem</scope><name>view</name></member>
      <member refid="classNeoN_1_1la_1_1LinearSystem_1a1b9f9ed3c857ab92398bb44c910670d2" prot="public" virt="non-virtual"><scope>NeoN::la::LinearSystem</scope><name>view</name></member>
      <member refid="classNeoN_1_1la_1_1LinearSystem_1a4fe783b48576e44b87a352a3528a87ee" prot="public" virt="non-virtual"><scope>NeoN::la::LinearSystem</scope><name>view</name></member>
      <member refid="classNeoN_1_1la_1_1LinearSystem_1a99feb73536d23fc1241b2c5e883d6a84" prot="public" virt="non-virtual"><scope>NeoN::la::LinearSystem</scope><name>view</name></member>
      <member refid="classNeoN_1_1la_1_1LinearSystem_1a8c24b8b0b48f97c7a91bd884dfa5b019" prot="public" virt="non-virtual"><scope>NeoN::la::LinearSystem</scope><name>~LinearSystem</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
