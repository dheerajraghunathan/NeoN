<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classNeoN_1_1dsl_1_1Expression" kind="class" language="C++" prot="public">
    <compoundname>NeoN::dsl::Expression</compoundname>
    <includes refid="dsl_2expression_8hpp" local="no">expression.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename ValueType</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classNeoN_1_1dsl_1_1Expression_1acbe0f3424749808eef20baa53ab82342" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref></type>
        <definition>const Executor NeoN::dsl::Expression&lt; ValueType &gt;::exec_</definition>
        <argsstring></argsstring>
        <name>exec_</name>
        <qualifiedname>NeoN::dsl::Expression::exec_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="145" column="20" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoN_1_1dsl_1_1Expression_1a42bbff3e093e55478b29c579028c50d1" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classNeoN_1_1dsl_1_1TemporalOperator" kindref="compound">TemporalOperator</ref>&lt; ValueType &gt; &gt;</type>
        <definition>std::vector&lt;TemporalOperator&lt;ValueType&gt; &gt; NeoN::dsl::Expression&lt; ValueType &gt;::temporalOperators_</definition>
        <argsstring></argsstring>
        <name>temporalOperators_</name>
        <qualifiedname>NeoN::dsl::Expression::temporalOperators_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="147" column="17" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoN_1_1dsl_1_1Expression_1a7b947245d46a792731295a8cf521c9f1" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classNeoN_1_1dsl_1_1SpatialOperator" kindref="compound">SpatialOperator</ref>&lt; ValueType &gt; &gt;</type>
        <definition>std::vector&lt;SpatialOperator&lt;ValueType&gt; &gt; NeoN::dsl::Expression&lt; ValueType &gt;::spatialOperators_</definition>
        <argsstring></argsstring>
        <name>spatialOperators_</name>
        <qualifiedname>NeoN::dsl::Expression::spatialOperators_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="149" column="17" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="149" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classNeoN_1_1dsl_1_1Expression_1a5cfc1aba5312d6de2130944259d189e9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoN::dsl::Expression&lt; ValueType &gt;::Expression</definition>
        <argsstring>(const Executor &amp;exec)</argsstring>
        <name>Expression</name>
        <qualifiedname>NeoN::dsl::Expression::Expression</qualifiedname>
        <param>
          <type>const <ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref> &amp;</type>
          <declname>exec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="27" column="5" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1dsl_1_1Expression_1ac227f4528d618d94c0d507fe181a7bf8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoN::dsl::Expression&lt; ValueType &gt;::Expression</definition>
        <argsstring>(const Expression &amp;exp)</argsstring>
        <name>Expression</name>
        <qualifiedname>NeoN::dsl::Expression::Expression</qualifiedname>
        <param>
          <type>const <ref refid="classNeoN_1_1dsl_1_1Expression" kindref="compound">Expression</ref> &amp;</type>
          <declname>exp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="29" column="5" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1dsl_1_1Expression_1ab0d9e2020ea176aaa07f81f414508c04" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NeoN::dsl::Expression&lt; ValueType &gt;::build</definition>
        <argsstring>(const Dictionary &amp;input)</argsstring>
        <name>build</name>
        <qualifiedname>NeoN::dsl::Expression::build</qualifiedname>
        <param>
          <type>const <ref refid="classNeoN_1_1Dictionary" kindref="compound">Dictionary</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="34" column="10" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="34" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1dsl_1_1Expression_1aee43e04f4d34af1e1eed3e7f3723b9c6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoN_1_1Field" kindref="compound">Field</ref>&lt; ValueType &gt;</type>
        <definition>Field&lt; ValueType &gt; NeoN::dsl::Expression&lt; ValueType &gt;::explicitOperation</definition>
        <argsstring>(size_t nCells) const</argsstring>
        <name>explicitOperation</name>
        <qualifiedname>NeoN::dsl::Expression::explicitOperation</qualifiedname>
        <param>
          <type><ref refid="namespaceNeoN_1a5ea7bf3a45fbcf9c6ee454474ab13c06" kindref="member">size_t</ref></type>
          <declname>nCells</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="47" column="11" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="47" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1dsl_1_1Expression_1a8e779b6d6b2ec17c2bcd6dc3adfa9d10" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoN_1_1Field" kindref="compound">Field</ref>&lt; ValueType &gt;</type>
        <definition>Field&lt; ValueType &gt; NeoN::dsl::Expression&lt; ValueType &gt;::explicitOperation</definition>
        <argsstring>(Field&lt; ValueType &gt; &amp;source) const</argsstring>
        <name>explicitOperation</name>
        <qualifiedname>NeoN::dsl::Expression::explicitOperation</qualifiedname>
        <param>
          <type><ref refid="classNeoN_1_1Field" kindref="compound">Field</ref>&lt; ValueType &gt; &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="54" column="11" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="54" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1dsl_1_1Expression_1a1859f25d2ce4cafbd8d69befa32df4a4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoN_1_1Field" kindref="compound">Field</ref>&lt; ValueType &gt;</type>
        <definition>Field&lt; ValueType &gt; NeoN::dsl::Expression&lt; ValueType &gt;::explicitOperation</definition>
        <argsstring>(Field&lt; ValueType &gt; &amp;source, scalar t, scalar dt) const</argsstring>
        <name>explicitOperation</name>
        <qualifiedname>NeoN::dsl::Expression::explicitOperation</qualifiedname>
        <param>
          <type><ref refid="classNeoN_1_1Field" kindref="compound">Field</ref>&lt; ValueType &gt; &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref></type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="66" column="11" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="66" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1dsl_1_1Expression_1a527d62bdba68730f6fd2e65fb6643a41" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NeoN::dsl::Expression&lt; ValueType &gt;::implicitOperation</definition>
        <argsstring>(la::LinearSystem&lt; ValueType, localIdx &gt; &amp;ls)</argsstring>
        <name>implicitOperation</name>
        <qualifiedname>NeoN::dsl::Expression::implicitOperation</qualifiedname>
        <param>
          <type><ref refid="classNeoN_1_1la_1_1LinearSystem" kindref="compound">la::LinearSystem</ref>&lt; ValueType, <ref refid="namespaceNeoN_1af0b7553899fd421d905a302d61334be3" kindref="member">localIdx</ref> &gt; &amp;</type>
          <declname>ls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="80" column="10" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="80" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1dsl_1_1Expression_1a5faf37ec9ea2e49a38432e3abedc9aed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NeoN::dsl::Expression&lt; ValueType &gt;::implicitOperation</definition>
        <argsstring>(la::LinearSystem&lt; ValueType, localIdx &gt; &amp;ls, scalar t, scalar dt)</argsstring>
        <name>implicitOperation</name>
        <qualifiedname>NeoN::dsl::Expression::implicitOperation</qualifiedname>
        <param>
          <type><ref refid="classNeoN_1_1la_1_1LinearSystem" kindref="compound">la::LinearSystem</ref>&lt; ValueType, <ref refid="namespaceNeoN_1af0b7553899fd421d905a302d61334be3" kindref="member">localIdx</ref> &gt; &amp;</type>
          <declname>ls</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref></type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="91" column="10" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="91" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1dsl_1_1Expression_1a962146977092abb074c409b5d09a16e1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NeoN::dsl::Expression&lt; ValueType &gt;::addOperator</definition>
        <argsstring>(const SpatialOperator&lt; ValueType &gt; &amp;oper)</argsstring>
        <name>addOperator</name>
        <qualifiedname>NeoN::dsl::Expression::addOperator</qualifiedname>
        <param>
          <type>const <ref refid="classNeoN_1_1dsl_1_1SpatialOperator" kindref="compound">SpatialOperator</ref>&lt; ValueType &gt; &amp;</type>
          <declname>oper</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="103" column="10" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="103" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1dsl_1_1Expression_1a769ee099e363146dbff60666b62c2a6e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NeoN::dsl::Expression&lt; ValueType &gt;::addOperator</definition>
        <argsstring>(const TemporalOperator&lt; ValueType &gt; &amp;oper)</argsstring>
        <name>addOperator</name>
        <qualifiedname>NeoN::dsl::Expression::addOperator</qualifiedname>
        <param>
          <type>const <ref refid="classNeoN_1_1dsl_1_1TemporalOperator" kindref="compound">TemporalOperator</ref>&lt; ValueType &gt; &amp;</type>
          <declname>oper</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="105" column="10" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1dsl_1_1Expression_1a77198421f4c3765700d158f9d675264c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NeoN::dsl::Expression&lt; ValueType &gt;::addExpression</definition>
        <argsstring>(const Expression &amp;equation)</argsstring>
        <name>addExpression</name>
        <qualifiedname>NeoN::dsl::Expression::addExpression</qualifiedname>
        <param>
          <type>const <ref refid="classNeoN_1_1dsl_1_1Expression" kindref="compound">Expression</ref> &amp;</type>
          <declname>equation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="110" column="10" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="110" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1dsl_1_1Expression_1a1e5626e89b0d8a032f34b3cd87371fef" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceNeoN_1a5ea7bf3a45fbcf9c6ee454474ab13c06" kindref="member">size_t</ref></type>
        <definition>size_t NeoN::dsl::Expression&lt; ValueType &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>NeoN::dsl::Expression::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="124" column="12" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="124" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1dsl_1_1Expression_1a2455b209c125abad6f794e583acd7066" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="classNeoN_1_1dsl_1_1TemporalOperator" kindref="compound">TemporalOperator</ref>&lt; ValueType &gt; &gt; &amp;</type>
        <definition>const std::vector&lt; TemporalOperator&lt; ValueType &gt; &gt; &amp; NeoN::dsl::Expression&lt; ValueType &gt;::temporalOperators</definition>
        <argsstring>() const</argsstring>
        <name>temporalOperators</name>
        <qualifiedname>NeoN::dsl::Expression::temporalOperators</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="127" column="23" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="127" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1dsl_1_1Expression_1a8317117e1acfdddb07e56f55ab9f394a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="classNeoN_1_1dsl_1_1SpatialOperator" kindref="compound">SpatialOperator</ref>&lt; ValueType &gt; &gt; &amp;</type>
        <definition>const std::vector&lt; SpatialOperator&lt; ValueType &gt; &gt; &amp; NeoN::dsl::Expression&lt; ValueType &gt;::spatialOperators</definition>
        <argsstring>() const</argsstring>
        <name>spatialOperators</name>
        <qualifiedname>NeoN::dsl::Expression::spatialOperators</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="132" column="23" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="132" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1dsl_1_1Expression_1af83cc00b92f50885174cd7a008473852" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="classNeoN_1_1dsl_1_1TemporalOperator" kindref="compound">TemporalOperator</ref>&lt; ValueType &gt; &gt; &amp;</type>
        <definition>std::vector&lt; TemporalOperator&lt; ValueType &gt; &gt; &amp; NeoN::dsl::Expression&lt; ValueType &gt;::temporalOperators</definition>
        <argsstring>()</argsstring>
        <name>temporalOperators</name>
        <qualifiedname>NeoN::dsl::Expression::temporalOperators</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="137" column="17" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="137" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1dsl_1_1Expression_1a83b1c51af4cdfd9852baeeb37c7fb14b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="classNeoN_1_1dsl_1_1SpatialOperator" kindref="compound">SpatialOperator</ref>&lt; ValueType &gt; &gt; &amp;</type>
        <definition>std::vector&lt; SpatialOperator&lt; ValueType &gt; &gt; &amp; NeoN::dsl::Expression&lt; ValueType &gt;::spatialOperators</definition>
        <argsstring>()</argsstring>
        <name>spatialOperators</name>
        <qualifiedname>NeoN::dsl::Expression::spatialOperators</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="139" column="17" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="139" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1dsl_1_1Expression_1ad17c6007292ab849a306b88cbf64a5da" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref> &amp;</type>
        <definition>const Executor &amp; NeoN::dsl::Expression&lt; ValueType &gt;::exec</definition>
        <argsstring>() const</argsstring>
        <name>exec</name>
        <qualifiedname>NeoN::dsl::Expression::exec</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="141" column="20" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="141" bodyend="141"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="23" column="1" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="24" bodyend="150"/>
    <listofallmembers>
      <member refid="classNeoN_1_1dsl_1_1Expression_1a77198421f4c3765700d158f9d675264c" prot="public" virt="non-virtual"><scope>NeoN::dsl::Expression</scope><name>addExpression</name></member>
      <member refid="classNeoN_1_1dsl_1_1Expression_1a962146977092abb074c409b5d09a16e1" prot="public" virt="non-virtual"><scope>NeoN::dsl::Expression</scope><name>addOperator</name></member>
      <member refid="classNeoN_1_1dsl_1_1Expression_1a769ee099e363146dbff60666b62c2a6e" prot="public" virt="non-virtual"><scope>NeoN::dsl::Expression</scope><name>addOperator</name></member>
      <member refid="classNeoN_1_1dsl_1_1Expression_1ab0d9e2020ea176aaa07f81f414508c04" prot="public" virt="non-virtual"><scope>NeoN::dsl::Expression</scope><name>build</name></member>
      <member refid="classNeoN_1_1dsl_1_1Expression_1ad17c6007292ab849a306b88cbf64a5da" prot="public" virt="non-virtual"><scope>NeoN::dsl::Expression</scope><name>exec</name></member>
      <member refid="classNeoN_1_1dsl_1_1Expression_1acbe0f3424749808eef20baa53ab82342" prot="private" virt="non-virtual"><scope>NeoN::dsl::Expression</scope><name>exec_</name></member>
      <member refid="classNeoN_1_1dsl_1_1Expression_1aee43e04f4d34af1e1eed3e7f3723b9c6" prot="public" virt="non-virtual"><scope>NeoN::dsl::Expression</scope><name>explicitOperation</name></member>
      <member refid="classNeoN_1_1dsl_1_1Expression_1a8e779b6d6b2ec17c2bcd6dc3adfa9d10" prot="public" virt="non-virtual"><scope>NeoN::dsl::Expression</scope><name>explicitOperation</name></member>
      <member refid="classNeoN_1_1dsl_1_1Expression_1a1859f25d2ce4cafbd8d69befa32df4a4" prot="public" virt="non-virtual"><scope>NeoN::dsl::Expression</scope><name>explicitOperation</name></member>
      <member refid="classNeoN_1_1dsl_1_1Expression_1a5cfc1aba5312d6de2130944259d189e9" prot="public" virt="non-virtual"><scope>NeoN::dsl::Expression</scope><name>Expression</name></member>
      <member refid="classNeoN_1_1dsl_1_1Expression_1ac227f4528d618d94c0d507fe181a7bf8" prot="public" virt="non-virtual"><scope>NeoN::dsl::Expression</scope><name>Expression</name></member>
      <member refid="classNeoN_1_1dsl_1_1Expression_1a527d62bdba68730f6fd2e65fb6643a41" prot="public" virt="non-virtual"><scope>NeoN::dsl::Expression</scope><name>implicitOperation</name></member>
      <member refid="classNeoN_1_1dsl_1_1Expression_1a5faf37ec9ea2e49a38432e3abedc9aed" prot="public" virt="non-virtual"><scope>NeoN::dsl::Expression</scope><name>implicitOperation</name></member>
      <member refid="classNeoN_1_1dsl_1_1Expression_1a1e5626e89b0d8a032f34b3cd87371fef" prot="public" virt="non-virtual"><scope>NeoN::dsl::Expression</scope><name>size</name></member>
      <member refid="classNeoN_1_1dsl_1_1Expression_1a8317117e1acfdddb07e56f55ab9f394a" prot="public" virt="non-virtual"><scope>NeoN::dsl::Expression</scope><name>spatialOperators</name></member>
      <member refid="classNeoN_1_1dsl_1_1Expression_1a83b1c51af4cdfd9852baeeb37c7fb14b" prot="public" virt="non-virtual"><scope>NeoN::dsl::Expression</scope><name>spatialOperators</name></member>
      <member refid="classNeoN_1_1dsl_1_1Expression_1a7b947245d46a792731295a8cf521c9f1" prot="private" virt="non-virtual"><scope>NeoN::dsl::Expression</scope><name>spatialOperators_</name></member>
      <member refid="classNeoN_1_1dsl_1_1Expression_1a2455b209c125abad6f794e583acd7066" prot="public" virt="non-virtual"><scope>NeoN::dsl::Expression</scope><name>temporalOperators</name></member>
      <member refid="classNeoN_1_1dsl_1_1Expression_1af83cc00b92f50885174cd7a008473852" prot="public" virt="non-virtual"><scope>NeoN::dsl::Expression</scope><name>temporalOperators</name></member>
      <member refid="classNeoN_1_1dsl_1_1Expression_1a42bbff3e093e55478b29c579028c50d1" prot="private" virt="non-virtual"><scope>NeoN::dsl::Expression</scope><name>temporalOperators_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
