<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classNeoFOAM_1_1Dictionary" kind="class" language="C++" prot="public">
    <compoundname>NeoFOAM::Dictionary</compoundname>
    <derivedcompoundref refid="classNeoFOAM_1_1Document" prot="public" virt="non-virtual">NeoFOAM::Document</derivedcompoundref>
    <includes refid="dictionary_8hpp" local="no">dictionary.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classNeoFOAM_1_1Dictionary_1a7ddf50b5ad13bda285c19575c6e4e6a6" prot="private" static="no" mutable="no">
        <type>std::unordered_map&lt; std::string, std::any &gt;</type>
        <definition>std::unordered_map&lt;std::string, std::any&gt; NeoFOAM::Dictionary::data_</definition>
        <argsstring></argsstring>
        <name>data_</name>
        <qualifiedname>NeoFOAM::Dictionary::data_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/core/dictionary.hpp" line="171" column="24" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/core/dictionary.hpp" bodystart="171" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classNeoFOAM_1_1Dictionary_1a8cd2ad8f5657deddd5ed68928d376dd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NeoFOAM::Dictionary::Dictionary</definition>
        <argsstring>()=default</argsstring>
        <name>Dictionary</name>
        <qualifiedname>NeoFOAM::Dictionary::Dictionary</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/core/dictionary.hpp" line="36" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1Dictionary_1a1c64493ebf84ae28e36a1f599cd7a8b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NeoFOAM::Dictionary::Dictionary</definition>
        <argsstring>(const std::unordered_map&lt; std::string, std::any &gt; &amp;keyValuePairs)</argsstring>
        <name>Dictionary</name>
        <qualifiedname>NeoFOAM::Dictionary::Dictionary</qualifiedname>
        <param>
          <type>const std::unordered_map&lt; std::string, std::any &gt; &amp;</type>
          <declname>keyValuePairs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/core/dictionary.hpp" line="38" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1Dictionary_1a21a9f6e923a18f3c7f4221c51c8f9d9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NeoFOAM::Dictionary::Dictionary</definition>
        <argsstring>(const std::initializer_list&lt; std::pair&lt; std::string, std::any &gt; &gt; &amp;initList)</argsstring>
        <name>Dictionary</name>
        <qualifiedname>NeoFOAM::Dictionary::Dictionary</qualifiedname>
        <param>
          <type>const std::initializer_list&lt; std::pair&lt; std::string, std::any &gt; &gt; &amp;</type>
          <declname>initList</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/core/dictionary.hpp" line="40" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1Dictionary_1a0f7b7b11512ff4720caaa96bc64f6d5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeoFOAM::Dictionary::insert</definition>
        <argsstring>(const std::string &amp;key, const std::any &amp;value)</argsstring>
        <name>insert</name>
        <qualifiedname>NeoFOAM::Dictionary::insert</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const std::any &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Inserts a key-value pair into the dictionary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key to insert. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to insert. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/core/dictionary.hpp" line="47" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1Dictionary_1aa2451dff287026a4d8899acad3b30d6e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool NeoFOAM::Dictionary::contains</definition>
        <argsstring>(const std::string &amp;key) const</argsstring>
        <name>contains</name>
        <qualifiedname>NeoFOAM::Dictionary::contains</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Checks if the given key is present in the dictionary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key to check. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the key is present, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/core/dictionary.hpp" line="54" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1Dictionary_1a1845fb9b7f58fb161f10fad774c82176" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeoFOAM::Dictionary::remove</definition>
        <argsstring>(const std::string &amp;key)</argsstring>
        <name>remove</name>
        <qualifiedname>NeoFOAM::Dictionary::remove</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Removes an entry from the dictionary based on the specified key. </para>
        </briefdescription>
        <detaileddescription>
<para>This function removes the entry with the specified key from the dictionary.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key of the entry to be removed. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/core/dictionary.hpp" line="64" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1Dictionary_1a086a911ecdcf06001bd70addc94cbd53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::any &amp;</type>
        <definition>std::any &amp; NeoFOAM::Dictionary::operator[]</definition>
        <argsstring>(const std::string &amp;key)</argsstring>
        <name>operator[]</name>
        <qualifiedname>NeoFOAM::Dictionary::operator[]</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Accesses the value associated with the given key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key to access. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to the value associated with the key. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/core/dictionary.hpp" line="71" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1Dictionary_1a8186e10d04bc5fe9b44124293baafeb1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::any &amp;</type>
        <definition>const std::any &amp; NeoFOAM::Dictionary::operator[]</definition>
        <argsstring>(const std::string &amp;key) const</argsstring>
        <name>operator[]</name>
        <qualifiedname>NeoFOAM::Dictionary::operator[]</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Accesses the value associated with the given key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key to access. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A const reference to the value associated with the key. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/core/dictionary.hpp" line="78" column="21"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1Dictionary_1adb5a5f7b45c2a1b61b56c8a3d3718b0b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>T &amp;</type>
        <definition>T &amp; NeoFOAM::Dictionary::get</definition>
        <argsstring>(const std::string &amp;key)</argsstring>
        <name>get</name>
        <qualifiedname>NeoFOAM::Dictionary::get</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Retrieves the value associated with the given key, casting it to the specified type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type to cast the value to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key to retrieve the value for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to the value associated with the key, casted to type T. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/core/dictionary.hpp" line="89" column="8" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/core/dictionary.hpp" bodystart="89" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1Dictionary_1abdc5e6c9121aa1eb8d6f68927dab5562" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>const T &amp;</type>
        <definition>const T &amp; NeoFOAM::Dictionary::get</definition>
        <argsstring>(const std::string &amp;key) const</argsstring>
        <name>get</name>
        <qualifiedname>NeoFOAM::Dictionary::get</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Retrieves the value associated with the given key, casting it to the specified type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type to cast the value to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key to retrieve the value for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A const reference to the value associated with the key, casted to type T. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/core/dictionary.hpp" line="111" column="14" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/core/dictionary.hpp" bodystart="111" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1Dictionary_1abb12695234a433a866d616a80523cde3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool NeoFOAM::Dictionary::isDict</definition>
        <argsstring>(const std::string &amp;key) const</argsstring>
        <name>isDict</name>
        <qualifiedname>NeoFOAM::Dictionary::isDict</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Checks if the value associated with the given key is a dictionary. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key to check. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if the value is a dictionary, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/core/dictionary.hpp" line="129" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1Dictionary_1af988f9f3ab9db529f676087eeef61632" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1Dictionary" kindref="compound">Dictionary</ref> &amp;</type>
        <definition>Dictionary &amp; NeoFOAM::Dictionary::subDict</definition>
        <argsstring>(const std::string &amp;key)</argsstring>
        <name>subDict</name>
        <qualifiedname>NeoFOAM::Dictionary::subDict</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Retrieves a sub-dictionary associated with the given key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key to retrieve the sub-dictionary for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to the sub-dictionary associated with the key. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/core/dictionary.hpp" line="136" column="16"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1Dictionary_1ac8bbb374d45290283c3213b19ad81124" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classNeoFOAM_1_1Dictionary" kindref="compound">Dictionary</ref> &amp;</type>
        <definition>const Dictionary &amp; NeoFOAM::Dictionary::subDict</definition>
        <argsstring>(const std::string &amp;key) const</argsstring>
        <name>subDict</name>
        <qualifiedname>NeoFOAM::Dictionary::subDict</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Retrieves a sub-dictionary associated with the given key. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key to retrieve the sub-dictionary for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to the sub-dictionary associated with the key. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/core/dictionary.hpp" line="143" column="22"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1Dictionary_1a1f7c74e664ef8385b8afca32688620d0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::string &gt;</type>
        <definition>std::vector&lt; std::string &gt; NeoFOAM::Dictionary::keys</definition>
        <argsstring>() const</argsstring>
        <name>keys</name>
        <qualifiedname>NeoFOAM::Dictionary::keys</qualifiedname>
        <briefdescription>
<para>Retrieves the keys of the dictionary. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A vector containing the keys of the dictionary. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/core/dictionary.hpp" line="149" column="17"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1Dictionary_1ad24649c0f47ba4eceedb66c7bc7e3bee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::unordered_map&lt; std::string, std::any &gt; &amp;</type>
        <definition>std::unordered_map&lt; std::string, std::any &gt; &amp; NeoFOAM::Dictionary::getMap</definition>
        <argsstring>()</argsstring>
        <name>getMap</name>
        <qualifiedname>NeoFOAM::Dictionary::getMap</qualifiedname>
        <briefdescription>
<para>Retrieves the underlying unordered map of the dictionary. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A reference to the underlying unordered map. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/core/dictionary.hpp" line="155" column="24"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1Dictionary_1af80c92de68aa4f3da7dc396d12660010" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const std::unordered_map&lt; std::string, std::any &gt; &amp;</type>
        <definition>const std::unordered_map&lt; std::string, std::any &gt; &amp; NeoFOAM::Dictionary::getMap</definition>
        <argsstring>() const</argsstring>
        <name>getMap</name>
        <qualifiedname>NeoFOAM::Dictionary::getMap</qualifiedname>
        <briefdescription>
<para>Retrieves the underlying unordered map of the dictionary. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A const reference to the underlying unordered map. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/core/dictionary.hpp" line="161" column="30"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1Dictionary_1a822f9fdf3b45bcf340dbb6d7cd3f265b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool NeoFOAM::Dictionary::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <qualifiedname>NeoFOAM::Dictionary::empty</qualifiedname>
        <briefdescription>
<para>Checks whether the dictionary is empty. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A bool indicating if the dictionary is empty </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/core/dictionary.hpp" line="167" column="10" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/core/dictionary.hpp" bodystart="167" bodyend="167"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A class representing a dictionary that stores key-value pairs. </para>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="classNeoFOAM_1_1Dictionary" kindref="compound">Dictionary</ref> class provides a way to store and retrieve values using string. It supports inserting key-value pairs, accessing values using the subscript operator, and retrieving values of specific types using the <computeroutput>get</computeroutput> function. It also supports storing sub-dictionaries, which can be accessed using the <computeroutput>subDict</computeroutput> function. The values are stored using <computeroutput>std::any</computeroutput>, which allows storing values of any type. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>NeoFOAM::Dictionary</label>
        <link refid="classNeoFOAM_1_1Dictionary"/>
      </node>
      <node id="2">
        <label>NeoFOAM::Document</label>
        <link refid="classNeoFOAM_1_1Document"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/core/dictionary.hpp" line="32" column="1" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/core/dictionary.hpp" bodystart="33" bodyend="172"/>
    <listofallmembers>
      <member refid="classNeoFOAM_1_1Dictionary_1aa2451dff287026a4d8899acad3b30d6e" prot="public" virt="non-virtual"><scope>NeoFOAM::Dictionary</scope><name>contains</name></member>
      <member refid="classNeoFOAM_1_1Dictionary_1a7ddf50b5ad13bda285c19575c6e4e6a6" prot="private" virt="non-virtual"><scope>NeoFOAM::Dictionary</scope><name>data_</name></member>
      <member refid="classNeoFOAM_1_1Dictionary_1a8cd2ad8f5657deddd5ed68928d376dd9" prot="public" virt="non-virtual"><scope>NeoFOAM::Dictionary</scope><name>Dictionary</name></member>
      <member refid="classNeoFOAM_1_1Dictionary_1a1c64493ebf84ae28e36a1f599cd7a8b0" prot="public" virt="non-virtual"><scope>NeoFOAM::Dictionary</scope><name>Dictionary</name></member>
      <member refid="classNeoFOAM_1_1Dictionary_1a21a9f6e923a18f3c7f4221c51c8f9d9b" prot="public" virt="non-virtual"><scope>NeoFOAM::Dictionary</scope><name>Dictionary</name></member>
      <member refid="classNeoFOAM_1_1Dictionary_1a822f9fdf3b45bcf340dbb6d7cd3f265b" prot="public" virt="non-virtual"><scope>NeoFOAM::Dictionary</scope><name>empty</name></member>
      <member refid="classNeoFOAM_1_1Dictionary_1adb5a5f7b45c2a1b61b56c8a3d3718b0b" prot="public" virt="non-virtual"><scope>NeoFOAM::Dictionary</scope><name>get</name></member>
      <member refid="classNeoFOAM_1_1Dictionary_1abdc5e6c9121aa1eb8d6f68927dab5562" prot="public" virt="non-virtual"><scope>NeoFOAM::Dictionary</scope><name>get</name></member>
      <member refid="classNeoFOAM_1_1Dictionary_1ad24649c0f47ba4eceedb66c7bc7e3bee" prot="public" virt="non-virtual"><scope>NeoFOAM::Dictionary</scope><name>getMap</name></member>
      <member refid="classNeoFOAM_1_1Dictionary_1af80c92de68aa4f3da7dc396d12660010" prot="public" virt="non-virtual"><scope>NeoFOAM::Dictionary</scope><name>getMap</name></member>
      <member refid="classNeoFOAM_1_1Dictionary_1a0f7b7b11512ff4720caaa96bc64f6d5f" prot="public" virt="non-virtual"><scope>NeoFOAM::Dictionary</scope><name>insert</name></member>
      <member refid="classNeoFOAM_1_1Dictionary_1abb12695234a433a866d616a80523cde3" prot="public" virt="non-virtual"><scope>NeoFOAM::Dictionary</scope><name>isDict</name></member>
      <member refid="classNeoFOAM_1_1Dictionary_1a1f7c74e664ef8385b8afca32688620d0" prot="public" virt="non-virtual"><scope>NeoFOAM::Dictionary</scope><name>keys</name></member>
      <member refid="classNeoFOAM_1_1Dictionary_1a086a911ecdcf06001bd70addc94cbd53" prot="public" virt="non-virtual"><scope>NeoFOAM::Dictionary</scope><name>operator[]</name></member>
      <member refid="classNeoFOAM_1_1Dictionary_1a8186e10d04bc5fe9b44124293baafeb1" prot="public" virt="non-virtual"><scope>NeoFOAM::Dictionary</scope><name>operator[]</name></member>
      <member refid="classNeoFOAM_1_1Dictionary_1a1845fb9b7f58fb161f10fad774c82176" prot="public" virt="non-virtual"><scope>NeoFOAM::Dictionary</scope><name>remove</name></member>
      <member refid="classNeoFOAM_1_1Dictionary_1af988f9f3ab9db529f676087eeef61632" prot="public" virt="non-virtual"><scope>NeoFOAM::Dictionary</scope><name>subDict</name></member>
      <member refid="classNeoFOAM_1_1Dictionary_1ac8bbb374d45290283c3213b19ad81124" prot="public" virt="non-virtual"><scope>NeoFOAM::Dictionary</scope><name>subDict</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
