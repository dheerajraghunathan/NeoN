<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classNeoN_1_1DomainField" kind="class" language="C++" prot="public">
    <compoundname>NeoN::DomainField</compoundname>
    <includes refid="domainField_8hpp" local="no">domainField.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename ValueType</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classNeoN_1_1DomainField_1a797f4204ed8083e4081b321f624cf922" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref></type>
        <definition>Executor NeoN::DomainField&lt; ValueType &gt;::exec_</definition>
        <argsstring></argsstring>
        <name>exec_</name>
        <qualifiedname>NeoN::DomainField::exec_</qualifiedname>
        <briefdescription>
<para>The executor on which the field is stored. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/fields/domainField.hpp" line="105" column="14" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/fields/domainField.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoN_1_1DomainField_1a7c418d2fd38ba805b4d695d0bed9c4d7" prot="private" static="no" mutable="no">
        <type><ref refid="classNeoN_1_1Field" kindref="compound">Field</ref>&lt; ValueType &gt;</type>
        <definition>Field&lt;ValueType&gt; NeoN::DomainField&lt; ValueType &gt;::internalField_</definition>
        <argsstring></argsstring>
        <name>internalField_</name>
        <qualifiedname>NeoN::DomainField::internalField_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/fields/domainField.hpp" line="106" column="11" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/fields/domainField.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoN_1_1DomainField_1a1d8db29a508ffd281e84bc19c538aa44" prot="private" static="no" mutable="no">
        <type><ref refid="classNeoN_1_1BoundaryFields" kindref="compound">BoundaryFields</ref>&lt; ValueType &gt;</type>
        <definition>BoundaryFields&lt;ValueType&gt; NeoN::DomainField&lt; ValueType &gt;::boundaryFields_</definition>
        <argsstring></argsstring>
        <name>boundaryFields_</name>
        <qualifiedname>NeoN::DomainField::boundaryFields_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/fields/domainField.hpp" line="107" column="20" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/fields/domainField.hpp" bodystart="107" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classNeoN_1_1DomainField_1a26827f9fac2aa9f09dc7b600b2072b0f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoN::DomainField&lt; ValueType &gt;::DomainField</definition>
        <argsstring>(const Executor &amp;exec)</argsstring>
        <name>DomainField</name>
        <qualifiedname>NeoN::DomainField::DomainField</qualifiedname>
        <param>
          <type>const <ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref> &amp;</type>
          <declname>exec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/fields/domainField.hpp" line="35" column="5" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/fields/domainField.hpp" bodystart="35" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1DomainField_1afe98938c64e5c25947dbd7cfff06b82f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoN::DomainField&lt; ValueType &gt;::DomainField</definition>
        <argsstring>(const Executor &amp;exec, size_t nCells, std::vector&lt; localIdx &gt; offsets)</argsstring>
        <name>DomainField</name>
        <qualifiedname>NeoN::DomainField::DomainField</qualifiedname>
        <param>
          <type>const <ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref> &amp;</type>
          <declname>exec</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoN_1a5ea7bf3a45fbcf9c6ee454474ab13c06" kindref="member">size_t</ref></type>
          <declname>nCells</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespaceNeoN_1af0b7553899fd421d905a302d61334be3" kindref="member">localIdx</ref> &gt;</type>
          <declname>offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/fields/domainField.hpp" line="39" column="5" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/fields/domainField.hpp" bodystart="39" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1DomainField_1a2e3e0801023f6792610dace6caa943f3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoN::DomainField&lt; ValueType &gt;::DomainField</definition>
        <argsstring>(const Executor &amp;exec, const Field&lt; ValueType &gt; &amp;internalField, const BoundaryFields&lt; ValueType &gt; &amp;boundaryFields)</argsstring>
        <name>DomainField</name>
        <qualifiedname>NeoN::DomainField::DomainField</qualifiedname>
        <param>
          <type>const <ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref> &amp;</type>
          <declname>exec</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoN_1_1Field" kindref="compound">Field</ref>&lt; ValueType &gt; &amp;</type>
          <declname>internalField</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoN_1_1BoundaryFields" kindref="compound">BoundaryFields</ref>&lt; ValueType &gt; &amp;</type>
          <declname>boundaryFields</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/fields/domainField.hpp" line="43" column="5" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/fields/domainField.hpp" bodystart="43" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1DomainField_1ad547d4d084dc57305bb3d8f5da9adf9a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoN::DomainField&lt; ValueType &gt;::DomainField</definition>
        <argsstring>(const Executor &amp;exec, const Field&lt; ValueType &gt; &amp;internalField, std::vector&lt; localIdx &gt; offsets)</argsstring>
        <name>DomainField</name>
        <qualifiedname>NeoN::DomainField::DomainField</qualifiedname>
        <param>
          <type>const <ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref> &amp;</type>
          <declname>exec</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoN_1_1Field" kindref="compound">Field</ref>&lt; ValueType &gt; &amp;</type>
          <declname>internalField</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespaceNeoN_1af0b7553899fd421d905a302d61334be3" kindref="member">localIdx</ref> &gt;</type>
          <declname>offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/fields/domainField.hpp" line="51" column="5" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/fields/domainField.hpp" bodystart="51" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1DomainField_1ab9e0c7f49c67ff0637593f88b43f2a60" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoN::DomainField&lt; ValueType &gt;::DomainField</definition>
        <argsstring>(const Executor &amp;exec, const UnstructuredMesh &amp;mesh)</argsstring>
        <name>DomainField</name>
        <qualifiedname>NeoN::DomainField::DomainField</qualifiedname>
        <param>
          <type>const <ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref> &amp;</type>
          <declname>exec</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoN_1_1UnstructuredMesh" kindref="compound">UnstructuredMesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/fields/domainField.hpp" line="57" column="5" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/fields/domainField.hpp" bodystart="57" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1DomainField_1a4cdfdce5d355a4f5386a8e38a4b4ff26" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoN::DomainField&lt; ValueType &gt;::DomainField</definition>
        <argsstring>(const DomainField&lt; ValueType &gt; &amp;rhs)</argsstring>
        <name>DomainField</name>
        <qualifiedname>NeoN::DomainField::DomainField</qualifiedname>
        <param>
          <type>const <ref refid="classNeoN_1_1DomainField" kindref="compound">DomainField</ref>&lt; ValueType &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/fields/domainField.hpp" line="63" column="5" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/fields/domainField.hpp" bodystart="63" bodyend="65"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1DomainField_1a13bfec05eb766a1b93a0cec2deed89d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoN::DomainField&lt; ValueType &gt;::DomainField</definition>
        <argsstring>(DomainField&lt; ValueType &gt; &amp;&amp;rhs)</argsstring>
        <name>DomainField</name>
        <qualifiedname>NeoN::DomainField::DomainField</qualifiedname>
        <param>
          <type><ref refid="classNeoN_1_1DomainField" kindref="compound">DomainField</ref>&lt; ValueType &gt; &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/fields/domainField.hpp" line="68" column="5" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/fields/domainField.hpp" bodystart="68" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1DomainField_1ac1e8b81853952c0511195d444ada7b5e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoN_1_1DomainField" kindref="compound">DomainField</ref>&lt; ValueType &gt; &amp;</type>
        <definition>DomainField&lt; ValueType &gt; &amp; NeoN::DomainField&lt; ValueType &gt;::operator=</definition>
        <argsstring>(const DomainField&lt; ValueType &gt; &amp;rhs)</argsstring>
        <name>operator=</name>
        <qualifiedname>NeoN::DomainField::operator=</qualifiedname>
        <param>
          <type>const <ref refid="classNeoN_1_1DomainField" kindref="compound">DomainField</ref>&lt; ValueType &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/fields/domainField.hpp" line="74" column="17" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/fields/domainField.hpp" bodystart="74" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1DomainField_1ab272eb211bcbf3d965383827d442aa3f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoN_1_1DomainField" kindref="compound">DomainField</ref>&lt; ValueType &gt; &amp;</type>
        <definition>DomainField&lt; ValueType &gt; &amp; NeoN::DomainField&lt; ValueType &gt;::operator=</definition>
        <argsstring>(DomainField&lt; ValueType &gt; &amp;&amp;rhs)</argsstring>
        <name>operator=</name>
        <qualifiedname>NeoN::DomainField::operator=</qualifiedname>
        <param>
          <type><ref refid="classNeoN_1_1DomainField" kindref="compound">DomainField</ref>&lt; ValueType &gt; &amp;&amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/fields/domainField.hpp" line="82" column="17" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/fields/domainField.hpp" bodystart="82" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1DomainField_1aa99d652bf9b9ca9d8dca18f250d75dbe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classNeoN_1_1Field" kindref="compound">Field</ref>&lt; ValueType &gt; &amp;</type>
        <definition>const Field&lt; ValueType &gt; &amp; NeoN::DomainField&lt; ValueType &gt;::internalField</definition>
        <argsstring>() const</argsstring>
        <name>internalField</name>
        <qualifiedname>NeoN::DomainField::internalField</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/fields/domainField.hpp" line="90" column="17" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/fields/domainField.hpp" bodystart="90" bodyend="90"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1DomainField_1a348e25e3c7d1209b5beb70d5a35b270b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoN_1_1Field" kindref="compound">Field</ref>&lt; ValueType &gt; &amp;</type>
        <definition>Field&lt; ValueType &gt; &amp; NeoN::DomainField&lt; ValueType &gt;::internalField</definition>
        <argsstring>()</argsstring>
        <name>internalField</name>
        <qualifiedname>NeoN::DomainField::internalField</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/fields/domainField.hpp" line="93" column="11" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/fields/domainField.hpp" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1DomainField_1a00ab7992272ff3230a5a780b76453eff" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classNeoN_1_1BoundaryFields" kindref="compound">BoundaryFields</ref>&lt; ValueType &gt; &amp;</type>
        <definition>const BoundaryFields&lt; ValueType &gt; &amp; NeoN::DomainField&lt; ValueType &gt;::boundaryField</definition>
        <argsstring>() const</argsstring>
        <name>boundaryField</name>
        <qualifiedname>NeoN::DomainField::boundaryField</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/fields/domainField.hpp" line="96" column="26" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/fields/domainField.hpp" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1DomainField_1a47510ae245cc0667dc92f069c9e87b55" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoN_1_1BoundaryFields" kindref="compound">BoundaryFields</ref>&lt; ValueType &gt; &amp;</type>
        <definition>BoundaryFields&lt; ValueType &gt; &amp; NeoN::DomainField&lt; ValueType &gt;::boundaryField</definition>
        <argsstring>()</argsstring>
        <name>boundaryField</name>
        <qualifiedname>NeoN::DomainField::boundaryField</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/fields/domainField.hpp" line="99" column="20" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/fields/domainField.hpp" bodystart="99" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1DomainField_1a7258f7e765be647ff2f3cce7e39f1d4a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref> &amp;</type>
        <definition>const Executor &amp; NeoN::DomainField&lt; ValueType &gt;::exec</definition>
        <argsstring>() const</argsstring>
        <name>exec</name>
        <qualifiedname>NeoN::DomainField::exec</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/fields/domainField.hpp" line="101" column="20" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/fields/domainField.hpp" bodystart="101" bodyend="101"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Represents the domain fields for a computational domain. </para>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="classNeoN_1_1DomainField" kindref="compound">DomainField</ref> class stores the internal fields and boundary information for a computational domain. It provides access to the computed values, reference values, value fractions, reference gradients, boundary types, offsets, and the number of boundaries and boundary faces.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ValueType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the underlying field values </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/fields/domainField.hpp" line="31" column="1" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/fields/domainField.hpp" bodystart="32" bodyend="108"/>
    <listofallmembers>
      <member refid="classNeoN_1_1DomainField_1a00ab7992272ff3230a5a780b76453eff" prot="public" virt="non-virtual"><scope>NeoN::DomainField</scope><name>boundaryField</name></member>
      <member refid="classNeoN_1_1DomainField_1a47510ae245cc0667dc92f069c9e87b55" prot="public" virt="non-virtual"><scope>NeoN::DomainField</scope><name>boundaryField</name></member>
      <member refid="classNeoN_1_1DomainField_1a1d8db29a508ffd281e84bc19c538aa44" prot="private" virt="non-virtual"><scope>NeoN::DomainField</scope><name>boundaryFields_</name></member>
      <member refid="classNeoN_1_1DomainField_1a26827f9fac2aa9f09dc7b600b2072b0f" prot="public" virt="non-virtual"><scope>NeoN::DomainField</scope><name>DomainField</name></member>
      <member refid="classNeoN_1_1DomainField_1afe98938c64e5c25947dbd7cfff06b82f" prot="public" virt="non-virtual"><scope>NeoN::DomainField</scope><name>DomainField</name></member>
      <member refid="classNeoN_1_1DomainField_1a2e3e0801023f6792610dace6caa943f3" prot="public" virt="non-virtual"><scope>NeoN::DomainField</scope><name>DomainField</name></member>
      <member refid="classNeoN_1_1DomainField_1ad547d4d084dc57305bb3d8f5da9adf9a" prot="public" virt="non-virtual"><scope>NeoN::DomainField</scope><name>DomainField</name></member>
      <member refid="classNeoN_1_1DomainField_1ab9e0c7f49c67ff0637593f88b43f2a60" prot="public" virt="non-virtual"><scope>NeoN::DomainField</scope><name>DomainField</name></member>
      <member refid="classNeoN_1_1DomainField_1a4cdfdce5d355a4f5386a8e38a4b4ff26" prot="public" virt="non-virtual"><scope>NeoN::DomainField</scope><name>DomainField</name></member>
      <member refid="classNeoN_1_1DomainField_1a13bfec05eb766a1b93a0cec2deed89d8" prot="public" virt="non-virtual"><scope>NeoN::DomainField</scope><name>DomainField</name></member>
      <member refid="classNeoN_1_1DomainField_1a7258f7e765be647ff2f3cce7e39f1d4a" prot="public" virt="non-virtual"><scope>NeoN::DomainField</scope><name>exec</name></member>
      <member refid="classNeoN_1_1DomainField_1a797f4204ed8083e4081b321f624cf922" prot="private" virt="non-virtual"><scope>NeoN::DomainField</scope><name>exec_</name></member>
      <member refid="classNeoN_1_1DomainField_1aa99d652bf9b9ca9d8dca18f250d75dbe" prot="public" virt="non-virtual"><scope>NeoN::DomainField</scope><name>internalField</name></member>
      <member refid="classNeoN_1_1DomainField_1a348e25e3c7d1209b5beb70d5a35b270b" prot="public" virt="non-virtual"><scope>NeoN::DomainField</scope><name>internalField</name></member>
      <member refid="classNeoN_1_1DomainField_1a7c418d2fd38ba805b4d695d0bed9c4d7" prot="private" virt="non-virtual"><scope>NeoN::DomainField</scope><name>internalField_</name></member>
      <member refid="classNeoN_1_1DomainField_1ac1e8b81853952c0511195d444ada7b5e" prot="public" virt="non-virtual"><scope>NeoN::DomainField</scope><name>operator=</name></member>
      <member refid="classNeoN_1_1DomainField_1ab272eb211bcbf3d965383827d442aa3f" prot="public" virt="non-virtual"><scope>NeoN::DomainField</scope><name>operator=</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
