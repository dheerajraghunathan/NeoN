<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classNeoFOAM_1_1la_1_1SolverFactory" kind="class" language="C++" prot="public" abstract="yes">
    <compoundname>NeoFOAM::la::SolverFactory</compoundname>
    <basecompoundref refid="classNeoFOAM_1_1RuntimeSelectionFactory" prot="public" virt="non-virtual">NeoFOAM::RuntimeSelectionFactory&lt; SolverFactory, Parameters&lt; const Executor &amp;, const Dictionary &amp; &gt; &gt;</basecompoundref>
    <includes refid="linearAlgebra_2solver_8hpp" local="no">solver.hpp</includes>
    <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classNeoFOAM_1_1la_1_1SolverFactory_1ac73df8e15e25d43f9d28afbc7b0194c2" prot="protected" static="no" mutable="no">
        <type>const <ref refid="namespaceNeoFOAM_1aaa4d35d275559f501cb6a1eec717c905" kindref="member">Executor</ref></type>
        <definition>const Executor NeoFOAM::la::SolverFactory::exec_</definition>
        <argsstring></argsstring>
        <name>exec_</name>
        <qualifiedname>NeoFOAM::la::SolverFactory::exec_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/linearAlgebra/solver.hpp" line="40" column="20" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/linearAlgebra/solver.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classNeoFOAM_1_1la_1_1SolverFactory_1a96fda5d531e58fd9adfbd5dfd70596bf" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::unique_ptr&lt; <ref refid="classNeoFOAM_1_1la_1_1SolverFactory" kindref="compound">SolverFactory</ref> &gt;</type>
        <definition>static std::unique_ptr&lt; SolverFactory &gt; NeoFOAM::la::SolverFactory::create</definition>
        <argsstring>(const Executor &amp;exec, const Dictionary &amp;dict)</argsstring>
        <name>create</name>
        <qualifiedname>NeoFOAM::la::SolverFactory::create</qualifiedname>
        <param>
          <type>const <ref refid="namespaceNeoFOAM_1aaa4d35d275559f501cb6a1eec717c905" kindref="member">Executor</ref> &amp;</type>
          <declname>exec</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1Dictionary" kindref="compound">Dictionary</ref> &amp;</type>
          <declname>dict</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/linearAlgebra/solver.hpp" line="19" column="28" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/linearAlgebra/solver.hpp" bodystart="19" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1la_1_1SolverFactory_1a286092dbfcecb47cc8ecadd550b49b44" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>static std::string NeoFOAM::la::SolverFactory::name</definition>
        <argsstring>()</argsstring>
        <name>name</name>
        <qualifiedname>NeoFOAM::la::SolverFactory::name</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/linearAlgebra/solver.hpp" line="26" column="24" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/linearAlgebra/solver.hpp" bodystart="26" bodyend="26"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classNeoFOAM_1_1la_1_1SolverFactory_1ac80f5cbaf7efc8eebffd914884ad7773" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoFOAM::la::SolverFactory::SolverFactory</definition>
        <argsstring>(const Executor &amp;exec)</argsstring>
        <name>SolverFactory</name>
        <qualifiedname>NeoFOAM::la::SolverFactory::SolverFactory</qualifiedname>
        <param>
          <type>const <ref refid="namespaceNeoFOAM_1aaa4d35d275559f501cb6a1eec717c905" kindref="member">Executor</ref> &amp;</type>
          <declname>exec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/linearAlgebra/solver.hpp" line="28" column="5" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/linearAlgebra/solver.hpp" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1la_1_1SolverFactory_1ad17b08b0643362c6e4e243e4daa7f0fa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>void</type>
        <definition>virtual void NeoFOAM::la::SolverFactory::solve</definition>
        <argsstring>(const LinearSystem&lt; scalar, localIdx &gt; &amp;, Field&lt; scalar &gt; &amp;) const =0</argsstring>
        <name>solve</name>
        <qualifiedname>NeoFOAM::la::SolverFactory::solve</qualifiedname>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1la_1_1LinearSystem" kindref="compound">LinearSystem</ref>&lt; <ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref>, <ref refid="namespaceNeoFOAM_1a95525d89d661b88aaa4548bdf2766842" kindref="member">localIdx</ref> &gt; &amp;</type>
        </param>
        <param>
          <type><ref refid="classNeoFOAM_1_1Field" kindref="compound">Field</ref>&lt; <ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref> &gt; &amp;</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/linearAlgebra/solver.hpp" line="30" column="18"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1la_1_1SolverFactory_1a1cb0ced5ff4c3bab637ae0639cdce77f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="pure-virtual">
        <type>std::unique_ptr&lt; <ref refid="classNeoFOAM_1_1la_1_1SolverFactory" kindref="compound">SolverFactory</ref> &gt;</type>
        <definition>virtual std::unique_ptr&lt; SolverFactory &gt; NeoFOAM::la::SolverFactory::clone</definition>
        <argsstring>() const =0</argsstring>
        <name>clone</name>
        <qualifiedname>NeoFOAM::la::SolverFactory::clone</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/linearAlgebra/solver.hpp" line="36" column="29"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>NeoFOAM::la::SolverFactory</label>
        <link refid="classNeoFOAM_1_1la_1_1SolverFactory"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>NeoFOAM::RuntimeSelectionFactory&lt; SolverFactory, Parameters&lt; const Executor &amp;, const Dictionary &amp; &gt; &gt;</label>
        <link refid="classNeoFOAM_1_1RuntimeSelectionFactory"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>NeoFOAM::la::SolverFactory</label>
        <link refid="classNeoFOAM_1_1la_1_1SolverFactory"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>NeoFOAM::RuntimeSelectionFactory&lt; SolverFactory, Parameters&lt; const Executor &amp;, const Dictionary &amp; &gt; &gt;</label>
        <link refid="classNeoFOAM_1_1RuntimeSelectionFactory"/>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/linearAlgebra/solver.hpp" line="14" column="1" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoN/linearAlgebra/solver.hpp" bodystart="16" bodyend="41"/>
    <listofallmembers>
      <member refid="classNeoFOAM_1_1la_1_1SolverFactory_1a1cb0ced5ff4c3bab637ae0639cdce77f" prot="public" virt="pure-virtual"><scope>NeoFOAM::la::SolverFactory</scope><name>clone</name></member>
      <member refid="classNeoFOAM_1_1la_1_1SolverFactory_1a96fda5d531e58fd9adfbd5dfd70596bf" prot="public" virt="non-virtual"><scope>NeoFOAM::la::SolverFactory</scope><name>create</name></member>
      <member refid="classNeoFOAM_1_1la_1_1SolverFactory_1ac73df8e15e25d43f9d28afbc7b0194c2" prot="protected" virt="non-virtual"><scope>NeoFOAM::la::SolverFactory</scope><name>exec_</name></member>
      <member refid="classNeoFOAM_1_1la_1_1SolverFactory_1a286092dbfcecb47cc8ecadd550b49b44" prot="public" virt="non-virtual"><scope>NeoFOAM::la::SolverFactory</scope><name>name</name></member>
      <member refid="classNeoFOAM_1_1la_1_1SolverFactory_1ad17b08b0643362c6e4e243e4daa7f0fa" prot="public" virt="pure-virtual"><scope>NeoFOAM::la::SolverFactory</scope><name>solve</name></member>
      <member refid="classNeoFOAM_1_1la_1_1SolverFactory_1ac80f5cbaf7efc8eebffd914884ad7773" prot="public" virt="non-virtual"><scope>NeoFOAM::la::SolverFactory</scope><name>SolverFactory</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
