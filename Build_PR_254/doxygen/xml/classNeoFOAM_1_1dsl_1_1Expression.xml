<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classNeoFOAM_1_1dsl_1_1Expression" kind="class" language="C++" prot="public">
    <compoundname>NeoFOAM::dsl::Expression</compoundname>
    <includes refid="dsl_2expression_8hpp" local="no">expression.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename ValueType</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classNeoFOAM_1_1dsl_1_1Expression_1afb19b6e8a5032c1fc9cbec4844a73866" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespaceNeoFOAM_1aaa4d35d275559f501cb6a1eec717c905" kindref="member">Executor</ref></type>
        <definition>const Executor NeoFOAM::dsl::Expression&lt; ValueType &gt;::exec_</definition>
        <argsstring></argsstring>
        <name>exec_</name>
        <qualifiedname>NeoFOAM::dsl::Expression::exec_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="149" column="20" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoFOAM_1_1dsl_1_1Expression_1af15a4e3566be143dd6240146f1daa36f" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classNeoFOAM_1_1dsl_1_1TemporalOperator" kindref="compound">TemporalOperator</ref>&lt; ValueType &gt; &gt;</type>
        <definition>std::vector&lt;TemporalOperator&lt;ValueType&gt; &gt; NeoFOAM::dsl::Expression&lt; ValueType &gt;::temporalOperators_</definition>
        <argsstring></argsstring>
        <name>temporalOperators_</name>
        <qualifiedname>NeoFOAM::dsl::Expression::temporalOperators_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="151" column="17" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="151" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoFOAM_1_1dsl_1_1Expression_1aafd3e71a2a48f4fafe61a999efe2f790" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classNeoFOAM_1_1dsl_1_1SpatialOperator" kindref="compound">SpatialOperator</ref>&lt; ValueType &gt; &gt;</type>
        <definition>std::vector&lt;SpatialOperator&lt;ValueType&gt; &gt; NeoFOAM::dsl::Expression&lt; ValueType &gt;::spatialOperators_</definition>
        <argsstring></argsstring>
        <name>spatialOperators_</name>
        <qualifiedname>NeoFOAM::dsl::Expression::spatialOperators_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="153" column="17" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="153" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classNeoFOAM_1_1dsl_1_1Expression_1a74e51b8c2ac790ac60ee274493ab7cd0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoFOAM::dsl::Expression&lt; ValueType &gt;::Expression</definition>
        <argsstring>(const Executor &amp;exec)</argsstring>
        <name>Expression</name>
        <qualifiedname>NeoFOAM::dsl::Expression::Expression</qualifiedname>
        <param>
          <type>const <ref refid="namespaceNeoFOAM_1aaa4d35d275559f501cb6a1eec717c905" kindref="member">Executor</ref> &amp;</type>
          <declname>exec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="27" column="5" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="27" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1dsl_1_1Expression_1ae1c033acba853c93cb300c1539fb82d8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoFOAM::dsl::Expression&lt; ValueType &gt;::Expression</definition>
        <argsstring>(const Expression &amp;exp)</argsstring>
        <name>Expression</name>
        <qualifiedname>NeoFOAM::dsl::Expression::Expression</qualifiedname>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref> &amp;</type>
          <declname>exp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="29" column="5" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="29" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1dsl_1_1Expression_1ac62b7d07af1ae6cde2edbd65cd0dbf58" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NeoFOAM::dsl::Expression&lt; ValueType &gt;::build</definition>
        <argsstring>(const Dictionary &amp;input)</argsstring>
        <name>build</name>
        <qualifiedname>NeoFOAM::dsl::Expression::build</qualifiedname>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1Dictionary" kindref="compound">Dictionary</ref> &amp;</type>
          <declname>input</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="34" column="10" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="34" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1dsl_1_1Expression_1aaafab32b855fada13b28497d08359428" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1Field" kindref="compound">Field</ref>&lt; ValueType &gt;</type>
        <definition>Field&lt; ValueType &gt; NeoFOAM::dsl::Expression&lt; ValueType &gt;::explicitOperation</definition>
        <argsstring>(size_t nCells) const</argsstring>
        <name>explicitOperation</name>
        <qualifiedname>NeoFOAM::dsl::Expression::explicitOperation</qualifiedname>
        <param>
          <type><ref refid="namespaceNeoFOAM_1aa8ea339f1c9a4f2232da876ead30a82c" kindref="member">size_t</ref></type>
          <declname>nCells</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="47" column="11" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="47" bodyend="51"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1dsl_1_1Expression_1a4707ce1519e69971d5b63fc2e2e7fab4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1Field" kindref="compound">Field</ref>&lt; ValueType &gt;</type>
        <definition>Field&lt; ValueType &gt; NeoFOAM::dsl::Expression&lt; ValueType &gt;::explicitOperation</definition>
        <argsstring>(Field&lt; ValueType &gt; &amp;source) const</argsstring>
        <name>explicitOperation</name>
        <qualifiedname>NeoFOAM::dsl::Expression::explicitOperation</qualifiedname>
        <param>
          <type><ref refid="classNeoFOAM_1_1Field" kindref="compound">Field</ref>&lt; ValueType &gt; &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="54" column="11" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="54" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1dsl_1_1Expression_1ae613399f86719573e7e5f22209a939f9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1Field" kindref="compound">Field</ref>&lt; ValueType &gt;</type>
        <definition>Field&lt; ValueType &gt; NeoFOAM::dsl::Expression&lt; ValueType &gt;::explicitOperation</definition>
        <argsstring>(Field&lt; ValueType &gt; &amp;source, scalar t, scalar dt) const</argsstring>
        <name>explicitOperation</name>
        <qualifiedname>NeoFOAM::dsl::Expression::explicitOperation</qualifiedname>
        <param>
          <type><ref refid="classNeoFOAM_1_1Field" kindref="compound">Field</ref>&lt; ValueType &gt; &amp;</type>
          <declname>source</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref></type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="66" column="11" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="66" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1dsl_1_1Expression_1a5d88a8cdfe2435b316c0f1c790736c2a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1la_1_1LinearSystem" kindref="compound">la::LinearSystem</ref>&lt; ValueType, <ref refid="namespaceNeoFOAM_1a95525d89d661b88aaa4548bdf2766842" kindref="member">localIdx</ref> &gt;</type>
        <definition>la::LinearSystem&lt; ValueType, localIdx &gt; NeoFOAM::dsl::Expression&lt; ValueType &gt;::implicitOperation</definition>
        <argsstring>()</argsstring>
        <name>implicitOperation</name>
        <qualifiedname>NeoFOAM::dsl::Expression::implicitOperation</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="80" column="22" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="80" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1dsl_1_1Expression_1afe5087f575f35a84c3eebd174e635dbf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NeoFOAM::dsl::Expression&lt; ValueType &gt;::implicitOperation</definition>
        <argsstring>(la::LinearSystem&lt; ValueType, localIdx &gt; &amp;ls, scalar t, scalar dt)</argsstring>
        <name>implicitOperation</name>
        <qualifiedname>NeoFOAM::dsl::Expression::implicitOperation</qualifiedname>
        <param>
          <type><ref refid="classNeoFOAM_1_1la_1_1LinearSystem" kindref="compound">la::LinearSystem</ref>&lt; ValueType, <ref refid="namespaceNeoFOAM_1a95525d89d661b88aaa4548bdf2766842" kindref="member">localIdx</ref> &gt; &amp;</type>
          <declname>ls</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref></type>
          <declname>dt</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="95" column="10" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="95" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1dsl_1_1Expression_1a1dfeb17008115ffea88f737431f49df7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NeoFOAM::dsl::Expression&lt; ValueType &gt;::addOperator</definition>
        <argsstring>(const SpatialOperator&lt; ValueType &gt; &amp;oper)</argsstring>
        <name>addOperator</name>
        <qualifiedname>NeoFOAM::dsl::Expression::addOperator</qualifiedname>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1SpatialOperator" kindref="compound">SpatialOperator</ref>&lt; ValueType &gt; &amp;</type>
          <declname>oper</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="107" column="10" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="107" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1dsl_1_1Expression_1a69125cc1d66addb6b8f57e5ac66d93ba" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NeoFOAM::dsl::Expression&lt; ValueType &gt;::addOperator</definition>
        <argsstring>(const TemporalOperator&lt; ValueType &gt; &amp;oper)</argsstring>
        <name>addOperator</name>
        <qualifiedname>NeoFOAM::dsl::Expression::addOperator</qualifiedname>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1TemporalOperator" kindref="compound">TemporalOperator</ref>&lt; ValueType &gt; &amp;</type>
          <declname>oper</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="109" column="10" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="109" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1dsl_1_1Expression_1a884e323093d23109354f8be8c41f31f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NeoFOAM::dsl::Expression&lt; ValueType &gt;::addExpression</definition>
        <argsstring>(const Expression &amp;equation)</argsstring>
        <name>addExpression</name>
        <qualifiedname>NeoFOAM::dsl::Expression::addExpression</qualifiedname>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref> &amp;</type>
          <declname>equation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="114" column="10" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="114" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1dsl_1_1Expression_1a25ac5b4bd059488c8f59285f4542cd74" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceNeoFOAM_1aa8ea339f1c9a4f2232da876ead30a82c" kindref="member">size_t</ref></type>
        <definition>size_t NeoFOAM::dsl::Expression&lt; ValueType &gt;::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>NeoFOAM::dsl::Expression::size</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="128" column="12" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="128" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1dsl_1_1Expression_1a48dc9c08e40c34da5b0b292486078a28" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="classNeoFOAM_1_1dsl_1_1TemporalOperator" kindref="compound">TemporalOperator</ref>&lt; ValueType &gt; &gt; &amp;</type>
        <definition>const std::vector&lt; TemporalOperator&lt; ValueType &gt; &gt; &amp; NeoFOAM::dsl::Expression&lt; ValueType &gt;::temporalOperators</definition>
        <argsstring>() const</argsstring>
        <name>temporalOperators</name>
        <qualifiedname>NeoFOAM::dsl::Expression::temporalOperators</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="131" column="23" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="131" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1dsl_1_1Expression_1a5b9c35d474e5d952d1a75c0855d4c41d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="classNeoFOAM_1_1dsl_1_1SpatialOperator" kindref="compound">SpatialOperator</ref>&lt; ValueType &gt; &gt; &amp;</type>
        <definition>const std::vector&lt; SpatialOperator&lt; ValueType &gt; &gt; &amp; NeoFOAM::dsl::Expression&lt; ValueType &gt;::spatialOperators</definition>
        <argsstring>() const</argsstring>
        <name>spatialOperators</name>
        <qualifiedname>NeoFOAM::dsl::Expression::spatialOperators</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="136" column="23" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="136" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1dsl_1_1Expression_1a711d017cb0712964c989b57f2fdfa12a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="classNeoFOAM_1_1dsl_1_1TemporalOperator" kindref="compound">TemporalOperator</ref>&lt; ValueType &gt; &gt; &amp;</type>
        <definition>std::vector&lt; TemporalOperator&lt; ValueType &gt; &gt; &amp; NeoFOAM::dsl::Expression&lt; ValueType &gt;::temporalOperators</definition>
        <argsstring>()</argsstring>
        <name>temporalOperators</name>
        <qualifiedname>NeoFOAM::dsl::Expression::temporalOperators</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="141" column="17" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="141" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1dsl_1_1Expression_1aeac3604251e3d9790eb2e299960639b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="classNeoFOAM_1_1dsl_1_1SpatialOperator" kindref="compound">SpatialOperator</ref>&lt; ValueType &gt; &gt; &amp;</type>
        <definition>std::vector&lt; SpatialOperator&lt; ValueType &gt; &gt; &amp; NeoFOAM::dsl::Expression&lt; ValueType &gt;::spatialOperators</definition>
        <argsstring>()</argsstring>
        <name>spatialOperators</name>
        <qualifiedname>NeoFOAM::dsl::Expression::spatialOperators</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="143" column="17" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="143" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1dsl_1_1Expression_1a5d340fdd02be696d5a773e7b96c8902d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespaceNeoFOAM_1aaa4d35d275559f501cb6a1eec717c905" kindref="member">Executor</ref> &amp;</type>
        <definition>const Executor &amp; NeoFOAM::dsl::Expression&lt; ValueType &gt;::exec</definition>
        <argsstring>() const</argsstring>
        <name>exec</name>
        <qualifiedname>NeoFOAM::dsl::Expression::exec</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="145" column="20" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="145" bodyend="145"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="23" column="1" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="24" bodyend="154"/>
    <listofallmembers>
      <member refid="classNeoFOAM_1_1dsl_1_1Expression_1a884e323093d23109354f8be8c41f31f5" prot="public" virt="non-virtual"><scope>NeoFOAM::dsl::Expression</scope><name>addExpression</name></member>
      <member refid="classNeoFOAM_1_1dsl_1_1Expression_1a1dfeb17008115ffea88f737431f49df7" prot="public" virt="non-virtual"><scope>NeoFOAM::dsl::Expression</scope><name>addOperator</name></member>
      <member refid="classNeoFOAM_1_1dsl_1_1Expression_1a69125cc1d66addb6b8f57e5ac66d93ba" prot="public" virt="non-virtual"><scope>NeoFOAM::dsl::Expression</scope><name>addOperator</name></member>
      <member refid="classNeoFOAM_1_1dsl_1_1Expression_1ac62b7d07af1ae6cde2edbd65cd0dbf58" prot="public" virt="non-virtual"><scope>NeoFOAM::dsl::Expression</scope><name>build</name></member>
      <member refid="classNeoFOAM_1_1dsl_1_1Expression_1a5d340fdd02be696d5a773e7b96c8902d" prot="public" virt="non-virtual"><scope>NeoFOAM::dsl::Expression</scope><name>exec</name></member>
      <member refid="classNeoFOAM_1_1dsl_1_1Expression_1afb19b6e8a5032c1fc9cbec4844a73866" prot="private" virt="non-virtual"><scope>NeoFOAM::dsl::Expression</scope><name>exec_</name></member>
      <member refid="classNeoFOAM_1_1dsl_1_1Expression_1aaafab32b855fada13b28497d08359428" prot="public" virt="non-virtual"><scope>NeoFOAM::dsl::Expression</scope><name>explicitOperation</name></member>
      <member refid="classNeoFOAM_1_1dsl_1_1Expression_1a4707ce1519e69971d5b63fc2e2e7fab4" prot="public" virt="non-virtual"><scope>NeoFOAM::dsl::Expression</scope><name>explicitOperation</name></member>
      <member refid="classNeoFOAM_1_1dsl_1_1Expression_1ae613399f86719573e7e5f22209a939f9" prot="public" virt="non-virtual"><scope>NeoFOAM::dsl::Expression</scope><name>explicitOperation</name></member>
      <member refid="classNeoFOAM_1_1dsl_1_1Expression_1a74e51b8c2ac790ac60ee274493ab7cd0" prot="public" virt="non-virtual"><scope>NeoFOAM::dsl::Expression</scope><name>Expression</name></member>
      <member refid="classNeoFOAM_1_1dsl_1_1Expression_1ae1c033acba853c93cb300c1539fb82d8" prot="public" virt="non-virtual"><scope>NeoFOAM::dsl::Expression</scope><name>Expression</name></member>
      <member refid="classNeoFOAM_1_1dsl_1_1Expression_1a5d88a8cdfe2435b316c0f1c790736c2a" prot="public" virt="non-virtual"><scope>NeoFOAM::dsl::Expression</scope><name>implicitOperation</name></member>
      <member refid="classNeoFOAM_1_1dsl_1_1Expression_1afe5087f575f35a84c3eebd174e635dbf" prot="public" virt="non-virtual"><scope>NeoFOAM::dsl::Expression</scope><name>implicitOperation</name></member>
      <member refid="classNeoFOAM_1_1dsl_1_1Expression_1a25ac5b4bd059488c8f59285f4542cd74" prot="public" virt="non-virtual"><scope>NeoFOAM::dsl::Expression</scope><name>size</name></member>
      <member refid="classNeoFOAM_1_1dsl_1_1Expression_1a5b9c35d474e5d952d1a75c0855d4c41d" prot="public" virt="non-virtual"><scope>NeoFOAM::dsl::Expression</scope><name>spatialOperators</name></member>
      <member refid="classNeoFOAM_1_1dsl_1_1Expression_1aeac3604251e3d9790eb2e299960639b6" prot="public" virt="non-virtual"><scope>NeoFOAM::dsl::Expression</scope><name>spatialOperators</name></member>
      <member refid="classNeoFOAM_1_1dsl_1_1Expression_1aafd3e71a2a48f4fafe61a999efe2f790" prot="private" virt="non-virtual"><scope>NeoFOAM::dsl::Expression</scope><name>spatialOperators_</name></member>
      <member refid="classNeoFOAM_1_1dsl_1_1Expression_1a48dc9c08e40c34da5b0b292486078a28" prot="public" virt="non-virtual"><scope>NeoFOAM::dsl::Expression</scope><name>temporalOperators</name></member>
      <member refid="classNeoFOAM_1_1dsl_1_1Expression_1a711d017cb0712964c989b57f2fdfa12a" prot="public" virt="non-virtual"><scope>NeoFOAM::dsl::Expression</scope><name>temporalOperators</name></member>
      <member refid="classNeoFOAM_1_1dsl_1_1Expression_1af15a4e3566be143dd6240146f1daa36f" prot="private" virt="non-virtual"><scope>NeoFOAM::dsl::Expression</scope><name>temporalOperators_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
