<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="namespaceNeoFOAM_1_1detail" kind="namespace" language="C++">
    <compoundname>NeoFOAM::detail</compoundname>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespaceNeoFOAM_1_1detail_1ad89bb3ff118f7955349e608dbde77526" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto NeoFOAM::detail::deepCopyVisitor</definition>
        <argsstring>(size_t size, const ValueType *srcPtr, ValueType *dstPtr)</argsstring>
        <name>deepCopyVisitor</name>
        <qualifiedname>NeoFOAM::detail::deepCopyVisitor</qualifiedname>
        <param>
          <type><ref refid="namespaceNeoFOAM_1aa8ea339f1c9a4f2232da876ead30a82c" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <param>
          <type>const ValueType *</type>
          <declname>srcPtr</declname>
        </param>
        <param>
          <type>ValueType *</type>
          <declname>dstPtr</declname>
        </param>
        <briefdescription>
<para>A helper function to simplify the common pattern of copying between and to executor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of elements to copy. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>srcPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the original block of memory. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dstPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the target block of memory. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ValueType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the underlying elements. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A function that takes a source and an destination executor </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/fields/field.hpp" line="30" column="6" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/fields/field.hpp" bodystart="30" bodyend="38"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1detail_1a56ee4648092e5f74747d3ae550b0857b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
          <param>
            <type>typename BinaryOp</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NeoFOAM::detail::fieldBinaryOp</definition>
        <argsstring>(Field&lt; ValueType &gt; &amp;a, const Field&lt; std::type_identity_t&lt; ValueType &gt; &gt; &amp;b, BinaryOp op)</argsstring>
        <name>fieldBinaryOp</name>
        <qualifiedname>NeoFOAM::detail::fieldBinaryOp</qualifiedname>
        <param>
          <type><ref refid="classNeoFOAM_1_1Field" kindref="compound">Field</ref>&lt; ValueType &gt; &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1Field" kindref="compound">Field</ref>&lt; std::type_identity_t&lt; ValueType &gt; &gt; &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>BinaryOp</type>
          <declname>op</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/fields/fieldFreeFunctions.hpp" line="105" column="6" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/fields/fieldFreeFunctions.hpp" bodystart="105" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1detail_1ac0091530b1a67617abe1bb193aec36e5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
          <param>
            <type>typename IndexType</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; T &gt;</type>
        <definition>std::vector&lt; T &gt; NeoFOAM::detail::apply_permutation</definition>
        <argsstring>(const std::span&lt; T &gt; vec, const std::vector&lt; IndexType &gt; &amp;p)</argsstring>
        <name>apply_permutation</name>
        <qualifiedname>NeoFOAM::detail::apply_permutation</qualifiedname>
        <param>
          <type>const std::span&lt; T &gt;</type>
          <declname>vec</declname>
        </param>
        <param>
          <type>const std::vector&lt; IndexType &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/mesh/unstructured/unstructuredMesh.hpp" line="301" column="13" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/mesh/unstructured/unstructuredMesh.hpp" bodystart="301" bodyend="306"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/fields/field.hpp" line="19" column="1"/>
  </compounddef>
</doxygen>
