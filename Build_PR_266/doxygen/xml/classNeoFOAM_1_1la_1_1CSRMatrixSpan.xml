<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classNeoFOAM_1_1la_1_1CSRMatrixSpan" kind="class" language="C++" prot="public">
    <compoundname>NeoFOAM::la::CSRMatrixSpan</compoundname>
    <includes refid="CSRMatrix_8hpp" local="no">CSRMatrix.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename ValueType</type>
      </param>
      <param>
        <type>typename IndexType</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classNeoFOAM_1_1la_1_1CSRMatrixSpan_1a508584ea4a8a29c2252aef7e09464653" prot="private" static="no" mutable="no">
        <type>std::span&lt; ValueType &gt;</type>
        <definition>std::span&lt;ValueType&gt; NeoFOAM::la::CSRMatrixSpan&lt; ValueType, IndexType &gt;::values_</definition>
        <argsstring></argsstring>
        <name>values_</name>
        <qualifiedname>NeoFOAM::la::CSRMatrixSpan::values_</qualifiedname>
        <briefdescription>
<para>Span to the values of the CSR matrix. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" line="73" column="15" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" bodystart="73" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoFOAM_1_1la_1_1CSRMatrixSpan_1a029f32cfb544101468d9429a7f0741df" prot="private" static="no" mutable="no">
        <type>std::span&lt; IndexType &gt;</type>
        <definition>std::span&lt;IndexType&gt; NeoFOAM::la::CSRMatrixSpan&lt; ValueType, IndexType &gt;::colIdxs_</definition>
        <argsstring></argsstring>
        <name>colIdxs_</name>
        <qualifiedname>NeoFOAM::la::CSRMatrixSpan::colIdxs_</qualifiedname>
        <briefdescription>
<para>Span to the column indices of the CSR matrix. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" line="74" column="15" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoFOAM_1_1la_1_1CSRMatrixSpan_1abdc90dcf2bc6011c0b5fa9d7642ad039" prot="private" static="no" mutable="no">
        <type>std::span&lt; IndexType &gt;</type>
        <definition>std::span&lt;IndexType&gt; NeoFOAM::la::CSRMatrixSpan&lt; ValueType, IndexType &gt;::rowPtrs_</definition>
        <argsstring></argsstring>
        <name>rowPtrs_</name>
        <qualifiedname>NeoFOAM::la::CSRMatrixSpan::rowPtrs_</qualifiedname>
        <briefdescription>
<para>Span to the row offsets for the CSR matrix. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" line="75" column="15" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" bodystart="75" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classNeoFOAM_1_1la_1_1CSRMatrixSpan_1a04381525be44d02f0c37054d375d10ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoFOAM::la::CSRMatrixSpan&lt; ValueType, IndexType &gt;::CSRMatrixSpan</definition>
        <argsstring>(const std::span&lt; ValueType &gt; &amp;values, const std::span&lt; IndexType &gt; &amp;colIdxs, const std::span&lt; IndexType &gt; &amp;rowPtrs)</argsstring>
        <name>CSRMatrixSpan</name>
        <qualifiedname>NeoFOAM::la::CSRMatrixSpan::CSRMatrixSpan</qualifiedname>
        <param>
          <type>const std::span&lt; ValueType &gt; &amp;</type>
          <declname>values</declname>
        </param>
        <param>
          <type>const std::span&lt; IndexType &gt; &amp;</type>
          <declname>colIdxs</declname>
        </param>
        <param>
          <type>const std::span&lt; IndexType &gt; &amp;</type>
          <declname>rowPtrs</declname>
        </param>
        <briefdescription>
<para>Constructor for <ref refid="classNeoFOAM_1_1la_1_1CSRMatrixSpan" kindref="compound">CSRMatrixSpan</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>values</parametername>
</parameternamelist>
<parameterdescription>
<para>Span of the non-zero values of the matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>colIdxs</parametername>
</parameternamelist>
<parameterdescription>
<para>Span of the column indices for each non-zero value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rowPtrs</parametername>
</parameternamelist>
<parameterdescription>
<para>Span of the starting index in values/colIdxs for each row. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" line="28" column="5" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" bodystart="28" bodyend="33"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1la_1_1CSRMatrixSpan_1ad7cfe7f82c340eb48164c7dace9b32e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NeoFOAM::la::CSRMatrixSpan&lt; ValueType, IndexType &gt;::~CSRMatrixSpan</definition>
        <argsstring>()=default</argsstring>
        <name>~CSRMatrixSpan</name>
        <qualifiedname>NeoFOAM::la::CSRMatrixSpan::~CSRMatrixSpan</qualifiedname>
        <briefdescription>
<para>Default destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" line="38" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1la_1_1CSRMatrixSpan_1a788e96aa0c842b128ec75b0cb18b882e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION ValueType &amp;</type>
        <definition>KOKKOS_INLINE_FUNCTION ValueType &amp; NeoFOAM::la::CSRMatrixSpan&lt; ValueType, IndexType &gt;::entry</definition>
        <argsstring>(const IndexType i, const IndexType j) const</argsstring>
        <name>entry</name>
        <qualifiedname>NeoFOAM::la::CSRMatrixSpan::entry</qualifiedname>
        <param>
          <type>const IndexType</type>
          <declname>i</declname>
        </param>
        <param>
          <type>const IndexType</type>
          <declname>j</declname>
        </param>
        <briefdescription>
<para>Retrieve a reference to the matrix element at position (i,j). </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>i</parametername>
</parameternamelist>
<parameterdescription>
<para>The row index. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>j</parametername>
</parameternamelist>
<parameterdescription>
<para>The column index. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to the matrix element if it exists. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" line="47" column="15" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" bodystart="47" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1la_1_1CSRMatrixSpan_1aa7bc50c05a3076ab062eba70b3398cac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION ValueType &amp;</type>
        <definition>KOKKOS_INLINE_FUNCTION ValueType &amp; NeoFOAM::la::CSRMatrixSpan&lt; ValueType, IndexType &gt;::directValue</definition>
        <argsstring>(const IndexType offset) const</argsstring>
        <name>directValue</name>
        <qualifiedname>NeoFOAM::la::CSRMatrixSpan::directValue</qualifiedname>
        <param>
          <type>const IndexType</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Direct access to a value given the offset. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset, from 0, to the value. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to the matrix element if it exists. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" line="69" column="15" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" bodystart="69" bodyend="69"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A helper class to allow easy read/write on all executors. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ValueType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the underlying CSR matrix elements. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IndexType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the indexes. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" line="18" column="1" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" bodystart="19" bodyend="76"/>
    <listofallmembers>
      <member refid="classNeoFOAM_1_1la_1_1CSRMatrixSpan_1a029f32cfb544101468d9429a7f0741df" prot="private" virt="non-virtual"><scope>NeoFOAM::la::CSRMatrixSpan</scope><name>colIdxs_</name></member>
      <member refid="classNeoFOAM_1_1la_1_1CSRMatrixSpan_1a04381525be44d02f0c37054d375d10ca" prot="public" virt="non-virtual"><scope>NeoFOAM::la::CSRMatrixSpan</scope><name>CSRMatrixSpan</name></member>
      <member refid="classNeoFOAM_1_1la_1_1CSRMatrixSpan_1aa7bc50c05a3076ab062eba70b3398cac" prot="public" virt="non-virtual"><scope>NeoFOAM::la::CSRMatrixSpan</scope><name>directValue</name></member>
      <member refid="classNeoFOAM_1_1la_1_1CSRMatrixSpan_1a788e96aa0c842b128ec75b0cb18b882e" prot="public" virt="non-virtual"><scope>NeoFOAM::la::CSRMatrixSpan</scope><name>entry</name></member>
      <member refid="classNeoFOAM_1_1la_1_1CSRMatrixSpan_1abdc90dcf2bc6011c0b5fa9d7642ad039" prot="private" virt="non-virtual"><scope>NeoFOAM::la::CSRMatrixSpan</scope><name>rowPtrs_</name></member>
      <member refid="classNeoFOAM_1_1la_1_1CSRMatrixSpan_1a508584ea4a8a29c2252aef7e09464653" prot="private" virt="non-virtual"><scope>NeoFOAM::la::CSRMatrixSpan</scope><name>values_</name></member>
      <member refid="classNeoFOAM_1_1la_1_1CSRMatrixSpan_1ad7cfe7f82c340eb48164c7dace9b32e4" prot="public" virt="non-virtual"><scope>NeoFOAM::la::CSRMatrixSpan</scope><name>~CSRMatrixSpan</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
