<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classNeoFOAM_1_1TokenList" kind="class" language="C++" prot="public">
    <compoundname>NeoFOAM::TokenList</compoundname>
    <includes refid="tokenList_8hpp" local="no">tokenList.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classNeoFOAM_1_1TokenList_1a05b8746737f5f98afaef5f5a3ac26b66" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::any &gt;</type>
        <definition>std::vector&lt;std::any&gt; NeoFOAM::TokenList::data_</definition>
        <argsstring></argsstring>
        <name>data_</name>
        <qualifiedname>NeoFOAM::TokenList::data_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/tokenList.hpp" line="163" column="17" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/tokenList.hpp" bodystart="163" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoFOAM_1_1TokenList_1acb18f99e3b1f494c76cec9dbdb7f11e4" prot="private" static="no" mutable="yes">
        <type><ref refid="namespaceNeoFOAM_1aa8ea339f1c9a4f2232da876ead30a82c" kindref="member">size_t</ref></type>
        <definition>size_t NeoFOAM::TokenList::nextIndex_</definition>
        <argsstring></argsstring>
        <name>nextIndex_</name>
        <qualifiedname>NeoFOAM::TokenList::nextIndex_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/tokenList.hpp" line="164" column="20" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/tokenList.hpp" bodystart="164" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classNeoFOAM_1_1TokenList_1aaed026ed7410ed814291bf58ee898612" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NeoFOAM::TokenList::TokenList</definition>
        <argsstring>()=default</argsstring>
        <name>TokenList</name>
        <qualifiedname>NeoFOAM::TokenList::TokenList</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/tokenList.hpp" line="25" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1TokenList_1a353e8bc661415fc3268e7ec44f72243c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NeoFOAM::TokenList::TokenList</definition>
        <argsstring>(const std::vector&lt; std::any &gt; &amp;data, size_t nextIndex=0)</argsstring>
        <name>TokenList</name>
        <qualifiedname>NeoFOAM::TokenList::TokenList</qualifiedname>
        <param>
          <type>const std::vector&lt; std::any &gt; &amp;</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoFOAM_1aa8ea339f1c9a4f2232da876ead30a82c" kindref="member">size_t</ref></type>
          <declname>nextIndex</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
<para>Construct a <ref refid="classNeoFOAM_1_1TokenList" kindref="compound">TokenList</ref> object from a vector of std::any. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>A vector of std::any. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/tokenList.hpp" line="31" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1TokenList_1a26a73d32c633b79786ef2798297940d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NeoFOAM::TokenList::TokenList</definition>
        <argsstring>(const std::initializer_list&lt; std::any &gt; &amp;initList)</argsstring>
        <name>TokenList</name>
        <qualifiedname>NeoFOAM::TokenList::TokenList</qualifiedname>
        <param>
          <type>const std::initializer_list&lt; std::any &gt; &amp;</type>
          <declname>initList</declname>
        </param>
        <briefdescription>
<para>Construct a <ref refid="classNeoFOAM_1_1TokenList" kindref="compound">TokenList</ref> object from an initializer list of std::any. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>initList</parametername>
</parameternamelist>
<parameterdescription>
<para>An initializer list of std::any. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/tokenList.hpp" line="37" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1TokenList_1a28538e2d77b345c6e4fd0b59ce1628f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeoFOAM::TokenList::insert</definition>
        <argsstring>(const std::any &amp;value)</argsstring>
        <name>insert</name>
        <qualifiedname>NeoFOAM::TokenList::insert</qualifiedname>
        <param>
          <type>const std::any &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Inserts a value into the token list. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value to insert. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/tokenList.hpp" line="43" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1TokenList_1a6fed52669558b6f69c62b4ea0353249d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeoFOAM::TokenList::remove</definition>
        <argsstring>(size_t index)</argsstring>
        <name>remove</name>
        <qualifiedname>NeoFOAM::TokenList::remove</qualifiedname>
        <param>
          <type><ref refid="namespaceNeoFOAM_1aa8ea339f1c9a4f2232da876ead30a82c" kindref="member">size_t</ref></type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Removes a value from the token list based on the specified index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the value to remove. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/tokenList.hpp" line="49" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1TokenList_1a6884a52a50f57399dc289a847a3bab26" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool NeoFOAM::TokenList::empty</definition>
        <argsstring>() const</argsstring>
        <name>empty</name>
        <qualifiedname>NeoFOAM::TokenList::empty</qualifiedname>
        <briefdescription>
<para>Checks if the token list is empty. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>True if the token list is empty, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/tokenList.hpp" line="55" column="11"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1TokenList_1a0ed56ef494f4e75d491773a3b1ef57a6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ReturnType</type>
          </param>
        </templateparamlist>
        <type>ReturnType</type>
        <definition>ReturnType NeoFOAM::TokenList::popFront</definition>
        <argsstring>()</argsstring>
        <name>popFront</name>
        <qualifiedname>NeoFOAM::TokenList::popFront</qualifiedname>
        <briefdescription>
<para>Removes first entry of <ref refid="classNeoFOAM_1_1TokenList" kindref="compound">TokenList</ref> and returns it. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type to cast the value to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The first value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/tokenList.hpp" line="64" column="16" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/tokenList.hpp" bodystart="64" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1TokenList_1a17eb84ce6a80f02db04d509dfb764dbf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="namespaceNeoFOAM_1aa8ea339f1c9a4f2232da876ead30a82c" kindref="member">size_t</ref></type>
        <definition>size_t NeoFOAM::TokenList::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>NeoFOAM::TokenList::size</qualifiedname>
        <briefdescription>
<para>Retrieves the size of the token list. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The size of the token list. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/tokenList.hpp" line="75" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1TokenList_1af5603ff259b8b4ad84de780d0ede99bd" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ReturnType</type>
          </param>
        </templateparamlist>
        <type>ReturnType &amp;</type>
        <definition>ReturnType &amp; NeoFOAM::TokenList::get</definition>
        <argsstring>(const size_t &amp;idx)</argsstring>
        <name>get</name>
        <qualifiedname>NeoFOAM::TokenList::get</qualifiedname>
        <param>
          <type>const <ref refid="namespaceNeoFOAM_1aa8ea339f1c9a4f2232da876ead30a82c" kindref="member">size_t</ref> &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Retrieves the value associated with the given index, casting it to the specified type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type to cast the value to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The index to retrieve the value for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to the value associated with the index, casted to type T. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/tokenList.hpp" line="86" column="17" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/tokenList.hpp" bodystart="86" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1TokenList_1a5021e4a82af2514956223cf9ed15afbf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ReturnType</type>
          </param>
        </templateparamlist>
        <type>ReturnType &amp;</type>
        <definition>ReturnType &amp; NeoFOAM::TokenList::next</definition>
        <argsstring>()</argsstring>
        <name>next</name>
        <qualifiedname>NeoFOAM::TokenList::next</qualifiedname>
        <briefdescription>
<para>Retrieves the value associated with the nextIndex, casting it to the specified type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type to cast the value to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to the value associated with the index, casted to type T. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/tokenList.hpp" line="107" column="16" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/tokenList.hpp" bodystart="107" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1TokenList_1abd7edf844cddeff19013ea97c57f3db9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ReturnType</type>
          </param>
        </templateparamlist>
        <type>const ReturnType &amp;</type>
        <definition>const ReturnType &amp; NeoFOAM::TokenList::get</definition>
        <argsstring>(const size_t &amp;idx) const</argsstring>
        <name>get</name>
        <qualifiedname>NeoFOAM::TokenList::get</qualifiedname>
        <param>
          <type>const <ref refid="namespaceNeoFOAM_1aa8ea339f1c9a4f2232da876ead30a82c" kindref="member">size_t</ref> &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Retrieves the value associated with the given index, casting it to the specified type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type to cast the value to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The index to retrieve the value for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A const reference to the value associated with the index, casted to type T. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/tokenList.hpp" line="123" column="23" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/tokenList.hpp" bodystart="123" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1TokenList_1a3ae147f11457cc2ff46db2fc666982c1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ReturnType</type>
          </param>
        </templateparamlist>
        <type>const ReturnType &amp;</type>
        <definition>const ReturnType &amp; NeoFOAM::TokenList::next</definition>
        <argsstring>() const</argsstring>
        <name>next</name>
        <qualifiedname>NeoFOAM::TokenList::next</qualifiedname>
        <briefdescription>
<para>Retrieves the value associated with the nextIndex, casting it to the specified type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type to cast the value to. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A const reference to the value associated with the index, casted to type T. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/tokenList.hpp" line="144" column="22" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/tokenList.hpp" bodystart="144" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1TokenList_1ad415f4f599f27f2a618538344ed01600" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::any &amp;</type>
        <definition>std::any &amp; NeoFOAM::TokenList::operator[]</definition>
        <argsstring>(const size_t &amp;idx)</argsstring>
        <name>operator[]</name>
        <qualifiedname>NeoFOAM::TokenList::operator[]</qualifiedname>
        <param>
          <type>const <ref refid="namespaceNeoFOAM_1aa8ea339f1c9a4f2232da876ead30a82c" kindref="member">size_t</ref> &amp;</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Retrieves the value associated with the given index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>The index to retrieve the value for. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A reference to the value associated with the index. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/tokenList.hpp" line="156" column="15"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1TokenList_1ac10f8f4a0fd157292f84a54ac37d18db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::vector&lt; std::any &gt; &amp;</type>
        <definition>std::vector&lt; std::any &gt; &amp; NeoFOAM::TokenList::tokens</definition>
        <argsstring>()</argsstring>
        <name>tokens</name>
        <qualifiedname>NeoFOAM::TokenList::tokens</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/tokenList.hpp" line="158" column="18"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A class representing a list of tokens. </para>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="classNeoFOAM_1_1TokenList" kindref="compound">TokenList</ref> class provides functionality to store and manipulate a list of tokens. It supports insertion, removal, and retrieval of tokens of any type using std::any. </para>
    </detaileddescription>
    <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/tokenList.hpp" line="21" column="1" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/tokenList.hpp" bodystart="22" bodyend="165"/>
    <listofallmembers>
      <member refid="classNeoFOAM_1_1TokenList_1a05b8746737f5f98afaef5f5a3ac26b66" prot="private" virt="non-virtual"><scope>NeoFOAM::TokenList</scope><name>data_</name></member>
      <member refid="classNeoFOAM_1_1TokenList_1a6884a52a50f57399dc289a847a3bab26" prot="public" virt="non-virtual"><scope>NeoFOAM::TokenList</scope><name>empty</name></member>
      <member refid="classNeoFOAM_1_1TokenList_1af5603ff259b8b4ad84de780d0ede99bd" prot="public" virt="non-virtual"><scope>NeoFOAM::TokenList</scope><name>get</name></member>
      <member refid="classNeoFOAM_1_1TokenList_1abd7edf844cddeff19013ea97c57f3db9" prot="public" virt="non-virtual"><scope>NeoFOAM::TokenList</scope><name>get</name></member>
      <member refid="classNeoFOAM_1_1TokenList_1a28538e2d77b345c6e4fd0b59ce1628f8" prot="public" virt="non-virtual"><scope>NeoFOAM::TokenList</scope><name>insert</name></member>
      <member refid="classNeoFOAM_1_1TokenList_1a5021e4a82af2514956223cf9ed15afbf" prot="public" virt="non-virtual"><scope>NeoFOAM::TokenList</scope><name>next</name></member>
      <member refid="classNeoFOAM_1_1TokenList_1a3ae147f11457cc2ff46db2fc666982c1" prot="public" virt="non-virtual"><scope>NeoFOAM::TokenList</scope><name>next</name></member>
      <member refid="classNeoFOAM_1_1TokenList_1acb18f99e3b1f494c76cec9dbdb7f11e4" prot="private" virt="non-virtual"><scope>NeoFOAM::TokenList</scope><name>nextIndex_</name></member>
      <member refid="classNeoFOAM_1_1TokenList_1ad415f4f599f27f2a618538344ed01600" prot="public" virt="non-virtual"><scope>NeoFOAM::TokenList</scope><name>operator[]</name></member>
      <member refid="classNeoFOAM_1_1TokenList_1a0ed56ef494f4e75d491773a3b1ef57a6" prot="public" virt="non-virtual"><scope>NeoFOAM::TokenList</scope><name>popFront</name></member>
      <member refid="classNeoFOAM_1_1TokenList_1a6fed52669558b6f69c62b4ea0353249d" prot="public" virt="non-virtual"><scope>NeoFOAM::TokenList</scope><name>remove</name></member>
      <member refid="classNeoFOAM_1_1TokenList_1a17eb84ce6a80f02db04d509dfb764dbf" prot="public" virt="non-virtual"><scope>NeoFOAM::TokenList</scope><name>size</name></member>
      <member refid="classNeoFOAM_1_1TokenList_1aaed026ed7410ed814291bf58ee898612" prot="public" virt="non-virtual"><scope>NeoFOAM::TokenList</scope><name>TokenList</name></member>
      <member refid="classNeoFOAM_1_1TokenList_1a353e8bc661415fc3268e7ec44f72243c" prot="public" virt="non-virtual"><scope>NeoFOAM::TokenList</scope><name>TokenList</name></member>
      <member refid="classNeoFOAM_1_1TokenList_1a26a73d32c633b79786ef2798297940d0" prot="public" virt="non-virtual"><scope>NeoFOAM::TokenList</scope><name>TokenList</name></member>
      <member refid="classNeoFOAM_1_1TokenList_1ac10f8f4a0fd157292f84a54ac37d18db" prot="public" virt="non-virtual"><scope>NeoFOAM::TokenList</scope><name>tokens</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
