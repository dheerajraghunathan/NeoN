<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="namespaceNeoFOAM_1_1dsl" kind="namespace" language="C++">
    <compoundname>NeoFOAM::dsl</compoundname>
    <innerclass refid="classNeoFOAM_1_1dsl_1_1Coeff" prot="public">NeoFOAM::dsl::Coeff</innerclass>
    <innerclass refid="classNeoFOAM_1_1dsl_1_1Expression" prot="public">NeoFOAM::dsl::Expression</innerclass>
    <innerclass refid="classNeoFOAM_1_1dsl_1_1ForwardEuler" prot="public">NeoFOAM::dsl::ForwardEuler</innerclass>
    <innerclass refid="classNeoFOAM_1_1dsl_1_1Operator" prot="public">NeoFOAM::dsl::Operator</innerclass>
    <innerclass refid="classNeoFOAM_1_1dsl_1_1OperatorMixin" prot="public">NeoFOAM::dsl::OperatorMixin</innerclass>
    <innerclass refid="classNeoFOAM_1_1dsl_1_1TimeIntegration" prot="public">NeoFOAM::dsl::TimeIntegration</innerclass>
    <innerclass refid="classNeoFOAM_1_1dsl_1_1TimeIntegratorBase" prot="public">NeoFOAM::dsl::TimeIntegratorBase</innerclass>
    <innernamespace refid="namespaceNeoFOAM_1_1dsl_1_1detail">NeoFOAM::dsl::detail</innernamespace>
    <innernamespace refid="namespaceNeoFOAM_1_1dsl_1_1exp">NeoFOAM::dsl::exp</innernamespace>
    <innernamespace refid="namespaceNeoFOAM_1_1dsl_1_1imp">NeoFOAM::dsl::imp</innernamespace>
    <innernamespace refid="namespaceNeoFOAM_1_1dsl_1_1temporal">NeoFOAM::dsl::temporal</innernamespace>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1afe10f51285498b6fc5aa951ba8df8ca6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1dsl_1_1Coeff" kindref="compound">Coeff</ref></type>
        <definition>Coeff NeoFOAM::dsl::operator*</definition>
        <argsstring>(const Coeff &amp;lhs, const Coeff &amp;rhs)</argsstring>
        <name>operator*</name>
        <qualifiedname>NeoFOAM::dsl::operator*</qualifiedname>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Coeff" kindref="compound">Coeff</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Coeff" kindref="compound">Coeff</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/coeff.hpp" line="57" column="15" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/coeff.hpp" bodystart="57" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1ac9c92e76ba5b1f41f35e04c1f240e01b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref></type>
        <definition>Expression NeoFOAM::dsl::operator+</definition>
        <argsstring>(Expression lhs, const Expression &amp;rhs)</argsstring>
        <name>operator+</name>
        <qualifiedname>NeoFOAM::dsl::operator+</qualifiedname>
        <param>
          <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="124" column="13" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="124" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1a01b7ab1ca011e58077b6637cc361be3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref></type>
        <definition>Expression NeoFOAM::dsl::operator+</definition>
        <argsstring>(Expression lhs, const Operator &amp;rhs)</argsstring>
        <name>operator+</name>
        <qualifiedname>NeoFOAM::dsl::operator+</qualifiedname>
        <param>
          <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Operator" kindref="compound">Operator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="130" column="13" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="130" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1acbe5a97a4e0caf470783202c963dccc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref></type>
        <definition>Expression NeoFOAM::dsl::operator+</definition>
        <argsstring>(const Operator &amp;lhs, const Operator &amp;rhs)</argsstring>
        <name>operator+</name>
        <qualifiedname>NeoFOAM::dsl::operator+</qualifiedname>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Operator" kindref="compound">Operator</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Operator" kindref="compound">Operator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="136" column="13" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="136" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1a5ea73088dd494171b80cdad32fefee92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref></type>
        <definition>Expression NeoFOAM::dsl::operator*</definition>
        <argsstring>(scalar scale, const Expression &amp;es)</argsstring>
        <name>operator*</name>
        <qualifiedname>NeoFOAM::dsl::operator*</qualifiedname>
        <param>
          <type><ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref></type>
          <declname>scale</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref> &amp;</type>
          <declname>es</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="144" column="13" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="144" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1afc428714f57df9a1de192a6c6af1c47c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref></type>
        <definition>Expression NeoFOAM::dsl::operator-</definition>
        <argsstring>(Expression lhs, const Expression &amp;rhs)</argsstring>
        <name>operator-</name>
        <qualifiedname>NeoFOAM::dsl::operator-</qualifiedname>
        <param>
          <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="162" column="13" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="162" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1ad076f0422e627810af06821be3750b1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref></type>
        <definition>Expression NeoFOAM::dsl::operator-</definition>
        <argsstring>(Expression lhs, const Operator &amp;rhs)</argsstring>
        <name>operator-</name>
        <qualifiedname>NeoFOAM::dsl::operator-</qualifiedname>
        <param>
          <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Operator" kindref="compound">Operator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="168" column="13" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="168" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1aa5e7279703cfb7e7bb2279a3565e57ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref></type>
        <definition>Expression NeoFOAM::dsl::operator-</definition>
        <argsstring>(const Operator &amp;lhs, const Operator &amp;rhs)</argsstring>
        <name>operator-</name>
        <qualifiedname>NeoFOAM::dsl::operator-</qualifiedname>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Operator" kindref="compound">Operator</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Operator" kindref="compound">Operator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="174" column="13" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="174" bodyend="180"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1a717eb7b6aa3c1e412442890d74b56173" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1dsl_1_1Operator" kindref="compound">Operator</ref></type>
        <definition>Operator NeoFOAM::dsl::operator*</definition>
        <argsstring>(scalar scalarCoeff, Operator rhs)</argsstring>
        <name>operator*</name>
        <qualifiedname>NeoFOAM::dsl::operator*</qualifiedname>
        <param>
          <type><ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref></type>
          <declname>scalarCoeff</declname>
        </param>
        <param>
          <type><ref refid="classNeoFOAM_1_1dsl_1_1Operator" kindref="compound">Operator</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/operator.hpp" line="172" column="10" declfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/operator.hpp" declline="172" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1ae8552c85027ad0eb92f7ca662928da7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1dsl_1_1Operator" kindref="compound">Operator</ref></type>
        <definition>Operator NeoFOAM::dsl::operator*</definition>
        <argsstring>(const Field&lt; scalar &gt; &amp;coeffField, Operator rhs)</argsstring>
        <name>operator*</name>
        <qualifiedname>NeoFOAM::dsl::operator*</qualifiedname>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1Field" kindref="compound">Field</ref>&lt; <ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref> &gt; &amp;</type>
          <declname>coeffField</declname>
        </param>
        <param>
          <type><ref refid="classNeoFOAM_1_1dsl_1_1Operator" kindref="compound">Operator</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/operator.hpp" line="174" column="10" declfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/operator.hpp" declline="174" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1a8788514a9b3e8b39a563a7e8080ad46d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1dsl_1_1Operator" kindref="compound">Operator</ref></type>
        <definition>Operator NeoFOAM::dsl::operator*</definition>
        <argsstring>(const Coeff &amp;coeff, Operator rhs)</argsstring>
        <name>operator*</name>
        <qualifiedname>NeoFOAM::dsl::operator*</qualifiedname>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Coeff" kindref="compound">Coeff</ref> &amp;</type>
          <declname>coeff</declname>
        </param>
        <param>
          <type><ref refid="classNeoFOAM_1_1dsl_1_1Operator" kindref="compound">Operator</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/operator.hpp" line="176" column="10" declfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/operator.hpp" declline="176" declcolumn="10"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1aca7a238d8cb78fcd26617d77c673ca22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CoeffFunction</type>
          </param>
        </templateparamlist>
        <type><ref refid="classNeoFOAM_1_1dsl_1_1Operator" kindref="compound">Operator</ref></type>
        <definition>Operator NeoFOAM::dsl::operator*</definition>
        <argsstring>(CoeffFunction coeffFunc, const Operator &amp;lhs)</argsstring>
        <name>operator*</name>
        <qualifiedname>NeoFOAM::dsl::operator*</qualifiedname>
        <param>
          <type>CoeffFunction</type>
          <declname>coeffFunc</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Operator" kindref="compound">Operator</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
    <requiresclause>std::invocable&lt;CoeffFunction&amp;, size_t&gt;    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/operator.hpp" line="180" column="10" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/operator.hpp" bodystart="180" bodyend="191"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1a6b80be5f715b88130fe7892bfc8c1811" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FieldType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NeoFOAM::dsl::solve</definition>
        <argsstring>(Expression &amp;exp, FieldType &amp;solution, scalar dt, const Dictionary &amp;fvSchemes, const Dictionary &amp;fvSolution)</argsstring>
        <name>solve</name>
        <qualifiedname>NeoFOAM::dsl::solve</qualifiedname>
        <param>
          <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref> &amp;</type>
          <declname>exp</declname>
        </param>
        <param>
          <type>FieldType &amp;</type>
          <declname>solution</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref></type>
          <declname>dt</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1Dictionary" kindref="compound">Dictionary</ref> &amp;</type>
          <declname>fvSchemes</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1Dictionary" kindref="compound">Dictionary</ref> &amp;</type>
          <declname>fvSolution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/solver.hpp" line="30" column="6" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/solver.hpp" bodystart="30" bodyend="54"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/coeff.hpp" line="8" column="1"/>
  </compounddef>
</doxygen>
