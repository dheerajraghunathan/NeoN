name: Trigger LRZ GitLab CI

on:
  push:
    branches: [dev, main]
  pull_request:
    types: [opened, synchronize, reopened, labeled, unlabeled]

jobs:
  trigger-lrz-ci:
    runs-on: ubuntu-latest

    # Skip if PR has Skip-build label
    if: "!contains(toJson(github.event.pull_request.labels.*.name), 'Skip-build')"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine branch
        id: branch
        run: |
          if [[ "$GITHUB_EVENT_NAME" == "pull_request"* ]]; then
            BRANCH="$GITHUB_HEAD_REF"
          else
            BRANCH=${GITHUB_REF_NAME#refs/heads/}
          fi
          echo "branch=$BRANCH" >> $GITHUB_OUTPUT

      - name: Set GitHub commit status to pending
        run: |
          echo "Setting commit status to pending..."
          curl -s -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            "https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }}" \
            -d '{"state":"pending","context":"LRZ GitLab CI","description":"Waiting for LRZ GitLab CI..."}'

      - name: Push commit to LRZ GitLab
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git remote add lrz https://oauth2:${{ secrets.GITLAB_PAT }}@gitlab-ce.lrz.de/greole/neon.git
          git fetch origin ${{ steps.branch.outputs.branch }}
          git checkout -B ${{ steps.branch.outputs.branch }} origin/${{ steps.branch.outputs.branch }}
          git reset --hard origin/${{ steps.branch.outputs.branch }}
          git push --force lrz HEAD:refs/heads/${{ steps.branch.outputs.branch }}

      - name: Trigger LRZ GitLab pipeline
        id: trigger
        run: |
          BRANCH=${{ steps.branch.outputs.branch }}
          echo "Triggering new pipeline on branch $BRANCH"

          response=$(curl -s --request POST \
            --form "token=${{ secrets.LRZ_GITLAB_TRIGGER_TOKEN }}" \
            --form "ref=$BRANCH" \
            --form "variables[GITHUB_SHA]=$GITHUB_SHA" \
            "https://gitlab-ce.lrz.de/api/v4/projects/greole%2Fneon/trigger/pipeline")

          echo "$response" | jq .
          pipeline_id=$(echo "$response" | jq -r '.id')
          if [ "$pipeline_id" = "null" ]; then
            echo "Failed to trigger LRZ pipeline"
            exit 1
          fi

          echo "pipeline_id=$pipeline_id" >> $GITHUB_OUTPUT
