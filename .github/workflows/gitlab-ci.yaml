name: LRZ GitLab CI

on:
  push:
    branches:
      - dev
      - main
  pull_request:
    types: [opened, synchronize, reopened, labeled, unlabeled]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  trigger-lrz-ci:
    runs-on: ubuntu-latest
    if: "!contains(toJson(github.event.pull_request.labels.*.name), 'Skip-build')"
    steps:
      - name: Trigger LRZ GitLab pipeline
        id: trigger
        run: |
          echo "Triggering LRZ GitLab pipeline..."

          BRANCH=${GITHUB_REF_NAME#refs/heads/}
          BRANCH=${BRANCH:-$GITHUB_HEAD_REF}
          BRANCH=${BRANCH:-$GITHUB_BASE_REF}  # fallback for PRs

          ENCODED_BRANCH=$(python3 -c "import urllib.parse; print(urllib.parse.quote('''$BRANCH'''))")
          echo "Encoded branch: $ENCODED_BRANCH"

          response=$(curl -s --request POST --form "token=${{ secrets.LRZ_GITLAB_TRIGGER_TOKEN }}" --form "ref=$ENCODED_BRANCH" "https://gitlab-ce.lrz.de/api/v4/projects/greole%2Fneon/trigger/pipeline")

          echo "$response" | jq .

          pipeline_id=$(echo "$response" | jq -r '.id')
          if [ "$pipeline_id" = "null" ]; then
            echo "Failed to trigger LRZ pipeline"
            exit 1
          fi

          echo "pipeline_id=$pipeline_id" >> $GITHUB_OUTPUT

      - name: Set GitHub commit status to "pending"
        run: |
          echo "Setting pending status on commit..."
          curl -s -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github.v3+json" https://api.github.com/repos/${{ github.repository }}/statuses/${{ github.sha }} -d '{"state":"pending","context":"LRZ GitLab CI","description":"Waiting for LRZ GitLab CI..."}'
