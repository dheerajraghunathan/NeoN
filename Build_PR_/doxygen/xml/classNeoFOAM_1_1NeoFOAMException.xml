<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classNeoFOAM_1_1NeoFOAMException" kind="class" language="C++" prot="public">
    <compoundname>NeoFOAM::NeoFOAMException</compoundname>
    <basecompoundref prot="public" virt="non-virtual">std::exception</basecompoundref>
    <includes refid="error_8hpp" local="no">error.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classNeoFOAM_1_1NeoFOAMException_1a9280f81fb42d1d47d9f9e48181e584d1" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string NeoFOAM::NeoFOAMException::message_</definition>
        <argsstring></argsstring>
        <name>message_</name>
        <qualifiedname>NeoFOAM::NeoFOAMException::message_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The error message associated with the exception. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/error.hpp" line="54" column="17" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/error.hpp" bodystart="54" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classNeoFOAM_1_1NeoFOAMException_1a97203629bd4f1e83a2ea1010094c026a" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoFOAM::NeoFOAMException::NeoFOAMException</definition>
        <argsstring>(const std::string &amp;message)</argsstring>
        <name>NeoFOAMException</name>
        <qualifiedname>NeoFOAM::NeoFOAMException::NeoFOAMException</qualifiedname>
        <param>
          <type>const std::string &amp;</type>
          <declname>message</declname>
        </param>
        <briefdescription>
<para>Constructs a <ref refid="classNeoFOAM_1_1NeoFOAMException" kindref="compound">NeoFOAMException</ref> object with the given error message. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para>The error message associated with the exception. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/error.hpp" line="44" column="14" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/error.hpp" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1NeoFOAMException_1a63a96bda4d9d5c27ada373b872d10a73" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * NeoFOAM::NeoFOAMException::what</definition>
        <argsstring>() const noexcept override</argsstring>
        <name>what</name>
        <qualifiedname>NeoFOAM::NeoFOAMException::what</qualifiedname>
        <briefdescription>
<para>Returns the error message associated with the exception. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>const char* The error message. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/error.hpp" line="50" column="16" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/error.hpp" bodystart="50" bodyend="50"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Custom exception class for <ref refid="namespaceNeoFOAM" kindref="compound">NeoFOAM</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para>This class is derived from std::exception and provides a custom exception type for <ref refid="namespaceNeoFOAM" kindref="compound">NeoFOAM</ref>. It stores an error message and overrides the <ref refid="classNeoFOAM_1_1NeoFOAMException_1a63a96bda4d9d5c27ada373b872d10a73" kindref="member">what()</ref> function to return the error message. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>NeoFOAM::NeoFOAMException</label>
        <link refid="classNeoFOAM_1_1NeoFOAMException"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::exception</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>NeoFOAM::NeoFOAMException</label>
        <link refid="classNeoFOAM_1_1NeoFOAMException"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>std::exception</label>
      </node>
    </collaborationgraph>
    <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/error.hpp" line="36" column="1" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/error.hpp" bodystart="37" bodyend="55"/>
    <listofallmembers>
      <member refid="classNeoFOAM_1_1NeoFOAMException_1a9280f81fb42d1d47d9f9e48181e584d1" prot="private" virt="non-virtual"><scope>NeoFOAM::NeoFOAMException</scope><name>message_</name></member>
      <member refid="classNeoFOAM_1_1NeoFOAMException_1a97203629bd4f1e83a2ea1010094c026a" prot="public" virt="non-virtual"><scope>NeoFOAM::NeoFOAMException</scope><name>NeoFOAMException</name></member>
      <member refid="classNeoFOAM_1_1NeoFOAMException_1a63a96bda4d9d5c27ada373b872d10a73" prot="public" virt="non-virtual"><scope>NeoFOAM::NeoFOAMException</scope><name>what</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
