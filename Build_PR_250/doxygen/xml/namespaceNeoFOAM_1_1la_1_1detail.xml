<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="namespaceNeoFOAM_1_1la_1_1detail" kind="namespace" language="C++">
    <compoundname>NeoFOAM::la::detail</compoundname>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespaceNeoFOAM_1_1la_1_1detail_1ae22ee9065966ba41b4176cb85c20e274" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
          <param>
            <type>typename IndexType</type>
          </param>
        </templateparamlist>
        <type>std::shared_ptr&lt; gko::matrix::Csr&lt; ValueType, IndexType &gt; &gt;</type>
        <definition>std::shared_ptr&lt; gko::matrix::Csr&lt; ValueType, IndexType &gt; &gt; NeoFOAM::la::detail::createGkoMtx</definition>
        <argsstring>(std::shared_ptr&lt; const gko::Executor &gt; exec, LinearSystem&lt; ValueType, IndexType &gt; &amp;sys)</argsstring>
        <name>createGkoMtx</name>
        <qualifiedname>NeoFOAM::la::detail::createGkoMtx</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; const gko::Executor &gt;</type>
          <declname>exec</declname>
        </param>
        <param>
          <type><ref refid="classNeoFOAM_1_1la_1_1LinearSystem" kindref="compound">LinearSystem</ref>&lt; ValueType, IndexType &gt; &amp;</type>
          <declname>sys</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/utilities.hpp" line="30" column="1" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/utilities.hpp" bodystart="30" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1la_1_1detail_1ac45277af71658ef44d94a552e457a84d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type>std::shared_ptr&lt; gko::matrix::Dense&lt; ValueType &gt; &gt;</type>
        <definition>std::shared_ptr&lt; gko::matrix::Dense&lt; ValueType &gt; &gt; NeoFOAM::la::detail::createGkoDense</definition>
        <argsstring>(std::shared_ptr&lt; const gko::Executor &gt; exec, ValueType *ptr, size_t size)</argsstring>
        <name>createGkoDense</name>
        <qualifiedname>NeoFOAM::la::detail::createGkoDense</qualifiedname>
        <param>
          <type>std::shared_ptr&lt; const gko::Executor &gt;</type>
          <declname>exec</declname>
        </param>
        <param>
          <type>ValueType *</type>
          <declname>ptr</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoFOAM_1aa8ea339f1c9a4f2232da876ead30a82c" kindref="member">size_t</ref></type>
          <declname>size</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/utilities.hpp" line="46" column="1" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/utilities.hpp" bodystart="46" bodyend="51"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/utilities.hpp" line="26" column="1"/>
  </compounddef>
</doxygen>
