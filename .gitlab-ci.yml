# SPDX-FileCopyrightText: 2023 - 2025 NeoN authors
#
# SPDX-License-Identifier: Unlicense

.build-and-test-neon-common:
  rules:
    # Run only when triggered via API
    - if: $CI_PIPELINE_SOURCE == "trigger" && $BENCHMARK != "true"
      when: always
    # Skip in all other cases
    - when: never

  before_script:
    # Install pre-commit
    - pip3 install --user --break-system-packages pre-commit
    - export PATH="$HOME/.local/bin:$PATH"

    # Optional: show versions of tools
    - cmake --version
    - clang++ --version || g++ --version

# Build and test on NVIDIA GPUs
build-and-test-neon-nvidia:
  extends: .build-and-test-neon-common
  tags: ["nvidia-h100-gpus"]
  image: greole/neon-cuda
  script:
    - nvidia-smi
    - nvcc --version

    # Configure, build, and test
    - cmake --preset develop -DCMAKE_CUDA_ARCHITECTURES=90 -DNeoN_WITH_THREADS=OFF
    - cmake --build --preset develop
    - ctest --preset develop --output-on-failure

# Build and test on AMD GPUs
build-and-test-neon-amd:
  extends: .build-and-test-neon-common
  tags: ["amd-gpus"]
  image: chihtaw/neon-rocm:6.4.1-complete
  script:
    # Set ROCm environment
    - export PATH=/opt/rocm/bin:$PATH
    - export LD_LIBRARY_PATH=/opt/rocm/lib:/opt/rocm/lib64:$LD_LIBRARY_PATH

    # Set host compiler for hipcc (default is Clang bundled in ROCm)
    - export HIPCC_CXX=/usr/bin/g++

    # Show GPU info
    - rocminfo | grep "AMD"

    # Configure, build, and test
    - |
      cmake --preset develop \
        -DCMAKE_C_COMPILER=gcc \
        -DCMAKE_CXX_COMPILER=hipcc \
        -DCMAKE_HIP_ARCHITECTURES=gfx90a \
        -DKokkos_ARCH_AMD_GFX90A=ON \
        -DNeoN_WITH_THREADS=OFF

    - cmake --build --preset develop
    - ctest --preset develop --output-on-failure

.benchmark-neon-common:
  rules:
    # Run only when triggered via API for benchmarking
    - if: $CI_PIPELINE_SOURCE == "trigger" && $BENCHMARK == "true"
      when: always
    # Skip in all other cases
    - when: never

  variables:
    RESULTS_DIR: "benchmark-results"
    RUN_IDENTIFIER: "${CI_PIPELINE_ID}"
    REPO_NAME: "NeoFOAM-BenchmarkData"
    TARGET_REPO: "github.com/exasim-project/${REPO_NAME}.git"
    TARGET_BRANCH: "ci-benchmarks"

  before_script:
    # Install dependencies
    - pip3 install --user --break-system-packages xmltodict

benchmark-neon-nvidia:
  extends: .benchmark-neon-common
  tags: ["nvidia-h100-gpus"]
  image: greole/neon-cuda
  script:
    - bash ci/benchmark.sh

benchmark-neon-amd:
  extends: .benchmark-neon-common
  tags: ["amd-gpus"]
  image: chihtaw/neon-rocm:6.4.1-complete
  script:
    - bash ci/benchmark.sh
