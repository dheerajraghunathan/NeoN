<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classNeoFOAM_1_1dsl_1_1Expression" kind="class" language="C++" prot="public">
    <compoundname>NeoFOAM::dsl::Expression</compoundname>
    <includes refid="expression_8hpp" local="no">expression.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classNeoFOAM_1_1dsl_1_1Expression_1a096065162e85aaec983a2526afb9fc8d" prot="private" static="no" mutable="no">
        <type>const <ref refid="namespaceNeoFOAM_1ad8645a25cba2275ee5bea619093da91e" kindref="member">Executor</ref></type>
        <definition>const Executor NeoFOAM::dsl::Expression::exec_</definition>
        <argsstring></argsstring>
        <name>exec_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="99" column="20" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoFOAM_1_1dsl_1_1Expression_1a6b5bd84c63cd6e1c76ac0d40eed69e9a" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classNeoFOAM_1_1dsl_1_1Operator" kindref="compound">Operator</ref> &gt;</type>
        <definition>std::vector&lt;Operator&gt; NeoFOAM::dsl::Expression::temporalOperators_</definition>
        <argsstring></argsstring>
        <name>temporalOperators_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="101" column="17" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoFOAM_1_1dsl_1_1Expression_1af6f2731d095c0729cc8f2fb4a7c9d604" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classNeoFOAM_1_1dsl_1_1Operator" kindref="compound">Operator</ref> &gt;</type>
        <definition>std::vector&lt;Operator&gt; NeoFOAM::dsl::Expression::implicitOperators_</definition>
        <argsstring></argsstring>
        <name>implicitOperators_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="103" column="17" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="103" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoFOAM_1_1dsl_1_1Expression_1ab62b469bc29d11440bcae341bdf5fdd6" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classNeoFOAM_1_1dsl_1_1Operator" kindref="compound">Operator</ref> &gt;</type>
        <definition>std::vector&lt;Operator&gt; NeoFOAM::dsl::Expression::explicitOperators_</definition>
        <argsstring></argsstring>
        <name>explicitOperators_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="105" column="17" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classNeoFOAM_1_1dsl_1_1Expression_1aeefc57058045a1404d849a9dd258d14e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoFOAM::dsl::Expression::Expression</definition>
        <argsstring>(const Executor &amp;exec)</argsstring>
        <name>Expression</name>
        <param>
          <type>const <ref refid="namespaceNeoFOAM_1ad8645a25cba2275ee5bea619093da91e" kindref="member">Executor</ref> &amp;</type>
          <declname>exec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="22" column="5" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="22" bodyend="24"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1dsl_1_1Expression_1a5cc861b9fdfe016b5110c6c1faf99185" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1Field" kindref="compound">Field</ref>&lt; <ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref> &gt;</type>
        <definition>Field&lt;scalar&gt; NeoFOAM::dsl::Expression::explicitOperation</definition>
        <argsstring>(size_t nCells) const</argsstring>
        <name>explicitOperation</name>
        <param>
          <type><ref refid="namespaceNeoFOAM_1aa8ea339f1c9a4f2232da876ead30a82c" kindref="member">size_t</ref></type>
          <declname>nCells</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="27" column="11" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="27" bodyend="31"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1dsl_1_1Expression_1ad8524fe6ca386d3324063584f0ec3b60" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1Field" kindref="compound">Field</ref>&lt; <ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref> &gt;</type>
        <definition>Field&lt;scalar&gt; NeoFOAM::dsl::Expression::explicitOperation</definition>
        <argsstring>(Field&lt; scalar &gt; &amp;source) const</argsstring>
        <name>explicitOperation</name>
        <param>
          <type><ref refid="classNeoFOAM_1_1Field" kindref="compound">Field</ref>&lt; <ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref> &gt; &amp;</type>
          <declname>source</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="34" column="11" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="34" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1dsl_1_1Expression_1aee6082759c68f013cc47d51ae8f0e7f6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NeoFOAM::dsl::Expression::addOperator</definition>
        <argsstring>(const Operator &amp;Operator)</argsstring>
        <name>addOperator</name>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Operator" kindref="compound">Operator</ref> &amp;</type>
          <declname>Operator</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="43" column="10" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="43" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1dsl_1_1Expression_1af313e6ab82947b615550bd71d8050234" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NeoFOAM::dsl::Expression::addExpression</definition>
        <argsstring>(const Expression &amp;equation)</argsstring>
        <name>addExpression</name>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref> &amp;</type>
          <declname>equation</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="59" column="10" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="59" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1dsl_1_1Expression_1a96f277edda83384dc99926c79b09ceb9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceNeoFOAM_1aa8ea339f1c9a4f2232da876ead30a82c" kindref="member">size_t</ref></type>
        <definition>size_t NeoFOAM::dsl::Expression::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="77" column="12" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="77" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1dsl_1_1Expression_1a26c16e4cd5f5d066f5314c84b48a4611" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="classNeoFOAM_1_1dsl_1_1Operator" kindref="compound">Operator</ref> &gt; &amp;</type>
        <definition>const std::vector&lt;Operator&gt;&amp; NeoFOAM::dsl::Expression::temporalOperators</definition>
        <argsstring>() const</argsstring>
        <name>temporalOperators</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="83" column="23" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1dsl_1_1Expression_1aadcaeb59de0e249a3e749760b198c30f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="classNeoFOAM_1_1dsl_1_1Operator" kindref="compound">Operator</ref> &gt; &amp;</type>
        <definition>const std::vector&lt;Operator&gt;&amp; NeoFOAM::dsl::Expression::implicitOperators</definition>
        <argsstring>() const</argsstring>
        <name>implicitOperators</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="85" column="23" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1dsl_1_1Expression_1a7087ad1c170af80d002e5395b51525c2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::vector&lt; <ref refid="classNeoFOAM_1_1dsl_1_1Operator" kindref="compound">Operator</ref> &gt; &amp;</type>
        <definition>const std::vector&lt;Operator&gt;&amp; NeoFOAM::dsl::Expression::explicitOperators</definition>
        <argsstring>() const</argsstring>
        <name>explicitOperators</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="87" column="23" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="87" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1dsl_1_1Expression_1adbdfdffafe44e258d0e2c6487f6dac41" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="classNeoFOAM_1_1dsl_1_1Operator" kindref="compound">Operator</ref> &gt; &amp;</type>
        <definition>std::vector&lt;Operator&gt;&amp; NeoFOAM::dsl::Expression::temporalOperators</definition>
        <argsstring>()</argsstring>
        <name>temporalOperators</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="89" column="17" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="89" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1dsl_1_1Expression_1a8e7182e2f8da4b8f0e3211d16c5db840" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="classNeoFOAM_1_1dsl_1_1Operator" kindref="compound">Operator</ref> &gt; &amp;</type>
        <definition>std::vector&lt;Operator&gt;&amp; NeoFOAM::dsl::Expression::implicitOperators</definition>
        <argsstring>()</argsstring>
        <name>implicitOperators</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="91" column="17" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1dsl_1_1Expression_1a3ecb884c3122b229db1f21fb2b681eca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::vector&lt; <ref refid="classNeoFOAM_1_1dsl_1_1Operator" kindref="compound">Operator</ref> &gt; &amp;</type>
        <definition>std::vector&lt;Operator&gt;&amp; NeoFOAM::dsl::Expression::explicitOperators</definition>
        <argsstring>()</argsstring>
        <name>explicitOperators</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="93" column="17" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1dsl_1_1Expression_1a1527fde27b8af33a0bbc1881810cf945" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespaceNeoFOAM_1ad8645a25cba2275ee5bea619093da91e" kindref="member">Executor</ref> &amp;</type>
        <definition>const Executor&amp; NeoFOAM::dsl::Expression::exec</definition>
        <argsstring>() const</argsstring>
        <name>exec</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="95" column="20" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="95" bodyend="95"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="18" column="1" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="19" bodyend="106"/>
    <listofallmembers>
      <member refid="classNeoFOAM_1_1dsl_1_1Expression_1af313e6ab82947b615550bd71d8050234" prot="public" virt="non-virtual"><scope>NeoFOAM::dsl::Expression</scope><name>addExpression</name></member>
      <member refid="classNeoFOAM_1_1dsl_1_1Expression_1aee6082759c68f013cc47d51ae8f0e7f6" prot="public" virt="non-virtual"><scope>NeoFOAM::dsl::Expression</scope><name>addOperator</name></member>
      <member refid="classNeoFOAM_1_1dsl_1_1Expression_1a1527fde27b8af33a0bbc1881810cf945" prot="public" virt="non-virtual"><scope>NeoFOAM::dsl::Expression</scope><name>exec</name></member>
      <member refid="classNeoFOAM_1_1dsl_1_1Expression_1a096065162e85aaec983a2526afb9fc8d" prot="private" virt="non-virtual"><scope>NeoFOAM::dsl::Expression</scope><name>exec_</name></member>
      <member refid="classNeoFOAM_1_1dsl_1_1Expression_1a5cc861b9fdfe016b5110c6c1faf99185" prot="public" virt="non-virtual"><scope>NeoFOAM::dsl::Expression</scope><name>explicitOperation</name></member>
      <member refid="classNeoFOAM_1_1dsl_1_1Expression_1ad8524fe6ca386d3324063584f0ec3b60" prot="public" virt="non-virtual"><scope>NeoFOAM::dsl::Expression</scope><name>explicitOperation</name></member>
      <member refid="classNeoFOAM_1_1dsl_1_1Expression_1a7087ad1c170af80d002e5395b51525c2" prot="public" virt="non-virtual"><scope>NeoFOAM::dsl::Expression</scope><name>explicitOperators</name></member>
      <member refid="classNeoFOAM_1_1dsl_1_1Expression_1a3ecb884c3122b229db1f21fb2b681eca" prot="public" virt="non-virtual"><scope>NeoFOAM::dsl::Expression</scope><name>explicitOperators</name></member>
      <member refid="classNeoFOAM_1_1dsl_1_1Expression_1ab62b469bc29d11440bcae341bdf5fdd6" prot="private" virt="non-virtual"><scope>NeoFOAM::dsl::Expression</scope><name>explicitOperators_</name></member>
      <member refid="classNeoFOAM_1_1dsl_1_1Expression_1aeefc57058045a1404d849a9dd258d14e" prot="public" virt="non-virtual"><scope>NeoFOAM::dsl::Expression</scope><name>Expression</name></member>
      <member refid="classNeoFOAM_1_1dsl_1_1Expression_1aadcaeb59de0e249a3e749760b198c30f" prot="public" virt="non-virtual"><scope>NeoFOAM::dsl::Expression</scope><name>implicitOperators</name></member>
      <member refid="classNeoFOAM_1_1dsl_1_1Expression_1a8e7182e2f8da4b8f0e3211d16c5db840" prot="public" virt="non-virtual"><scope>NeoFOAM::dsl::Expression</scope><name>implicitOperators</name></member>
      <member refid="classNeoFOAM_1_1dsl_1_1Expression_1af6f2731d095c0729cc8f2fb4a7c9d604" prot="private" virt="non-virtual"><scope>NeoFOAM::dsl::Expression</scope><name>implicitOperators_</name></member>
      <member refid="classNeoFOAM_1_1dsl_1_1Expression_1a96f277edda83384dc99926c79b09ceb9" prot="public" virt="non-virtual"><scope>NeoFOAM::dsl::Expression</scope><name>size</name></member>
      <member refid="classNeoFOAM_1_1dsl_1_1Expression_1a26c16e4cd5f5d066f5314c84b48a4611" prot="public" virt="non-virtual"><scope>NeoFOAM::dsl::Expression</scope><name>temporalOperators</name></member>
      <member refid="classNeoFOAM_1_1dsl_1_1Expression_1adbdfdffafe44e258d0e2c6487f6dac41" prot="public" virt="non-virtual"><scope>NeoFOAM::dsl::Expression</scope><name>temporalOperators</name></member>
      <member refid="classNeoFOAM_1_1dsl_1_1Expression_1a6b5bd84c63cd6e1c76ac0d40eed69e9a" prot="private" virt="non-virtual"><scope>NeoFOAM::dsl::Expression</scope><name>temporalOperators_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
