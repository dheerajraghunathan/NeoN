<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classNeoN_1_1Vector" kind="class" language="C++" prot="public">
    <compoundname>NeoN::Vector</compoundname>
    <includes refid="vector_8hpp" local="no">vector.hpp</includes>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classNeoN_1_1Vector_1add5d3c86380e55729d1cddf91644495d" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref></type>
        <definition>scalar NeoN::Vector::cmpts_[3]</definition>
        <argsstring>[3]</argsstring>
        <name>cmpts_</name>
        <qualifiedname>NeoN::Vector::cmpts_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/primitives/vector.hpp" line="144" column="12" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/core/primitives/vector.hpp" bodystart="144" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classNeoN_1_1Vector_1a1d7b2d02ae42903b12085ec0fd72d64b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION</type>
        <definition>KOKKOS_INLINE_FUNCTION NeoN::Vector::Vector</definition>
        <argsstring>()</argsstring>
        <name>Vector</name>
        <qualifiedname>NeoN::Vector::Vector</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/primitives/vector.hpp" line="27" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/core/primitives/vector.hpp" bodystart="27" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1Vector_1a4e6412b7fa340080447367213f7807c5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION</type>
        <definition>KOKKOS_INLINE_FUNCTION NeoN::Vector::Vector</definition>
        <argsstring>(scalar x, scalar y, scalar z)</argsstring>
        <name>Vector</name>
        <qualifiedname>NeoN::Vector::Vector</qualifiedname>
        <param>
          <type><ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref></type>
          <declname>x</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref></type>
          <declname>y</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref></type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/primitives/vector.hpp" line="35" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/core/primitives/vector.hpp" bodystart="35" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1Vector_1ae615f7ab6d0928a64323a065b8d03df6" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION</type>
        <definition>KOKKOS_INLINE_FUNCTION NeoN::Vector::Vector</definition>
        <argsstring>(const scalar constValue)</argsstring>
        <name>Vector</name>
        <qualifiedname>NeoN::Vector::Vector</qualifiedname>
        <param>
          <type>const <ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref></type>
          <declname>constValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/primitives/vector.hpp" line="43" column="14" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/core/primitives/vector.hpp" bodystart="43" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1Vector_1a5d732d378b20d44cab7118608686f371" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref> *</type>
        <definition>scalar * NeoN::Vector::data</definition>
        <argsstring>()</argsstring>
        <name>data</name>
        <qualifiedname>NeoN::Vector::data</qualifiedname>
        <briefdescription>
<para>Returns pointer to the data of the vector. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>point to the first scalar </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/primitives/vector.hpp" line="55" column="12" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/core/primitives/vector.hpp" bodystart="55" bodyend="55"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1Vector_1a8fc063d61a7a2ded8511e838bf93f8a2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref> *</type>
        <definition>const scalar * NeoN::Vector::data</definition>
        <argsstring>() const</argsstring>
        <name>data</name>
        <qualifiedname>NeoN::Vector::data</qualifiedname>
        <briefdescription>
<para>Returns pointer to the data of the vector. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>point to the first scalar </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/primitives/vector.hpp" line="62" column="18" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/core/primitives/vector.hpp" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1Vector_1a41a3111caffd9c1c332a47098d97de6e" prot="public" static="no" constexpr="yes" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>constexpr <ref refid="namespaceNeoN_1a5ea7bf3a45fbcf9c6ee454474ab13c06" kindref="member">size_t</ref></type>
        <definition>constexpr size_t NeoN::Vector::size</definition>
        <argsstring>() const</argsstring>
        <name>size</name>
        <qualifiedname>NeoN::Vector::size</qualifiedname>
        <briefdescription>
<para>Returns the size of the vector. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The size of the vector </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/primitives/vector.hpp" line="69" column="22" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/core/primitives/vector.hpp" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1Vector_1a1c923c82a98d3b93b97f2826809213bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION <ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref> &amp;</type>
        <definition>KOKKOS_INLINE_FUNCTION scalar &amp; NeoN::Vector::operator[]</definition>
        <argsstring>(const size_t i)</argsstring>
        <name>operator[]</name>
        <qualifiedname>NeoN::Vector::operator[]</qualifiedname>
        <param>
          <type>const <ref refid="namespaceNeoN_1a5ea7bf3a45fbcf9c6ee454474ab13c06" kindref="member">size_t</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/primitives/vector.hpp" line="72" column="12" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/core/primitives/vector.hpp" bodystart="72" bodyend="72"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1Vector_1aa902f8f5bf912c34f1aea23cab0f5466" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION <ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref></type>
        <definition>KOKKOS_INLINE_FUNCTION scalar NeoN::Vector::operator[]</definition>
        <argsstring>(const size_t i) const</argsstring>
        <name>operator[]</name>
        <qualifiedname>NeoN::Vector::operator[]</qualifiedname>
        <param>
          <type>const <ref refid="namespaceNeoN_1a5ea7bf3a45fbcf9c6ee454474ab13c06" kindref="member">size_t</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/primitives/vector.hpp" line="75" column="12" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/core/primitives/vector.hpp" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1Vector_1a53031a421016879bd935ee77bf71842d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION <ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref> &amp;</type>
        <definition>KOKKOS_INLINE_FUNCTION scalar &amp; NeoN::Vector::operator()</definition>
        <argsstring>(const size_t i)</argsstring>
        <name>operator()</name>
        <qualifiedname>NeoN::Vector::operator()</qualifiedname>
        <param>
          <type>const <ref refid="namespaceNeoN_1a5ea7bf3a45fbcf9c6ee454474ab13c06" kindref="member">size_t</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/primitives/vector.hpp" line="78" column="12" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/core/primitives/vector.hpp" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1Vector_1af90a704bd5e2ffcbd828436fe6019223" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION <ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref></type>
        <definition>KOKKOS_INLINE_FUNCTION scalar NeoN::Vector::operator()</definition>
        <argsstring>(const size_t i) const</argsstring>
        <name>operator()</name>
        <qualifiedname>NeoN::Vector::operator()</qualifiedname>
        <param>
          <type>const <ref refid="namespaceNeoN_1a5ea7bf3a45fbcf9c6ee454474ab13c06" kindref="member">size_t</ref></type>
          <declname>i</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/primitives/vector.hpp" line="81" column="12" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/core/primitives/vector.hpp" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1Vector_1a806db957207921596238680162d824c6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION bool</type>
        <definition>KOKKOS_INLINE_FUNCTION bool NeoN::Vector::operator==</definition>
        <argsstring>(const Vector &amp;rhs) const</argsstring>
        <name>operator==</name>
        <qualifiedname>NeoN::Vector::operator==</qualifiedname>
        <param>
          <type>const <ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/primitives/vector.hpp" line="84" column="10" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/core/primitives/vector.hpp" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1Vector_1a57005aa7a353ed9d626f0fed1b478a7d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION <ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref></type>
        <definition>KOKKOS_INLINE_FUNCTION Vector NeoN::Vector::operator+</definition>
        <argsstring>(const Vector &amp;rhs) const</argsstring>
        <name>operator+</name>
        <qualifiedname>NeoN::Vector::operator+</qualifiedname>
        <param>
          <type>const <ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/primitives/vector.hpp" line="90" column="12" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/core/primitives/vector.hpp" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1Vector_1a2aa27cc23d5ede67daa76d547261648e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION <ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref> &amp;</type>
        <definition>KOKKOS_INLINE_FUNCTION Vector &amp; NeoN::Vector::operator+=</definition>
        <argsstring>(const Vector &amp;rhs)</argsstring>
        <name>operator+=</name>
        <qualifiedname>NeoN::Vector::operator+=</qualifiedname>
        <param>
          <type>const <ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/primitives/vector.hpp" line="96" column="12" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/core/primitives/vector.hpp" bodystart="96" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1Vector_1a3116492123c10c038f796a676392f0df" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION <ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref></type>
        <definition>KOKKOS_INLINE_FUNCTION Vector NeoN::Vector::operator-</definition>
        <argsstring>(const Vector &amp;rhs) const</argsstring>
        <name>operator-</name>
        <qualifiedname>NeoN::Vector::operator-</qualifiedname>
        <param>
          <type>const <ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/primitives/vector.hpp" line="105" column="12" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/core/primitives/vector.hpp" bodystart="105" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1Vector_1a424ae3ea4176194a312b529ce4ff8390" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION <ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref> &amp;</type>
        <definition>KOKKOS_INLINE_FUNCTION Vector &amp; NeoN::Vector::operator-=</definition>
        <argsstring>(const Vector &amp;rhs)</argsstring>
        <name>operator-=</name>
        <qualifiedname>NeoN::Vector::operator-=</qualifiedname>
        <param>
          <type>const <ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/primitives/vector.hpp" line="111" column="12" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/core/primitives/vector.hpp" bodystart="111" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1Vector_1afd9cf9a6e0f9763739c1407d0ba893e7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION <ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref></type>
        <definition>KOKKOS_INLINE_FUNCTION Vector NeoN::Vector::operator*</definition>
        <argsstring>(const scalar &amp;rhs) const</argsstring>
        <name>operator*</name>
        <qualifiedname>NeoN::Vector::operator*</qualifiedname>
        <param>
          <type>const <ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/primitives/vector.hpp" line="120" column="12" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/core/primitives/vector.hpp" bodystart="120" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1Vector_1a2344cc1d56968572c8796e51444a0356" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION <ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref></type>
        <definition>KOKKOS_INLINE_FUNCTION Vector NeoN::Vector::operator*</definition>
        <argsstring>(const label &amp;rhs) const</argsstring>
        <name>operator*</name>
        <qualifiedname>NeoN::Vector::operator*</qualifiedname>
        <param>
          <type>const <ref refid="namespaceNeoN_1afa6c1c30776d4f6ed4691b0f9d1ea416" kindref="member">label</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/primitives/vector.hpp" line="127" column="12" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/core/primitives/vector.hpp" bodystart="127" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1Vector_1ae393780112c50f34c4b678e4af6a37d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>KOKKOS_INLINE_FUNCTION <ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref> &amp;</type>
        <definition>KOKKOS_INLINE_FUNCTION Vector &amp; NeoN::Vector::operator*=</definition>
        <argsstring>(const scalar &amp;rhs)</argsstring>
        <name>operator*=</name>
        <qualifiedname>NeoN::Vector::operator*=</qualifiedname>
        <param>
          <type>const <ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/primitives/vector.hpp" line="134" column="12" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/core/primitives/vector.hpp" bodystart="134" bodyend="140"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>A class for the representation of a 3D <ref refid="classNeoN_1_1Vector" kindref="compound">Vector</ref>. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/NeoN/NeoN/include/NeoN/core/primitives/vector.hpp" line="22" column="1" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/core/primitives/vector.hpp" bodystart="23" bodyend="145"/>
    <listofallmembers>
      <member refid="classNeoN_1_1Vector_1add5d3c86380e55729d1cddf91644495d" prot="private" virt="non-virtual"><scope>NeoN::Vector</scope><name>cmpts_</name></member>
      <member refid="classNeoN_1_1Vector_1a5d732d378b20d44cab7118608686f371" prot="public" virt="non-virtual"><scope>NeoN::Vector</scope><name>data</name></member>
      <member refid="classNeoN_1_1Vector_1a8fc063d61a7a2ded8511e838bf93f8a2" prot="public" virt="non-virtual"><scope>NeoN::Vector</scope><name>data</name></member>
      <member refid="classNeoN_1_1Vector_1a53031a421016879bd935ee77bf71842d" prot="public" virt="non-virtual"><scope>NeoN::Vector</scope><name>operator()</name></member>
      <member refid="classNeoN_1_1Vector_1af90a704bd5e2ffcbd828436fe6019223" prot="public" virt="non-virtual"><scope>NeoN::Vector</scope><name>operator()</name></member>
      <member refid="classNeoN_1_1Vector_1afd9cf9a6e0f9763739c1407d0ba893e7" prot="public" virt="non-virtual"><scope>NeoN::Vector</scope><name>operator*</name></member>
      <member refid="classNeoN_1_1Vector_1a2344cc1d56968572c8796e51444a0356" prot="public" virt="non-virtual"><scope>NeoN::Vector</scope><name>operator*</name></member>
      <member refid="classNeoN_1_1Vector_1ae393780112c50f34c4b678e4af6a37d2" prot="public" virt="non-virtual"><scope>NeoN::Vector</scope><name>operator*=</name></member>
      <member refid="classNeoN_1_1Vector_1a57005aa7a353ed9d626f0fed1b478a7d" prot="public" virt="non-virtual"><scope>NeoN::Vector</scope><name>operator+</name></member>
      <member refid="classNeoN_1_1Vector_1a2aa27cc23d5ede67daa76d547261648e" prot="public" virt="non-virtual"><scope>NeoN::Vector</scope><name>operator+=</name></member>
      <member refid="classNeoN_1_1Vector_1a3116492123c10c038f796a676392f0df" prot="public" virt="non-virtual"><scope>NeoN::Vector</scope><name>operator-</name></member>
      <member refid="classNeoN_1_1Vector_1a424ae3ea4176194a312b529ce4ff8390" prot="public" virt="non-virtual"><scope>NeoN::Vector</scope><name>operator-=</name></member>
      <member refid="classNeoN_1_1Vector_1a806db957207921596238680162d824c6" prot="public" virt="non-virtual"><scope>NeoN::Vector</scope><name>operator==</name></member>
      <member refid="classNeoN_1_1Vector_1a1c923c82a98d3b93b97f2826809213bc" prot="public" virt="non-virtual"><scope>NeoN::Vector</scope><name>operator[]</name></member>
      <member refid="classNeoN_1_1Vector_1aa902f8f5bf912c34f1aea23cab0f5466" prot="public" virt="non-virtual"><scope>NeoN::Vector</scope><name>operator[]</name></member>
      <member refid="classNeoN_1_1Vector_1a41a3111caffd9c1c332a47098d97de6e" prot="public" virt="non-virtual"><scope>NeoN::Vector</scope><name>size</name></member>
      <member refid="classNeoN_1_1Vector_1a1d7b2d02ae42903b12085ec0fd72d64b" prot="public" virt="non-virtual"><scope>NeoN::Vector</scope><name>Vector</name></member>
      <member refid="classNeoN_1_1Vector_1a4e6412b7fa340080447367213f7807c5" prot="public" virt="non-virtual"><scope>NeoN::Vector</scope><name>Vector</name></member>
      <member refid="classNeoN_1_1Vector_1ae615f7ab6d0928a64323a065b8d03df6" prot="public" virt="non-virtual"><scope>NeoN::Vector</scope><name>Vector</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
