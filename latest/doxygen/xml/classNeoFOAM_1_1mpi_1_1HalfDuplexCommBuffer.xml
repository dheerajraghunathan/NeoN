<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer" kind="class" language="C++" prot="public">
    <compoundname>NeoFOAM::mpi::HalfDuplexCommBuffer</compoundname>
    <includes refid="halfDuplexCommBuffer_8hpp" local="no">halfDuplexCommBuffer.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1ab6f5fa147d3a7eac439581da043a055c" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int NeoFOAM::mpi::HalfDuplexCommBuffer::tag_</definition>
        <argsstring></argsstring>
        <name>tag_</name>
        <initializer>{-1}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" line="200" column="9" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1ad4920f43f9f266ac16cf6add3823e91e" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string NeoFOAM::mpi::HalfDuplexCommBuffer::commName_</definition>
        <argsstring></argsstring>
        <name>commName_</name>
        <initializer>{&quot;unassigned&quot;}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" line="201" column="17" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" bodystart="201" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a173825f43dc020510468807234ab839c" prot="private" static="no" mutable="no">
        <type>std::size_t</type>
        <definition>std::size_t NeoFOAM::mpi::HalfDuplexCommBuffer::typeSize_</definition>
        <argsstring></argsstring>
        <name>typeSize_</name>
        <initializer>{sizeof(char)}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" line="202" column="17" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" bodystart="202" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1afa67bc4b13f845f176d7c7b0b649acd9" prot="private" static="no" mutable="no">
        <type><ref refid="classNeoFOAM_1_1mpi_1_1MPIEnvironment" kindref="compound">MPIEnvironment</ref></type>
        <definition>MPIEnvironment NeoFOAM::mpi::HalfDuplexCommBuffer::mpiEnviron_</definition>
        <argsstring></argsstring>
        <name>mpiEnviron_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" line="203" column="20" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" bodystart="203" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1af5c2883dd5932d64993532bd78608d43" prot="private" static="no" mutable="no">
        <type>std::vector&lt; MPI_Request &gt;</type>
        <definition>std::vector&lt;MPI_Request&gt; NeoFOAM::mpi::HalfDuplexCommBuffer::request_</definition>
        <argsstring></argsstring>
        <name>request_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" line="204" column="17" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" bodystart="204" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a3a3ac82fd14958630cf87aaae6519d03" prot="private" static="no" mutable="no">
        <type>std::vector&lt; char &gt;</type>
        <definition>std::vector&lt;char&gt; NeoFOAM::mpi::HalfDuplexCommBuffer::rankBuffer_</definition>
        <argsstring></argsstring>
        <name>rankBuffer_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" line="205" column="17" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" bodystart="205" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a858c84af8b0752f739ba8520b67790f9" prot="private" static="no" mutable="no">
        <type>std::vector&lt; std::size_t &gt;</type>
        <definition>std::vector&lt;std::size_t&gt; NeoFOAM::mpi::HalfDuplexCommBuffer::rankOffset_</definition>
        <argsstring></argsstring>
        <name>rankOffset_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" line="207" column="9" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" bodystart="207" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1af20e262c707a7781915bda4984064d07" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NeoFOAM::mpi::HalfDuplexCommBuffer::HalfDuplexCommBuffer</definition>
        <argsstring>()=default</argsstring>
        <name>HalfDuplexCommBuffer</name>
        <briefdescription>
<para>Default constructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" line="56" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1aa15ac8d9ca7064025bdbe555c6b4fa0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NeoFOAM::mpi::HalfDuplexCommBuffer::~HalfDuplexCommBuffer</definition>
        <argsstring>()=default</argsstring>
        <name>~HalfDuplexCommBuffer</name>
        <briefdescription>
<para>Default destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" line="61" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a17ed0f8a3ecea469e55424d9ffa53f9c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoFOAM::mpi::HalfDuplexCommBuffer::HalfDuplexCommBuffer</definition>
        <argsstring>(MPIEnvironment mpiEnviron, std::vector&lt; size_t &gt; rankCommSize)</argsstring>
        <name>HalfDuplexCommBuffer</name>
        <param>
          <type><ref refid="classNeoFOAM_1_1mpi_1_1MPIEnvironment" kindref="compound">MPIEnvironment</ref></type>
          <declname>mpiEnviron</declname>
        </param>
        <param>
          <type>std::vector&lt; <ref refid="namespaceNeoFOAM_1aa8ea339f1c9a4f2232da876ead30a82c" kindref="member">size_t</ref> &gt;</type>
          <declname>rankCommSize</declname>
        </param>
        <briefdescription>
<para>Construct a new Half Duplex Buffer object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mpiEnviron</parametername>
</parameternamelist>
<parameterdescription>
<para>The MPI environment. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rankCommSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of nodes per rank to be communicated with. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" line="69" column="5" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" bodystart="69" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1acf1cf11b08fda65368dcb759e2bf7aa8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void NeoFOAM::mpi::HalfDuplexCommBuffer::setMPIEnvironment</definition>
        <argsstring>(MPIEnvironment mpiEnviron)</argsstring>
        <name>setMPIEnvironment</name>
        <param>
          <type><ref refid="classNeoFOAM_1_1mpi_1_1MPIEnvironment" kindref="compound">MPIEnvironment</ref></type>
          <declname>mpiEnviron</declname>
        </param>
        <briefdescription>
<para>Set the MPI environment. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>mpiEnviron</parametername>
</parameternamelist>
<parameterdescription>
<para>The MPI environment. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" line="80" column="17" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a29345f3444c1ec304ad99e779bdcacd9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool NeoFOAM::mpi::HalfDuplexCommBuffer::isCommInit</definition>
        <argsstring>() const</argsstring>
        <name>isCommInit</name>
        <briefdescription>
<para>Get the communication name. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>const std::string&amp; The name of the communication. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" line="87" column="17" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" bodystart="87" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a46a963471bc9447a4a291298e159dc7a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename valueType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NeoFOAM::mpi::HalfDuplexCommBuffer::setCommRankSize</definition>
        <argsstring>(std::vector&lt; size_t &gt; rankCommSize)</argsstring>
        <name>setCommRankSize</name>
        <param>
          <type>std::vector&lt; <ref refid="namespaceNeoFOAM_1aa8ea339f1c9a4f2232da876ead30a82c" kindref="member">size_t</ref> &gt;</type>
          <declname>rankCommSize</declname>
        </param>
        <briefdescription>
<para>Set the buffer data size based on the rank communication and value type. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>valueType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the data to be stored in the buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rankCommSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of nodes per rank to be communicated with. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" line="96" column="10" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" bodystart="96" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a935964993a596bbe5f84d83ed85478f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename valueType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NeoFOAM::mpi::HalfDuplexCommBuffer::initComm</definition>
        <argsstring>(std::string commName)</argsstring>
        <name>initComm</name>
        <param>
          <type>std::string</type>
          <declname>commName</declname>
        </param>
        <briefdescription>
<para>Initialize the communication buffer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>valueType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the data to be stored in the buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>commName</parametername>
</parameternamelist>
<parameterdescription>
<para>A name for the communication, typically a file and line number. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" line="118" column="10" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" bodystart="118" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1ad02ee9b9b080d282b25b423d47d6e682" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::string &amp;</type>
        <definition>const std::string&amp; NeoFOAM::mpi::HalfDuplexCommBuffer::getCommName</definition>
        <argsstring>() const</argsstring>
        <name>getCommName</name>
        <briefdescription>
<para>Get the communication name. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>const std::string&amp; The name of the communication. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" line="133" column="30" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" bodystart="133" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a5799d6a1ccf218debf777b7de25e1be9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool NeoFOAM::mpi::HalfDuplexCommBuffer::isComplete</definition>
        <argsstring>()</argsstring>
        <name>isComplete</name>
        <briefdescription>
<para>Check if the communication is complete. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>true if the communication is complete else false. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" line="139" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a06def9638137dd2e815c12df3329a633" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeoFOAM::mpi::HalfDuplexCommBuffer::send</definition>
        <argsstring>()</argsstring>
        <name>send</name>
        <briefdescription>
<para>Post send for data to begin sending to all ranks this rank communicates with. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" line="144" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a4ac0d9f5d3deac6d7ecc1f06f0467f3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeoFOAM::mpi::HalfDuplexCommBuffer::receive</definition>
        <argsstring>()</argsstring>
        <name>receive</name>
        <briefdescription>
<para>Post receive for data to begin receiving from all ranks this rank communicates with. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" line="150" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a70e8643078efa5b90942e97595081c8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeoFOAM::mpi::HalfDuplexCommBuffer::waitComplete</definition>
        <argsstring>()</argsstring>
        <name>waitComplete</name>
        <briefdescription>
<para>Blocking wait for the communication to finish. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" line="155" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1ada5a5b37dfa7308c580971c6e2569337" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeoFOAM::mpi::HalfDuplexCommBuffer::finaliseComm</definition>
        <argsstring>()</argsstring>
        <name>finaliseComm</name>
        <briefdescription>
<para>Finalise the communication. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" line="160" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1ac23a3c38b343a9f88e66f8a6b6fd0c4d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename valueType</type>
          </param>
        </templateparamlist>
        <type>std::span&lt; valueType &gt;</type>
        <definition>std::span&lt;valueType&gt; NeoFOAM::mpi::HalfDuplexCommBuffer::get</definition>
        <argsstring>(const size_t rank)</argsstring>
        <name>get</name>
        <param>
          <type>const <ref refid="namespaceNeoFOAM_1aa8ea339f1c9a4f2232da876ead30a82c" kindref="member">size_t</ref></type>
          <declname>rank</declname>
        </param>
        <briefdescription>
<para>Get a span of the buffer data for a given rank. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>valueType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the data to be stored in the buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rank</parametername>
</parameternamelist>
<parameterdescription>
<para>The rank of the data to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::span&lt;valueType&gt; A span of the data for the given rank. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" line="170" column="15" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" bodystart="170" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a5096217bbceb05ed3368487e76eb6b89" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename valueType</type>
          </param>
        </templateparamlist>
        <type>std::span&lt; const valueType &gt;</type>
        <definition>std::span&lt;const valueType&gt; NeoFOAM::mpi::HalfDuplexCommBuffer::get</definition>
        <argsstring>(const size_t rank) const</argsstring>
        <name>get</name>
        <param>
          <type>const <ref refid="namespaceNeoFOAM_1aa8ea339f1c9a4f2232da876ead30a82c" kindref="member">size_t</ref></type>
          <declname>rank</declname>
        </param>
        <briefdescription>
<para>Get a span of the buffer data for a given rank. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>valueType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the data to be stored in the buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rank</parametername>
</parameternamelist>
<parameterdescription>
<para>The rank of the data to be retrieved. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::span&lt;const valueType&gt; A span of the data for the given rank. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" line="188" column="15" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" bodystart="188" bodyend="196"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a7ea1da1150ff75f3e89c4c00cec30d51" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename valueType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NeoFOAM::mpi::HalfDuplexCommBuffer::setType</definition>
        <argsstring>()</argsstring>
        <name>setType</name>
        <briefdescription>
<para>Set the data type for the buffer. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" line="213" column="10" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" bodystart="213" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a8eb88ff7633609ae135e4887d057ac64" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename func</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NeoFOAM::mpi::HalfDuplexCommBuffer::updateDataSize</definition>
        <argsstring>(func rankSize, std::size_t newSize)</argsstring>
        <name>updateDataSize</name>
        <param>
          <type>func</type>
          <declname>rankSize</declname>
        </param>
        <param>
          <type>std::size_t</type>
          <declname>newSize</declname>
        </param>
        <briefdescription>
<para>Update the buffer data size using a lambda (for the size per rank) and type size. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>func</parametername>
</parameternamelist>
<parameterdescription>
<para>The lambda type for the rank size. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rankSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The function to get the rank size. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dataSize</parametername>
</parameternamelist>
<parameterdescription>
<para>The size of the data to be stored in the buffer. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" line="236" column="10" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" bodystart="236" bodyend="246"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A data buffer for half-duplex communication in a distributed system using MPI. </para>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer" kindref="compound">HalfDuplexCommBuffer</ref> class facilitates efficient, non-blocking, point-to-point data exchange between MPI ranks in a distributed system. It maintains a buffer used for data communication, capable of handling various data types. The buffer does not shrink once initialized, minimizing memory reallocation and improving memory efficiency. The class operates in a half-duplex mode, meaning it is either sending or receiving data at any given time. </para>
    </detaileddescription>
    <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" line="48" column="1" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp" bodystart="49" bodyend="247"/>
    <listofallmembers>
      <member refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1ad4920f43f9f266ac16cf6add3823e91e" prot="private" virt="non-virtual"><scope>NeoFOAM::mpi::HalfDuplexCommBuffer</scope><name>commName_</name></member>
      <member refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1ada5a5b37dfa7308c580971c6e2569337" prot="public" virt="non-virtual"><scope>NeoFOAM::mpi::HalfDuplexCommBuffer</scope><name>finaliseComm</name></member>
      <member refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1ac23a3c38b343a9f88e66f8a6b6fd0c4d" prot="public" virt="non-virtual"><scope>NeoFOAM::mpi::HalfDuplexCommBuffer</scope><name>get</name></member>
      <member refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a5096217bbceb05ed3368487e76eb6b89" prot="public" virt="non-virtual"><scope>NeoFOAM::mpi::HalfDuplexCommBuffer</scope><name>get</name></member>
      <member refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1ad02ee9b9b080d282b25b423d47d6e682" prot="public" virt="non-virtual"><scope>NeoFOAM::mpi::HalfDuplexCommBuffer</scope><name>getCommName</name></member>
      <member refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1af20e262c707a7781915bda4984064d07" prot="public" virt="non-virtual"><scope>NeoFOAM::mpi::HalfDuplexCommBuffer</scope><name>HalfDuplexCommBuffer</name></member>
      <member refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a17ed0f8a3ecea469e55424d9ffa53f9c" prot="public" virt="non-virtual"><scope>NeoFOAM::mpi::HalfDuplexCommBuffer</scope><name>HalfDuplexCommBuffer</name></member>
      <member refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a935964993a596bbe5f84d83ed85478f9" prot="public" virt="non-virtual"><scope>NeoFOAM::mpi::HalfDuplexCommBuffer</scope><name>initComm</name></member>
      <member refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a29345f3444c1ec304ad99e779bdcacd9" prot="public" virt="non-virtual"><scope>NeoFOAM::mpi::HalfDuplexCommBuffer</scope><name>isCommInit</name></member>
      <member refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a5799d6a1ccf218debf777b7de25e1be9" prot="public" virt="non-virtual"><scope>NeoFOAM::mpi::HalfDuplexCommBuffer</scope><name>isComplete</name></member>
      <member refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1afa67bc4b13f845f176d7c7b0b649acd9" prot="private" virt="non-virtual"><scope>NeoFOAM::mpi::HalfDuplexCommBuffer</scope><name>mpiEnviron_</name></member>
      <member refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a3a3ac82fd14958630cf87aaae6519d03" prot="private" virt="non-virtual"><scope>NeoFOAM::mpi::HalfDuplexCommBuffer</scope><name>rankBuffer_</name></member>
      <member refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a858c84af8b0752f739ba8520b67790f9" prot="private" virt="non-virtual"><scope>NeoFOAM::mpi::HalfDuplexCommBuffer</scope><name>rankOffset_</name></member>
      <member refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a4ac0d9f5d3deac6d7ecc1f06f0467f3a" prot="public" virt="non-virtual"><scope>NeoFOAM::mpi::HalfDuplexCommBuffer</scope><name>receive</name></member>
      <member refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1af5c2883dd5932d64993532bd78608d43" prot="private" virt="non-virtual"><scope>NeoFOAM::mpi::HalfDuplexCommBuffer</scope><name>request_</name></member>
      <member refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a06def9638137dd2e815c12df3329a633" prot="public" virt="non-virtual"><scope>NeoFOAM::mpi::HalfDuplexCommBuffer</scope><name>send</name></member>
      <member refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a46a963471bc9447a4a291298e159dc7a" prot="public" virt="non-virtual"><scope>NeoFOAM::mpi::HalfDuplexCommBuffer</scope><name>setCommRankSize</name></member>
      <member refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1acf1cf11b08fda65368dcb759e2bf7aa8" prot="public" virt="non-virtual"><scope>NeoFOAM::mpi::HalfDuplexCommBuffer</scope><name>setMPIEnvironment</name></member>
      <member refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a7ea1da1150ff75f3e89c4c00cec30d51" prot="private" virt="non-virtual"><scope>NeoFOAM::mpi::HalfDuplexCommBuffer</scope><name>setType</name></member>
      <member refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1ab6f5fa147d3a7eac439581da043a055c" prot="private" virt="non-virtual"><scope>NeoFOAM::mpi::HalfDuplexCommBuffer</scope><name>tag_</name></member>
      <member refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a173825f43dc020510468807234ab839c" prot="private" virt="non-virtual"><scope>NeoFOAM::mpi::HalfDuplexCommBuffer</scope><name>typeSize_</name></member>
      <member refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a8eb88ff7633609ae135e4887d057ac64" prot="private" virt="non-virtual"><scope>NeoFOAM::mpi::HalfDuplexCommBuffer</scope><name>updateDataSize</name></member>
      <member refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1a70e8643078efa5b90942e97595081c8b" prot="public" virt="non-virtual"><scope>NeoFOAM::mpi::HalfDuplexCommBuffer</scope><name>waitComplete</name></member>
      <member refid="classNeoFOAM_1_1mpi_1_1HalfDuplexCommBuffer_1aa15ac8d9ca7064025bdbe555c6b4fa0f" prot="public" virt="non-virtual"><scope>NeoFOAM::mpi::HalfDuplexCommBuffer</scope><name>~HalfDuplexCommBuffer</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
