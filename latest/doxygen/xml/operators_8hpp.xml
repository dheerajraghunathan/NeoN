<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="operators_8hpp" kind="file" language="C++">
    <compoundname>operators.hpp</compoundname>
    <includes local="no">complex</includes>
    <includes local="no">mpi.h</includes>
    <includes local="no">type_traits</includes>
    <includes refid="error_8hpp" local="yes">NeoFOAM/core/error.hpp</includes>
    <includes refid="vector_8hpp" local="yes">NeoFOAM/core/primitives/vector.hpp</includes>
    <includedby refid="halfDuplexCommBuffer_8hpp" local="yes">/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp</includedby>
    <includedby refid="communicator_8hpp" local="yes">/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/mesh/unstructured/communicator.hpp</includedby>
    <incdepgraph>
      <node id="15">
        <label>cstdint</label>
      </node>
      <node id="5">
        <label>NeoFOAM/core/error.hpp</label>
        <link refid="error_8hpp"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>string</label>
      </node>
      <node id="11">
        <label>NeoFOAM/core/primitives/vector.hpp</label>
        <link refid="vector_8hpp"/>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>exception</label>
      </node>
      <node id="12">
        <label>Kokkos_Core.hpp</label>
      </node>
      <node id="10">
        <label>info.hpp</label>
        <link refid="info_8hpp"/>
      </node>
      <node id="13">
        <label>NeoFOAM/core/primitives/scalar.hpp</label>
        <link refid="scalar_8hpp"/>
      </node>
      <node id="9">
        <label>sstream</label>
      </node>
      <node id="7">
        <label>iostream</label>
      </node>
      <node id="1">
        <label>/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/operators.hpp</label>
        <link refid="operators_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>mpi.h</label>
      </node>
      <node id="14">
        <label>NeoFOAM/core/primitives/label.hpp</label>
        <link refid="label_8hpp"/>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>type_traits</label>
      </node>
      <node id="2">
        <label>complex</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/halfDuplexCommBuffer.hpp</label>
        <link refid="halfDuplexCommBuffer_8hpp"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/operators.hpp</label>
        <link refid="operators_8hpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/mesh/unstructured/communicator.hpp</label>
        <link refid="communicator_8hpp"/>
      </node>
      <node id="3">
        <label>/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/fullDuplexCommBuffer.hpp</label>
        <link refid="fullDuplexCommBuffer_8hpp"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innernamespace refid="namespaceNeoFOAM">NeoFOAM</innernamespace>
    <innernamespace refid="namespaceNeoFOAM_1_1mpi">NeoFOAM::mpi</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>SPDX-License-Identifier:<sp/>MIT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>SPDX-FileCopyrightText:<sp/>2023<sp/>NeoFOAM<sp/>authors</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;complex&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;mpi.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;type_traits&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="error_8hpp" kindref="compound">NeoFOAM/core/error.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="vector_8hpp" kindref="compound">NeoFOAM/core/primitives/vector.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceNeoFOAM" kindref="compound">NeoFOAM</ref></highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">mpi</highlight></codeline>
<codeline lineno="16"><highlight class="normal">{</highlight></codeline>
<codeline lineno="20" refid="namespaceNeoFOAM_1_1mpi_1ad2080ed6fe76416aece0600b1993f496" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum<sp/>class</highlight><highlight class="normal"><sp/><ref refid="namespaceNeoFOAM_1_1mpi_1ad2080ed6fe76416aece0600b1993f496" kindref="member">ReduceOp</ref></highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceNeoFOAM_1_1mpi_1ad2080ed6fe76416aece0600b1993f496a6a061313d22e51e0f25b7cd4dc065233" kindref="member">Max</ref>,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceNeoFOAM_1_1mpi_1ad2080ed6fe76416aece0600b1993f496a78d811e98514cd165dda532286610fd2" kindref="member">Min</ref>,</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceNeoFOAM_1_1mpi_1ad2080ed6fe76416aece0600b1993f496aa0ec87054b5e5b7847d0d8780a01a3d5" kindref="member">Sum</ref>,</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceNeoFOAM_1_1mpi_1ad2080ed6fe76416aece0600b1993f496a362a33c23b08e4a32a4ec53fbb82cccd" kindref="member">Prod</ref>,</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceNeoFOAM_1_1mpi_1ad2080ed6fe76416aece0600b1993f496a512ef7c688a2c8572d5e16f44e17e869" kindref="member">Land</ref>,</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceNeoFOAM_1_1mpi_1ad2080ed6fe76416aece0600b1993f496a67fd95fc1e88f15b3efb9feef0fc0dc9" kindref="member">Band</ref>,</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceNeoFOAM_1_1mpi_1ad2080ed6fe76416aece0600b1993f496a8595fb71a368d49d1ce5eead7f7ec7a5" kindref="member">Lor</ref>,</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceNeoFOAM_1_1mpi_1ad2080ed6fe76416aece0600b1993f496a2fc3e7b551bc67be82d33717e22f43df" kindref="member">Bor</ref>,</highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceNeoFOAM_1_1mpi_1ad2080ed6fe76416aece0600b1993f496aba589477cc8a0f3e2863ca6f0c2459d8" kindref="member">Maxloc</ref>,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceNeoFOAM_1_1mpi_1ad2080ed6fe76416aece0600b1993f496a5425939f10e63fc722bb5fc0d8da7a84" kindref="member">Minloc</ref></highlight></codeline>
<codeline lineno="32"><highlight class="normal">};</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="namespaceNeoFOAM_1_1mpi_1ae9840fe5d75027b3431398e3a6806ed0" refkind="member"><highlight class="normal">constexpr<sp/>MPI_Op<sp/><ref refid="namespaceNeoFOAM_1_1mpi_1ae9840fe5d75027b3431398e3a6806ed0" kindref="member">getOp</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceNeoFOAM_1_1mpi_1ad2080ed6fe76416aece0600b1993f496" kindref="member">ReduceOp</ref><sp/>op)</highlight></codeline>
<codeline lineno="41"><highlight class="normal">{</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal"><sp/>(op)</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceNeoFOAM_1_1mpi_1ad2080ed6fe76416aece0600b1993f496a6a061313d22e51e0f25b7cd4dc065233" kindref="member">ReduceOp::Max</ref>:</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_MAX;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceNeoFOAM_1_1mpi_1ad2080ed6fe76416aece0600b1993f496a78d811e98514cd165dda532286610fd2" kindref="member">ReduceOp::Min</ref>:</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_MIN;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceNeoFOAM_1_1mpi_1ad2080ed6fe76416aece0600b1993f496aa0ec87054b5e5b7847d0d8780a01a3d5" kindref="member">ReduceOp::Sum</ref>:</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_SUM;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceNeoFOAM_1_1mpi_1ad2080ed6fe76416aece0600b1993f496a362a33c23b08e4a32a4ec53fbb82cccd" kindref="member">ReduceOp::Prod</ref>:</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_PROD;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceNeoFOAM_1_1mpi_1ad2080ed6fe76416aece0600b1993f496a512ef7c688a2c8572d5e16f44e17e869" kindref="member">ReduceOp::Land</ref>:</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_LAND;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceNeoFOAM_1_1mpi_1ad2080ed6fe76416aece0600b1993f496a67fd95fc1e88f15b3efb9feef0fc0dc9" kindref="member">ReduceOp::Band</ref>:</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_BAND;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceNeoFOAM_1_1mpi_1ad2080ed6fe76416aece0600b1993f496a8595fb71a368d49d1ce5eead7f7ec7a5" kindref="member">ReduceOp::Lor</ref>:</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_LOR;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceNeoFOAM_1_1mpi_1ad2080ed6fe76416aece0600b1993f496a2fc3e7b551bc67be82d33717e22f43df" kindref="member">ReduceOp::Bor</ref>:</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_BOR;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceNeoFOAM_1_1mpi_1ad2080ed6fe76416aece0600b1993f496aba589477cc8a0f3e2863ca6f0c2459d8" kindref="member">ReduceOp::Maxloc</ref>:</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_MAXLOC;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="namespaceNeoFOAM_1_1mpi_1ad2080ed6fe76416aece0600b1993f496a5425939f10e63fc722bb5fc0d8da7a84" kindref="member">ReduceOp::Minloc</ref>:</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_MINLOC;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1a8b8fc4329e5e6dfc3731ca28605a8a49" kindref="member">NF_ERROR_EXIT</ref>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>MPI<sp/>reduce<sp/>operation<sp/>requested.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_LOR;<sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>to<sp/>suppress<sp/>the<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>valueType&gt;</highlight></codeline>
<codeline lineno="77" refid="namespaceNeoFOAM_1_1mpi_1a715f9aea7eceddbac548898a5f1e2e8b" refkind="member"><highlight class="normal">constexpr<sp/>MPI_Datatype<sp/><ref refid="namespaceNeoFOAM_1_1mpi_1a715f9aea7eceddbac548898a5f1e2e8b" kindref="member">getType</ref>()</highlight></codeline>
<codeline lineno="78"><highlight class="normal">{</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(std::is_same_v&lt;valueType,<sp/>char&gt;)<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_CHAR;</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(std::is_same_v&lt;valueType,<sp/>wchar_t&gt;)</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_WCHAR;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(std::is_same_v&lt;valueType,<sp/>short&gt;)</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_SHORT;</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(std::is_same_v&lt;valueType,<sp/>int&gt;)</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_INT;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(std::is_same_v&lt;valueType,<sp/>long&gt;)</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_LONG;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(std::is_same_v&lt;valueType,<sp/>long<sp/>long&gt;)</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_LONG_LONG;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(std::is_same_v&lt;valueType,<sp/>unsigned<sp/>short&gt;)</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_UNSIGNED_SHORT;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(std::is_same_v&lt;valueType,<sp/>unsigned&gt;)</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_UNSIGNED;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(std::is_same_v&lt;valueType,<sp/>unsigned<sp/>long&gt;)</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_UNSIGNED_LONG;</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(std::is_same_v&lt;valueType,<sp/>unsigned<sp/>long<sp/>long&gt;)</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_UNSIGNED_LONG_LONG;</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(std::is_same_v&lt;valueType,<sp/>float&gt;)</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_FLOAT;</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(std::is_same_v&lt;valueType,<sp/>double&gt;)</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_DOUBLE;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(std::is_same_v&lt;valueType,<sp/>long<sp/>double&gt;)</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_LONG_DOUBLE;</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(std::is_same_v&lt;valueType,<sp/>bool&gt;)</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_CXX_BOOL;</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(std::is_same_v&lt;valueType,<sp/>std::complex&lt;float&gt;&gt;)</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_CXX_FLOAT_COMPLEX;</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(std::is_same_v&lt;valueType,<sp/>std::complex&lt;double&gt;&gt;)</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_CXX_DOUBLE_COMPLEX;</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>constexpr<sp/>(std::is_same_v&lt;valueType,<sp/>std::complex&lt;long<sp/>double&gt;&gt;)</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_CXX_LONG_DOUBLE_COMPLEX;</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1a8b8fc4329e5e6dfc3731ca28605a8a49" kindref="member">NF_ERROR_EXIT</ref>(</highlight><highlight class="stringliteral">&quot;Invalid<sp/>MPI<sp/>datatype<sp/>requested.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>MPI_CHAR;<sp/></highlight><highlight class="comment">//<sp/>This<sp/>is<sp/>to<sp/>suppress<sp/>the<sp/>warning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal">}</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>valueType&gt;</highlight></codeline>
<codeline lineno="128" refid="namespaceNeoFOAM_1_1mpi_1af04bb54610e8cfae03423dc2c4c8cfc8" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceNeoFOAM_1_1mpi_1af04bb54610e8cfae03423dc2c4c8cfc8" kindref="member">allReduce</ref>(valueType&amp;<sp/>value,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceNeoFOAM_1_1mpi_1ad2080ed6fe76416aece0600b1993f496" kindref="member">ReduceOp</ref><sp/>op,<sp/>MPI_Comm<sp/>comm)</highlight></codeline>
<codeline lineno="129"><highlight class="normal">{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Allreduce(</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPI_IN_PLACE,<sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(&amp;value),<sp/>1,<sp/>getType&lt;valueType&gt;(),<sp/><ref refid="namespaceNeoFOAM_1_1mpi_1ae9840fe5d75027b3431398e3a6806ed0" kindref="member">getOp</ref>(op),<sp/>comm</highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="133"><highlight class="normal">}</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;&gt;</highlight></codeline>
<codeline lineno="145" refid="namespaceNeoFOAM_1_1mpi_1aadb797323c2020c5bf54669abdbc1c1c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceNeoFOAM_1_1mpi_1af04bb54610e8cfae03423dc2c4c8cfc8" kindref="member">allReduce</ref>(<ref refid="classNeoFOAM_1_1Vector" kindref="compound">Vector</ref>&amp;<sp/>vector,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceNeoFOAM_1_1mpi_1ad2080ed6fe76416aece0600b1993f496" kindref="member">ReduceOp</ref><sp/>op,<sp/>MPI_Comm<sp/>comm)</highlight></codeline>
<codeline lineno="146"><highlight class="normal">{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Allreduce(</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPI_IN_PLACE,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">reinterpret_cast&lt;</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(vector.<ref refid="classNeoFOAM_1_1Vector_1a2aeb36a33280838633a668de446c4b7d" kindref="member">data</ref>()),</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="normal"><ref refid="namespaceNeoFOAM_1a6340adc783ef78803a50be602055fba6" kindref="member">mpi_label_t</ref></highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(vector.<ref refid="classNeoFOAM_1_1Vector_1a8e01d5fb5a3504939bd15308f80e0294" kindref="member">size</ref>()),</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>getType&lt;scalar&gt;(),</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="namespaceNeoFOAM_1_1mpi_1ae9840fe5d75027b3431398e3a6806ed0" kindref="member">getOp</ref>(op),</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>comm</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal">}</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>valueType&gt;</highlight></codeline>
<codeline lineno="170" refid="namespaceNeoFOAM_1_1mpi_1a4b7f7a3712768795b481436b53327fe5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceNeoFOAM_1_1mpi_1a4b7f7a3712768795b481436b53327fe5" kindref="member">isend</ref>(</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>valueType*<sp/>buffer,</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceNeoFOAM_1a6340adc783ef78803a50be602055fba6" kindref="member">mpi_label_t</ref><sp/>size,</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceNeoFOAM_1a6340adc783ef78803a50be602055fba6" kindref="member">mpi_label_t</ref><sp/>rankReceive,</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceNeoFOAM_1a6340adc783ef78803a50be602055fba6" kindref="member">mpi_label_t</ref><sp/>tag,</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Comm<sp/>comm,</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Request*<sp/>request</highlight></codeline>
<codeline lineno="177"><highlight class="normal">)</highlight></codeline>
<codeline lineno="178"><highlight class="normal">{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceNeoFOAM_1a6340adc783ef78803a50be602055fba6" kindref="member">mpi_label_t</ref><sp/>err<sp/>=</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MPI_Isend(buffer,<sp/>size,<sp/>getType&lt;valueType&gt;(),<sp/>rankReceive,<sp/>tag,<sp/>comm,<sp/>request);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1af1af39ea56903b56ed322432441511b5" kindref="member">NF_DEBUG_ASSERT</ref>(err<sp/>==<sp/>MPI_SUCCESS,<sp/></highlight><highlight class="stringliteral">&quot;MPI_Isend<sp/>failed.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>valueType&gt;</highlight></codeline>
<codeline lineno="197" refid="namespaceNeoFOAM_1_1mpi_1a6812bb90b0a66834757aee8a193e8115" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespaceNeoFOAM_1_1mpi_1a6812bb90b0a66834757aee8a193e8115" kindref="member">irecv</ref>(</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>valueType*<sp/>buffer,</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="namespaceNeoFOAM_1a6340adc783ef78803a50be602055fba6" kindref="member">mpi_label_t</ref><sp/>size,</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceNeoFOAM_1a6340adc783ef78803a50be602055fba6" kindref="member">mpi_label_t</ref><sp/>rankSend,</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceNeoFOAM_1a6340adc783ef78803a50be602055fba6" kindref="member">mpi_label_t</ref><sp/>tag,</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Comm<sp/>comm,</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/>MPI_Request*<sp/>request</highlight></codeline>
<codeline lineno="204"><highlight class="normal">)</highlight></codeline>
<codeline lineno="205"><highlight class="normal">{</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceNeoFOAM_1a6340adc783ef78803a50be602055fba6" kindref="member">mpi_label_t</ref><sp/>err<sp/>=<sp/>MPI_Irecv(buffer,<sp/>size,<sp/>getType&lt;valueType&gt;(),<sp/>rankSend,<sp/>tag,<sp/>comm,<sp/>request);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1af1af39ea56903b56ed322432441511b5" kindref="member">NF_DEBUG_ASSERT</ref>(err<sp/>==<sp/>MPI_SUCCESS,<sp/></highlight><highlight class="stringliteral">&quot;MPI_Irecv<sp/>failed.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="208"><highlight class="normal">}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="217" refid="namespaceNeoFOAM_1_1mpi_1ae6e3efafb27b0a2a0ffa30f04798832a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="namespaceNeoFOAM_1_1mpi_1ae6e3efafb27b0a2a0ffa30f04798832a" kindref="member">test</ref>(MPI_Request*<sp/>request)</highlight></codeline>
<codeline lineno="218"><highlight class="normal">{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceNeoFOAM_1a6340adc783ef78803a50be602055fba6" kindref="member">mpi_label_t</ref><sp/>flag;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="namespaceNeoFOAM_1a6340adc783ef78803a50be602055fba6" kindref="member">mpi_label_t</ref><sp/>err<sp/>=<sp/>MPI_Test(request,<sp/>&amp;flag,<sp/>MPI_STATUS_IGNORE);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="error_8hpp_1af1af39ea56903b56ed322432441511b5" kindref="member">NF_DEBUG_ASSERT</ref>(err<sp/>==<sp/>MPI_SUCCESS,<sp/></highlight><highlight class="stringliteral">&quot;MPI_Test<sp/>failed.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">static_cast&lt;</highlight><highlight class="keywordtype">bool</highlight><highlight class="keyword">&gt;</highlight><highlight class="normal">(flag);</highlight></codeline>
<codeline lineno="223"><highlight class="normal">}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight></codeline>
<codeline lineno="227"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/mpi/operators.hpp"/>
  </compounddef>
</doxygen>
