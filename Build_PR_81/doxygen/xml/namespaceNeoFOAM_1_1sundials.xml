<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespaceNeoFOAM_1_1sundials" kind="namespace" language="C++">
    <compoundname>NeoFOAM::sundials</compoundname>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespaceNeoFOAM_1_1sundials_1a875a67b9f039bbb067821249a99ba5cd" prot="public" static="no">
        <type>Kokkos::Serial</type>
        <definition>using NeoFOAM::sundials::ExecSpace = typedef Kokkos::Serial</definition>
        <argsstring></argsstring>
        <name>ExecSpace</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/timeIntegration/sundials.hpp" line="33" column="1" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/timeIntegration/sundials.hpp" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceNeoFOAM_1_1sundials_1aff79b05420b2f8155db07475f1106c69" prot="public" static="no">
        <type>::sundials::kokkos::Vector&lt; <ref refid="namespaceNeoFOAM_1_1sundials_1a875a67b9f039bbb067821249a99ba5cd" kindref="member">ExecSpace</ref> &gt;</type>
        <definition>using NeoFOAM::sundials::SKVectorType = typedef ::sundials::kokkos::Vector&lt;ExecSpace&gt;</definition>
        <argsstring></argsstring>
        <name>SKVectorType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/timeIntegration/sundials.hpp" line="35" column="1" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/timeIntegration/sundials.hpp" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="namespaceNeoFOAM_1_1sundials_1a63626c57ed46ba2698c02116ccf60a0e" prot="public" static="no">
        <type>SKVectorType::size_type</type>
        <definition>using NeoFOAM::sundials::SKSizeType = typedef SKVectorType::size_type</definition>
        <argsstring></argsstring>
        <name>SKSizeType</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/timeIntegration/sundials.hpp" line="36" column="1" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/timeIntegration/sundials.hpp" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceNeoFOAM_1_1sundials_1a9b21cd97a6cc848963a23676f910d5d2" prot="public" static="no" mutable="no">
        <type>auto</type>
        <definition>auto NeoFOAM::sundials::SUNContextDeleter</definition>
        <argsstring></argsstring>
        <name>SUNContextDeleter</name>
        <initializer>= [](SUNContext_* ctx)
{
    if (ctx != nullptr)
    {
        SUNContext_Free(&amp;ctx);
    }
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Custom deleter for SUNContext_ shared pointers, frees the context if last context. <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">ctx</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the SUNContext_ to be freed, can be nullptr. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/timeIntegration/sundials.hpp" line="42" column="6" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/timeIntegration/sundials.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceNeoFOAM_1_1sundials_1af26930dad82f552ea4b35cbea9a08dcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ARKODE_ERKTableID</type>
        <definition>ARKODE_ERKTableID NeoFOAM::sundials::stringToERKTable</definition>
        <argsstring>(const std::string &amp;key)</argsstring>
        <name>stringToERKTable</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>key</declname>
        </param>
        <briefdescription>
<para>Function to map dictionary key-words to sundials RKButcher tableau. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>key</parametername>
</parameternamelist>
<parameterdescription>
<para>The key, name, of the explicit Runge-Kutta method to use. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The id of the assocaied Sundails RK Butcher tableau. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/timeIntegration/sundials.hpp" line="55" column="19" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/timeIntegration/sundials.hpp" bodystart="55" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1sundials_1a91de57c82fd9e44bbcc73a5f135d0b0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NeoFOAM::sundials::fieldToNVector</definition>
        <argsstring>(const NeoFOAM::Field&lt; ValueType &gt; &amp;field, N_Vector &amp;vector)</argsstring>
        <name>fieldToNVector</name>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1Field" kindref="compound">NeoFOAM::Field</ref>&lt; ValueType &gt; &amp;</type>
          <declname>field</declname>
        </param>
        <param>
          <type>N_Vector &amp;</type>
          <declname>vector</declname>
        </param>
        <briefdescription>
<para>Converts a <ref refid="namespaceNeoFOAM" kindref="compound">NeoFOAM</ref> <ref refid="classNeoFOAM_1_1Field" kindref="compound">Field</ref> to a SUNDIALS N_Vector. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ValueType</parametername>
</parameternamelist>
<parameterdescription>
<para>The data type of the field elements (e.g., double, float) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">field</parametername>
</parameternamelist>
<parameterdescription>
<para>Source <ref refid="namespaceNeoFOAM" kindref="compound">NeoFOAM</ref> <ref refid="classNeoFOAM_1_1Field" kindref="compound">Field</ref> containing the data to be copied </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">vector</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination SUNDIALS N_Vector to receive the field data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>Assumes everything is correctly initialised, sized, correct executore etc. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/timeIntegration/sundials.hpp" line="80" column="6" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/timeIntegration/sundials.hpp" bodystart="80" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1sundials_1ac0883a3ea7524d64e7de04515395a859" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NeoFOAM::sundials::NVectorToField</definition>
        <argsstring>(const N_Vector &amp;vector, NeoFOAM::Field&lt; ValueType &gt; &amp;field)</argsstring>
        <name>NVectorToField</name>
        <param>
          <type>const N_Vector &amp;</type>
          <declname>vector</declname>
        </param>
        <param>
          <type><ref refid="classNeoFOAM_1_1Field" kindref="compound">NeoFOAM::Field</ref>&lt; ValueType &gt; &amp;</type>
          <declname>field</declname>
        </param>
        <briefdescription>
<para>Converts a SUNDIALS N_Vector back to a <ref refid="namespaceNeoFOAM" kindref="compound">NeoFOAM</ref> <ref refid="classNeoFOAM_1_1Field" kindref="compound">Field</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ValueType</parametername>
</parameternamelist>
<parameterdescription>
<para>The data type of the field elements (e.g., double, float) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">vector</parametername>
</parameternamelist>
<parameterdescription>
<para>Source SUNDIALS N_Vector containing the data to be copied </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="out">field</parametername>
</parameternamelist>
<parameterdescription>
<para>Destination <ref refid="namespaceNeoFOAM" kindref="compound">NeoFOAM</ref> <ref refid="classNeoFOAM_1_1Field" kindref="compound">Field</ref> to receive the vector data </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="warning"><para>Assumes everything is correctly initialised, sized, correct executore etc. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/timeIntegration/sundials.hpp" line="97" column="6" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/timeIntegration/sundials.hpp" bodystart="97" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1sundials_1ae2307f054819116cd2bc34265966c1ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename SolutionFieldType</type>
          </param>
        </templateparamlist>
        <type>int</type>
        <definition>int NeoFOAM::sundials::explicitRKSolve</definition>
        <argsstring>(sunrealtype t, N_Vector y, N_Vector ydot, void *user_data)</argsstring>
        <name>explicitRKSolve</name>
        <param>
          <type>sunrealtype</type>
          <declname>t</declname>
        </param>
        <param>
          <type>N_Vector</type>
          <declname>y</declname>
        </param>
        <param>
          <type>N_Vector</type>
          <declname>ydot</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>user_data</declname>
        </param>
        <briefdescription>
<para>Performs an iteration/stage of explicit Runge-Kutta with sundails and an expression. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>t</parametername>
</parameternamelist>
<parameterdescription>
<para>The current value of the independent variable </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>The current value of the dependent variable vector </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ydont</parametername>
</parameternamelist>
<parameterdescription>
<para>The output vector that forms [a portion of] the ODE RHS, f(t, y). </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>user_data</parametername>
</parameternamelist>
<parameterdescription>
<para>he user_data pointer that was passed to ARKodeSetUserData().</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para><ulink url="https://sundials.readthedocs.io/en/latest/arkode/Usage/User_supplied.html#c.ARKRhsFn">https://sundials.readthedocs.io/en/latest/arkode/Usage/User_supplied.html#c.ARKRhsFn</ulink></para>
</simplesect>
This is our implementation of the RHS of explicit spacital integration, to be integrated in time. In our case user_data is a unique_ptr to an expression. In this function a &apos;working source&apos; vector is created and parsed to the explicitOperation, which should contain the field variable at the start of the time step. Currently &apos;multi-stage RK&apos; is not supported until y can be copied to this field. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/timeIntegration/sundials.hpp" line="122" column="5" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/timeIntegration/sundials.hpp" bodystart="122" bodyend="146"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/timeIntegration/sundials.hpp" line="18" column="1"/>
  </compounddef>
</doxygen>
