<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespaceNeoFOAM_1_1DSL" kind="namespace" language="C++">
    <compoundname>NeoFOAM::DSL</compoundname>
    <innerclass refid="classNeoFOAM_1_1DSL_1_1EqnSystem" prot="public">NeoFOAM::DSL::EqnSystem</innerclass>
    <innerclass refid="classNeoFOAM_1_1DSL_1_1EqnTerm" prot="public">NeoFOAM::DSL::EqnTerm</innerclass>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceNeoFOAM_1_1DSL_1ab072f0b9ab697dafc3ff480643acecc0" prot="public" static="no" mutable="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>concept</type>
        <definition>concept NeoFOAM::DSL::HasTemporalTerm</definition>
        <argsstring></argsstring>
        <name>HasTemporalTerm</name>
        <initializer>= requires(T t) {
    {
        t.temporalOperation(
            std::declval&lt;<ref refid="classNeoFOAM_1_1Field" kindref="compound">NeoFOAM::Field</ref>&lt;<ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">NeoFOAM::scalar</ref>&gt;&amp;&gt;(), std::declval&lt;<ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">NeoFOAM::scalar</ref>&gt;()
        )
    } -&gt; std::same_as&lt;void&gt;; 
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="20" column="9" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" bodystart="20" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceNeoFOAM_1_1DSL_1a41b1b4bcc794ab897f65d25b8ba1e371" prot="public" static="no" mutable="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>concept</type>
        <definition>concept NeoFOAM::DSL::HasExplicitTerm</definition>
        <argsstring></argsstring>
        <name>HasExplicitTerm</name>
        <initializer>= requires(T t) {
    {
        t.explicitOperation(
            std::declval&lt;<ref refid="classNeoFOAM_1_1Field" kindref="compound">NeoFOAM::Field</ref>&lt;<ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">NeoFOAM::scalar</ref>&gt;&amp;&gt;(), std::declval&lt;<ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">NeoFOAM::scalar</ref>&gt;()
        )
    } -&gt; std::same_as&lt;void&gt;; 
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="29" column="9" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" bodystart="29" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceNeoFOAM_1_1DSL_1a820d4e04fb7a65aa4b5afdf548e154f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1DSL_1_1EqnSystem" kindref="compound">EqnSystem</ref></type>
        <definition>EqnSystem NeoFOAM::DSL::operator+</definition>
        <argsstring>(EqnSystem lhs, const EqnSystem &amp;rhs)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="classNeoFOAM_1_1DSL_1_1EqnSystem" kindref="compound">EqnSystem</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1DSL_1_1EqnSystem" kindref="compound">EqnSystem</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnSystem.hpp" line="141" column="18" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnSystem.hpp" bodystart="141" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1DSL_1af599e6c209c0db51b0c80590dd38e99f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1DSL_1_1EqnSystem" kindref="compound">EqnSystem</ref></type>
        <definition>EqnSystem NeoFOAM::DSL::operator+</definition>
        <argsstring>(EqnSystem lhs, const EqnTerm &amp;rhs)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="classNeoFOAM_1_1DSL_1_1EqnSystem" kindref="compound">EqnSystem</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1DSL_1_1EqnTerm" kindref="compound">EqnTerm</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnSystem.hpp" line="147" column="18" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnSystem.hpp" bodystart="147" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1DSL_1a9f88bf215b7d32f33991c4c824661d8a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1DSL_1_1EqnSystem" kindref="compound">EqnSystem</ref></type>
        <definition>EqnSystem NeoFOAM::DSL::operator+</definition>
        <argsstring>(const EqnTerm &amp;lhs, const EqnTerm &amp;rhs)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1DSL_1_1EqnTerm" kindref="compound">EqnTerm</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1DSL_1_1EqnTerm" kindref="compound">EqnTerm</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnSystem.hpp" line="153" column="18" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnSystem.hpp" bodystart="153" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1DSL_1a4dd1c4af4771f93fc8a4c3dc0e08560d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1DSL_1_1EqnSystem" kindref="compound">EqnSystem</ref></type>
        <definition>EqnSystem NeoFOAM::DSL::operator*</definition>
        <argsstring>(NeoFOAM::scalar scale, const EqnSystem &amp;es)</argsstring>
        <name>operator*</name>
        <param>
          <type><ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">NeoFOAM::scalar</ref></type>
          <declname>scale</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1DSL_1_1EqnSystem" kindref="compound">EqnSystem</ref> &amp;</type>
          <declname>es</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnSystem.hpp" line="161" column="18" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnSystem.hpp" bodystart="161" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1DSL_1a28fe378eb23a48922d2a0da7f3bab2fe" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1DSL_1_1EqnSystem" kindref="compound">EqnSystem</ref></type>
        <definition>EqnSystem NeoFOAM::DSL::operator-</definition>
        <argsstring>(EqnSystem lhs, const EqnSystem &amp;rhs)</argsstring>
        <name>operator-</name>
        <param>
          <type><ref refid="classNeoFOAM_1_1DSL_1_1EqnSystem" kindref="compound">EqnSystem</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1DSL_1_1EqnSystem" kindref="compound">EqnSystem</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnSystem.hpp" line="179" column="18" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnSystem.hpp" bodystart="179" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1DSL_1a5697582c42ea365b258ce8c65d9f07d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1DSL_1_1EqnSystem" kindref="compound">EqnSystem</ref></type>
        <definition>EqnSystem NeoFOAM::DSL::operator-</definition>
        <argsstring>(EqnSystem lhs, const EqnTerm &amp;rhs)</argsstring>
        <name>operator-</name>
        <param>
          <type><ref refid="classNeoFOAM_1_1DSL_1_1EqnSystem" kindref="compound">EqnSystem</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1DSL_1_1EqnTerm" kindref="compound">EqnTerm</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnSystem.hpp" line="185" column="18" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnSystem.hpp" bodystart="185" bodyend="189"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1DSL_1a3aeb604cf95a1650322aab4fc29c6760" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1DSL_1_1EqnSystem" kindref="compound">EqnSystem</ref></type>
        <definition>EqnSystem NeoFOAM::DSL::operator-</definition>
        <argsstring>(const EqnTerm &amp;lhs, const EqnTerm &amp;rhs)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1DSL_1_1EqnTerm" kindref="compound">EqnTerm</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1DSL_1_1EqnTerm" kindref="compound">EqnTerm</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnSystem.hpp" line="191" column="18" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnSystem.hpp" bodystart="191" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1DSL_1ae726b4724d995be4969896c14e9c5efa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1DSL_1_1EqnTerm" kindref="compound">EqnTerm</ref></type>
        <definition>EqnTerm NeoFOAM::DSL::operator*</definition>
        <argsstring>(NeoFOAM::scalar scale, const EqnTerm &amp;lhs)</argsstring>
        <name>operator*</name>
        <param>
          <type><ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">NeoFOAM::scalar</ref></type>
          <declname>scale</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1DSL_1_1EqnTerm" kindref="compound">EqnTerm</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" line="163" column="16" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnTerm.hpp" bodystart="163" bodyend="168"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/DSL/eqnSystem.hpp" line="15" column="1"/>
  </compounddef>
</doxygen>
