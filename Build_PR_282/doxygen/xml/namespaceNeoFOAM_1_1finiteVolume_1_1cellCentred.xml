<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="namespaceNeoFOAM_1_1finiteVolume_1_1cellCentred" kind="namespace" language="C++">
    <compoundname>NeoFOAM::finiteVolume::cellCentred</compoundname>
    <innerclass refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1BasicGeometryScheme" prot="public">NeoFOAM::finiteVolume::cellCentred::BasicGeometryScheme</innerclass>
    <innerclass refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1BoundaryPatchMixin" prot="public">NeoFOAM::finiteVolume::cellCentred::BoundaryPatchMixin</innerclass>
    <innerclass refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1CellToFaceStencil" prot="public">NeoFOAM::finiteVolume::cellCentred::CellToFaceStencil</innerclass>
    <innerclass refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1CreateFromExistingField" prot="public">NeoFOAM::finiteVolume::cellCentred::CreateFromExistingField</innerclass>
    <innerclass refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1DdtOperator" prot="public">NeoFOAM::finiteVolume::cellCentred::DdtOperator</innerclass>
    <innerclass refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1DivOperator" prot="public">NeoFOAM::finiteVolume::cellCentred::DivOperator</innerclass>
    <innerclass refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1DivOperatorFactory" prot="public">NeoFOAM::finiteVolume::cellCentred::DivOperatorFactory</innerclass>
    <innerclass refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1Expression" prot="public">NeoFOAM::finiteVolume::cellCentred::Expression</innerclass>
    <innerclass refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1FaceNormalGradient" prot="public">NeoFOAM::finiteVolume::cellCentred::FaceNormalGradient</innerclass>
    <innerclass refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1FaceNormalGradientFactory" prot="public">NeoFOAM::finiteVolume::cellCentred::FaceNormalGradientFactory</innerclass>
    <innerclass refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1FieldCollection" prot="public">NeoFOAM::finiteVolume::cellCentred::FieldCollection</innerclass>
    <innerclass refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1FieldDocument" prot="public">NeoFOAM::finiteVolume::cellCentred::FieldDocument</innerclass>
    <innerclass refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1GaussGreenDiv" prot="public">NeoFOAM::finiteVolume::cellCentred::GaussGreenDiv</innerclass>
    <innerclass refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1GaussGreenGrad" prot="public">NeoFOAM::finiteVolume::cellCentred::GaussGreenGrad</innerclass>
    <innerclass refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1GaussGreenLaplacian" prot="public">NeoFOAM::finiteVolume::cellCentred::GaussGreenLaplacian</innerclass>
    <innerclass refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1GeometricFieldMixin" prot="public">NeoFOAM::finiteVolume::cellCentred::GeometricFieldMixin</innerclass>
    <innerclass refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1GeometryScheme" prot="public">NeoFOAM::finiteVolume::cellCentred::GeometryScheme</innerclass>
    <innerclass refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1GeometrySchemeFactory" prot="public">NeoFOAM::finiteVolume::cellCentred::GeometrySchemeFactory</innerclass>
    <innerclass refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1LaplacianOperator" prot="public">NeoFOAM::finiteVolume::cellCentred::LaplacianOperator</innerclass>
    <innerclass refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1LaplacianOperatorFactory" prot="public">NeoFOAM::finiteVolume::cellCentred::LaplacianOperatorFactory</innerclass>
    <innerclass refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1Linear" prot="public">NeoFOAM::finiteVolume::cellCentred::Linear</innerclass>
    <innerclass refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1OldTimeCollection" prot="public">NeoFOAM::finiteVolume::cellCentred::OldTimeCollection</innerclass>
    <innerclass refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1OldTimeDocument" prot="public">NeoFOAM::finiteVolume::cellCentred::OldTimeDocument</innerclass>
    <innerclass refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1SourceTerm" prot="public">NeoFOAM::finiteVolume::cellCentred::SourceTerm</innerclass>
    <innerclass refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1SparsityPattern" prot="public">NeoFOAM::finiteVolume::cellCentred::SparsityPattern</innerclass>
    <innerclass refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1SurfaceBoundary" prot="public">NeoFOAM::finiteVolume::cellCentred::SurfaceBoundary</innerclass>
    <innerclass refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1SurfaceBoundaryFactory" prot="public">NeoFOAM::finiteVolume::cellCentred::SurfaceBoundaryFactory</innerclass>
    <innerclass refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1SurfaceField" prot="public">NeoFOAM::finiteVolume::cellCentred::SurfaceField</innerclass>
    <innerclass refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1SurfaceIntegrate" prot="public">NeoFOAM::finiteVolume::cellCentred::SurfaceIntegrate</innerclass>
    <innerclass refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1SurfaceInterpolation" prot="public">NeoFOAM::finiteVolume::cellCentred::SurfaceInterpolation</innerclass>
    <innerclass refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1SurfaceInterpolationFactory" prot="public">NeoFOAM::finiteVolume::cellCentred::SurfaceInterpolationFactory</innerclass>
    <innerclass refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1Uncorrected" prot="public">NeoFOAM::finiteVolume::cellCentred::Uncorrected</innerclass>
    <innerclass refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1Upwind" prot="public">NeoFOAM::finiteVolume::cellCentred::Upwind</innerclass>
    <innerclass refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1VolumeBoundary" prot="public">NeoFOAM::finiteVolume::cellCentred::VolumeBoundary</innerclass>
    <innerclass refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1VolumeBoundaryFactory" prot="public">NeoFOAM::finiteVolume::cellCentred::VolumeBoundaryFactory</innerclass>
    <innerclass refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1VolumeField" prot="public">NeoFOAM::finiteVolume::cellCentred::VolumeField</innerclass>
    <innernamespace refid="namespaceNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1surfaceBoundary">NeoFOAM::finiteVolume::cellCentred::surfaceBoundary</innernamespace>
    <innernamespace refid="namespaceNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1volumeBoundary">NeoFOAM::finiteVolume::cellCentred::volumeBoundary</innernamespace>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="namespaceNeoFOAM_1_1finiteVolume_1_1cellCentred_1ab26a29d91f040ea317d56c7ac5aefe1c" prot="public" static="no">
        <type>std::function&lt; <ref refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1FieldDocument" kindref="compound">FieldDocument</ref>(<ref refid="classNeoFOAM_1_1Database" kindref="compound">NeoFOAM::Database</ref> &amp;db)&gt;</type>
        <definition>using NeoFOAM::finiteVolume::cellCentred::CreateFunction = typedef std::function&lt;FieldDocument(NeoFOAM::Database&amp; db)&gt;</definition>
        <argsstring></argsstring>
        <name>CreateFunction</name>
        <qualifiedname>NeoFOAM::finiteVolume::cellCentred::CreateFunction</qualifiedname>
        <briefdescription>
<para>A function type for creating a <ref refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1FieldDocument" kindref="compound">FieldDocument</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>This function type is used to create a <ref refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1FieldDocument" kindref="compound">FieldDocument</ref> and creates a registered FieldType</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>db</parametername>
</parameternamelist>
<parameterdescription>
<para>The database to create the <ref refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1FieldDocument" kindref="compound">FieldDocument</ref> in. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The created <ref refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1FieldDocument" kindref="compound">FieldDocument</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/database/fieldCollection.hpp" line="196" column="1" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/database/fieldCollection.hpp" bodystart="196" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespaceNeoFOAM_1_1finiteVolume_1_1cellCentred_1a48a6e7e7c0f52fd253c41023c3a907ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool NeoFOAM::finiteVolume::cellCentred::validateFieldDoc</definition>
        <argsstring>(const Document &amp;doc)</argsstring>
        <name>validateFieldDoc</name>
        <qualifiedname>NeoFOAM::finiteVolume::cellCentred::validateFieldDoc</qualifiedname>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1Document" kindref="compound">Document</ref> &amp;</type>
          <declname>doc</declname>
        </param>
        <briefdescription>
<para>Validates a <ref refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1FieldDocument" kindref="compound">FieldDocument</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>This function validates a <ref refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1FieldDocument" kindref="compound">FieldDocument</ref> by checking if it contains the required fields.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>doc</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="classNeoFOAM_1_1Document" kindref="compound">Document</ref> to validate. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the <ref refid="classNeoFOAM_1_1Document" kindref="compound">Document</ref> is valid, false otherwise. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/database/fieldCollection.hpp" line="25" column="6" declfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/database/fieldCollection.hpp" declline="25" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1finiteVolume_1_1cellCentred_1a4400b455f0b411d00432715774a8381c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FieldType</type>
          </param>
        </templateparamlist>
        <type>FieldType &amp;</type>
        <definition>FieldType &amp; NeoFOAM::finiteVolume::cellCentred::oldTime</definition>
        <argsstring>(FieldType &amp;field)</argsstring>
        <name>oldTime</name>
        <qualifiedname>NeoFOAM::finiteVolume::cellCentred::oldTime</qualifiedname>
        <param>
          <type>FieldType &amp;</type>
          <declname>field</declname>
        </param>
        <briefdescription>
<para>Retrieves the old time field of a given field. </para>
        </briefdescription>
        <detaileddescription>
<para>This function retrieves the old time field of a given field</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>The field to retrieve the old time field from. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The old time field. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/database/oldTimeCollection.hpp" line="147" column="11" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/database/oldTimeCollection.hpp" bodystart="147" bodyend="152"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1finiteVolume_1_1cellCentred_1afcb3a70f807d65f306c16470ccc49dd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FieldType</type>
          </param>
        </templateparamlist>
        <type>const FieldType &amp;</type>
        <definition>const FieldType &amp; NeoFOAM::finiteVolume::cellCentred::oldTime</definition>
        <argsstring>(const FieldType &amp;field)</argsstring>
        <name>oldTime</name>
        <qualifiedname>NeoFOAM::finiteVolume::cellCentred::oldTime</qualifiedname>
        <param>
          <type>const FieldType &amp;</type>
          <declname>field</declname>
        </param>
        <briefdescription>
<para>Retrieves the old time field of a given field (const version). </para>
        </briefdescription>
        <detaileddescription>
<para>This function retrieves the old time field of a given field</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>field</parametername>
</parameternamelist>
<parameterdescription>
<para>The field to retrieve the old time field from. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The old time field. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/database/oldTimeCollection.hpp" line="163" column="17" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/database/oldTimeCollection.hpp" bodystart="163" bodyend="168"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1finiteVolume_1_1cellCentred_1ae3a73bdcd36c3ff302987bac9671ed1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename BoundaryType</type>
          </param>
        </templateparamlist>
        <type>std::vector&lt; BoundaryType &gt;</type>
        <definition>std::vector&lt; BoundaryType &gt; NeoFOAM::finiteVolume::cellCentred::createCalculatedBCs</definition>
        <argsstring>(const UnstructuredMesh &amp;mesh)</argsstring>
        <name>createCalculatedBCs</name>
        <qualifiedname>NeoFOAM::finiteVolume::cellCentred::createCalculatedBCs</qualifiedname>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1UnstructuredMesh" kindref="compound">UnstructuredMesh</ref> &amp;</type>
          <declname>mesh</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/finiteVolume/cellCentred/boundary.hpp" line="26" column="13" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/finiteVolume/cellCentred/boundary.hpp" bodystart="26" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1finiteVolume_1_1cellCentred_1a0bade61aa0d975ccf0dec615c9a3b033" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NeoFOAM::finiteVolume::cellCentred::computeFaceNormalGrad</definition>
        <argsstring>(const VolumeField&lt; ValueType &gt; &amp;volField, const std::shared_ptr&lt; GeometryScheme &gt; geometryScheme, SurfaceField&lt; ValueType &gt; &amp;surfaceField)</argsstring>
        <name>computeFaceNormalGrad</name>
        <qualifiedname>NeoFOAM::finiteVolume::cellCentred::computeFaceNormalGrad</qualifiedname>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1VolumeField" kindref="compound">VolumeField</ref>&lt; ValueType &gt; &amp;</type>
          <declname>volField</declname>
        </param>
        <param>
          <type>const std::shared_ptr&lt; <ref refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1GeometryScheme" kindref="compound">GeometryScheme</ref> &gt;</type>
          <declname>geometryScheme</declname>
        </param>
        <param>
          <type><ref refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1SurfaceField" kindref="compound">SurfaceField</ref>&lt; ValueType &gt; &amp;</type>
          <declname>surfaceField</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/finiteVolume/cellCentred/faceNormalGradient/uncorrected.hpp" line="21" column="6" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/finiteVolume/cellCentred/faceNormalGradient/uncorrected.hpp" bodystart="21" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1finiteVolume_1_1cellCentred_1a572267224a84bb05ac6f11e9e8e9c934" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NeoFOAM::finiteVolume::cellCentred::computeLinearInterpolation</definition>
        <argsstring>(const VolumeField&lt; ValueType &gt; &amp;src, const SurfaceField&lt; scalar &gt; &amp;weights, SurfaceField&lt; ValueType &gt; &amp;dst)</argsstring>
        <name>computeLinearInterpolation</name>
        <qualifiedname>NeoFOAM::finiteVolume::cellCentred::computeLinearInterpolation</qualifiedname>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1VolumeField" kindref="compound">VolumeField</ref>&lt; ValueType &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1SurfaceField" kindref="compound">SurfaceField</ref>&lt; <ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref> &gt; &amp;</type>
          <declname>weights</declname>
        </param>
        <param>
          <type><ref refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1SurfaceField" kindref="compound">SurfaceField</ref>&lt; ValueType &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/finiteVolume/cellCentred/interpolation/linear.hpp" line="31" column="6" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/finiteVolume/cellCentred/interpolation/linear.hpp" bodystart="31" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1finiteVolume_1_1cellCentred_1acbdc63a427b773fc0b85a07609251d72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NeoFOAM::finiteVolume::cellCentred::computeUpwindInterpolation</definition>
        <argsstring>(const VolumeField&lt; ValueType &gt; &amp;src, const SurfaceField&lt; scalar &gt; &amp;flux, const SurfaceField&lt; scalar &gt; &amp;weights, SurfaceField&lt; ValueType &gt; &amp;dst)</argsstring>
        <name>computeUpwindInterpolation</name>
        <qualifiedname>NeoFOAM::finiteVolume::cellCentred::computeUpwindInterpolation</qualifiedname>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1VolumeField" kindref="compound">VolumeField</ref>&lt; ValueType &gt; &amp;</type>
          <declname>src</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1SurfaceField" kindref="compound">SurfaceField</ref>&lt; <ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref> &gt; &amp;</type>
          <declname>flux</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1SurfaceField" kindref="compound">SurfaceField</ref>&lt; <ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref> &gt; &amp;</type>
          <declname>weights</declname>
        </param>
        <param>
          <type><ref refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1SurfaceField" kindref="compound">SurfaceField</ref>&lt; ValueType &gt; &amp;</type>
          <declname>dst</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/finiteVolume/cellCentred/interpolation/upwind.hpp" line="31" column="6" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/finiteVolume/cellCentred/interpolation/upwind.hpp" bodystart="31" bodyend="73"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1finiteVolume_1_1cellCentred_1a4ce6755008a69a3d233fe5c0b1ea65a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
          <param>
            <type>typename IndexType</type>
            <defval>localIdx</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classNeoFOAM_1_1la_1_1LinearSystem" kindref="compound">la::LinearSystem</ref>&lt; ValueType, IndexType &gt;</type>
        <definition>la::LinearSystem&lt; ValueType, IndexType &gt; NeoFOAM::finiteVolume::cellCentred::convert</definition>
        <argsstring>(const la::LinearSystem&lt; scalar, IndexType &gt; &amp;ls)</argsstring>
        <name>convert</name>
        <qualifiedname>NeoFOAM::finiteVolume::cellCentred::convert</qualifiedname>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1la_1_1LinearSystem" kindref="compound">la::LinearSystem</ref>&lt; <ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref>, IndexType &gt; &amp;</type>
          <declname>ls</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/finiteVolume/cellCentred/operators/expression.hpp" line="21" column="18" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/finiteVolume/cellCentred/operators/expression.hpp" bodystart="21" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1finiteVolume_1_1cellCentred_1a0f6da8027fabc838e7a68fdedfe99450" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
          <param>
            <type>typename IndexType</type>
            <defval>localIdx</defval>
          </param>
        </templateparamlist>
        <type><ref refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1VolumeField" kindref="compound">VolumeField</ref>&lt; ValueType &gt;</type>
        <definition>VolumeField&lt; ValueType &gt; NeoFOAM::finiteVolume::cellCentred::operator&amp;</definition>
        <argsstring>(const Expression&lt; ValueType, IndexType &gt; ls, const VolumeField&lt; ValueType &gt; &amp;psi)</argsstring>
        <name>operator&amp;</name>
        <qualifiedname>NeoFOAM::finiteVolume::cellCentred::operator&amp;</qualifiedname>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">Expression</ref>&lt; ValueType, IndexType &gt;</type>
          <declname>ls</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1VolumeField" kindref="compound">VolumeField</ref>&lt; ValueType &gt; &amp;</type>
          <declname>psi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/finiteVolume/cellCentred/operators/expression.hpp" line="239" column="1" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/finiteVolume/cellCentred/operators/expression.hpp" bodystart="239" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1finiteVolume_1_1cellCentred_1a501de19d2617671dfdec87c685797416" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NeoFOAM::finiteVolume::cellCentred::computeDiv</definition>
        <argsstring>(const Executor &amp;exec, size_t nInternalFaces, size_t nBoundaryFaces, std::span&lt; const int &gt; neighbour, std::span&lt; const int &gt; owner, std::span&lt; const int &gt; faceCells, std::span&lt; const scalar &gt; faceFlux, std::span&lt; const ValueType &gt; phiF, std::span&lt; const scalar &gt; V, std::span&lt; ValueType &gt; res, const dsl::Coeff operatorScaling)</argsstring>
        <name>computeDiv</name>
        <qualifiedname>NeoFOAM::finiteVolume::cellCentred::computeDiv</qualifiedname>
        <param>
          <type>const <ref refid="namespaceNeoFOAM_1aaa4d35d275559f501cb6a1eec717c905" kindref="member">Executor</ref> &amp;</type>
          <declname>exec</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoFOAM_1aa8ea339f1c9a4f2232da876ead30a82c" kindref="member">size_t</ref></type>
          <declname>nInternalFaces</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoFOAM_1aa8ea339f1c9a4f2232da876ead30a82c" kindref="member">size_t</ref></type>
          <declname>nBoundaryFaces</declname>
        </param>
        <param>
          <type>std::span&lt; const int &gt;</type>
          <declname>neighbour</declname>
        </param>
        <param>
          <type>std::span&lt; const int &gt;</type>
          <declname>owner</declname>
        </param>
        <param>
          <type>std::span&lt; const int &gt;</type>
          <declname>faceCells</declname>
        </param>
        <param>
          <type>std::span&lt; const <ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref> &gt;</type>
          <declname>faceFlux</declname>
        </param>
        <param>
          <type>std::span&lt; const ValueType &gt;</type>
          <declname>phiF</declname>
        </param>
        <param>
          <type>std::span&lt; const <ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref> &gt;</type>
          <declname>V</declname>
        </param>
        <param>
          <type>std::span&lt; ValueType &gt;</type>
          <declname>res</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Coeff" kindref="compound">dsl::Coeff</ref></type>
          <declname>operatorScaling</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/finiteVolume/cellCentred/operators/gaussGreenDiv.hpp" line="29" column="6" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/finiteVolume/cellCentred/operators/gaussGreenDiv.hpp" bodystart="29" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1finiteVolume_1_1cellCentred_1ad3170ac3864a564f6e3da05036c3e17d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NeoFOAM::finiteVolume::cellCentred::computeDiv</definition>
        <argsstring>(const SurfaceField&lt; scalar &gt; &amp;faceFlux, const VolumeField&lt; ValueType &gt; &amp;phi, const SurfaceInterpolation&lt; ValueType &gt; &amp;surfInterp, Field&lt; ValueType &gt; &amp;divPhi, const dsl::Coeff operatorScaling)</argsstring>
        <name>computeDiv</name>
        <qualifiedname>NeoFOAM::finiteVolume::cellCentred::computeDiv</qualifiedname>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1SurfaceField" kindref="compound">SurfaceField</ref>&lt; <ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref> &gt; &amp;</type>
          <declname>faceFlux</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1VolumeField" kindref="compound">VolumeField</ref>&lt; ValueType &gt; &amp;</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1SurfaceInterpolation" kindref="compound">SurfaceInterpolation</ref>&lt; ValueType &gt; &amp;</type>
          <declname>surfInterp</declname>
        </param>
        <param>
          <type><ref refid="classNeoFOAM_1_1Field" kindref="compound">Field</ref>&lt; ValueType &gt; &amp;</type>
          <declname>divPhi</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Coeff" kindref="compound">dsl::Coeff</ref></type>
          <declname>operatorScaling</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/finiteVolume/cellCentred/operators/gaussGreenDiv.hpp" line="99" column="6" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/finiteVolume/cellCentred/operators/gaussGreenDiv.hpp" bodystart="99" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1finiteVolume_1_1cellCentred_1a516d1ec0f64c2827145fb24b885d6342" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NeoFOAM::finiteVolume::cellCentred::computeLaplacian</definition>
        <argsstring>(const FaceNormalGradient&lt; ValueType &gt; &amp;faceNormalGradient, const SurfaceField&lt; scalar &gt; &amp;gamma, VolumeField&lt; ValueType &gt; &amp;phi, Field&lt; ValueType &gt; &amp;lapPhi, const dsl::Coeff operatorScaling)</argsstring>
        <name>computeLaplacian</name>
        <qualifiedname>NeoFOAM::finiteVolume::cellCentred::computeLaplacian</qualifiedname>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1FaceNormalGradient" kindref="compound">FaceNormalGradient</ref>&lt; ValueType &gt; &amp;</type>
          <declname>faceNormalGradient</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1SurfaceField" kindref="compound">SurfaceField</ref>&lt; <ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref> &gt; &amp;</type>
          <declname>gamma</declname>
        </param>
        <param>
          <type><ref refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1VolumeField" kindref="compound">VolumeField</ref>&lt; ValueType &gt; &amp;</type>
          <declname>phi</declname>
        </param>
        <param>
          <type><ref refid="classNeoFOAM_1_1Field" kindref="compound">Field</ref>&lt; ValueType &gt; &amp;</type>
          <declname>lapPhi</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Coeff" kindref="compound">dsl::Coeff</ref></type>
          <declname>operatorScaling</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/finiteVolume/cellCentred/operators/gaussGreenLaplacian.hpp" line="18" column="6" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/finiteVolume/cellCentred/operators/gaussGreenLaplacian.hpp" bodystart="18" bodyend="99"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1finiteVolume_1_1cellCentred_1ab8460c0f3bbfddebcd7f78e6e9e4f046" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NeoFOAM::finiteVolume::cellCentred::surfaceIntegrate</definition>
        <argsstring>(const Executor &amp;exec, size_t nInternalFaces, std::span&lt; const int &gt; neighbour, std::span&lt; const int &gt; owner, std::span&lt; const int &gt; faceCells, std::span&lt; const ValueType &gt; flux, std::span&lt; const scalar &gt; V, std::span&lt; ValueType &gt; res, const dsl::Coeff operatorScaling)</argsstring>
        <name>surfaceIntegrate</name>
        <qualifiedname>NeoFOAM::finiteVolume::cellCentred::surfaceIntegrate</qualifiedname>
        <param>
          <type>const <ref refid="namespaceNeoFOAM_1aaa4d35d275559f501cb6a1eec717c905" kindref="member">Executor</ref> &amp;</type>
          <declname>exec</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoFOAM_1aa8ea339f1c9a4f2232da876ead30a82c" kindref="member">size_t</ref></type>
          <declname>nInternalFaces</declname>
        </param>
        <param>
          <type>std::span&lt; const int &gt;</type>
          <declname>neighbour</declname>
        </param>
        <param>
          <type>std::span&lt; const int &gt;</type>
          <declname>owner</declname>
        </param>
        <param>
          <type>std::span&lt; const int &gt;</type>
          <declname>faceCells</declname>
        </param>
        <param>
          <type>std::span&lt; const ValueType &gt;</type>
          <declname>flux</declname>
        </param>
        <param>
          <type>std::span&lt; const <ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref> &gt;</type>
          <declname>V</declname>
        </param>
        <param>
          <type>std::span&lt; ValueType &gt;</type>
          <declname>res</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Coeff" kindref="compound">dsl::Coeff</ref></type>
          <declname>operatorScaling</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/finiteVolume/cellCentred/operators/surfaceIntegrate.hpp" line="18" column="6" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/finiteVolume/cellCentred/operators/surfaceIntegrate.hpp" bodystart="18" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1finiteVolume_1_1cellCentred_1ae4bc26dce4246ca723228af9e0b6fa8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::tuple&lt; <ref refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1VolumeField" kindref="compound">VolumeField</ref>&lt; <ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref> &gt;, <ref refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1VolumeField" kindref="compound">VolumeField</ref>&lt; <ref refid="classNeoFOAM_1_1Vector" kindref="compound">Vector</ref> &gt; &gt;</type>
        <definition>std::tuple&lt; VolumeField&lt; scalar &gt;, VolumeField&lt; Vector &gt; &gt; NeoFOAM::finiteVolume::cellCentred::discreteMomentumFields</definition>
        <argsstring>(const Expression&lt; Vector &gt; &amp;expr)</argsstring>
        <name>discreteMomentumFields</name>
        <qualifiedname>NeoFOAM::finiteVolume::cellCentred::discreteMomentumFields</qualifiedname>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">Expression</ref>&lt; <ref refid="classNeoFOAM_1_1Vector" kindref="compound">Vector</ref> &gt; &amp;</type>
          <declname>expr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/finiteVolume/cellCentred/pressureVelocityCoupling/pressureVelocityCoupling.hpp" line="16" column="1" declfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/finiteVolume/cellCentred/pressureVelocityCoupling/pressureVelocityCoupling.hpp" declline="16" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1finiteVolume_1_1cellCentred_1a770a1b7fcebdf011397adec0dce91a0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeoFOAM::finiteVolume::cellCentred::updateFaceVelocity</definition>
        <argsstring>(SurfaceField&lt; scalar &gt; phi, const SurfaceField&lt; scalar &gt; predictedPhi, const Expression&lt; scalar &gt; &amp;expr)</argsstring>
        <name>updateFaceVelocity</name>
        <qualifiedname>NeoFOAM::finiteVolume::cellCentred::updateFaceVelocity</qualifiedname>
        <param>
          <type><ref refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1SurfaceField" kindref="compound">SurfaceField</ref>&lt; <ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref> &gt;</type>
          <declname>phi</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1SurfaceField" kindref="compound">SurfaceField</ref>&lt; <ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref> &gt;</type>
          <declname>predictedPhi</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1Expression" kindref="compound">Expression</ref>&lt; <ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref> &gt; &amp;</type>
          <declname>expr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/finiteVolume/cellCentred/pressureVelocityCoupling/pressureVelocityCoupling.hpp" line="18" column="6" declfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/finiteVolume/cellCentred/pressureVelocityCoupling/pressureVelocityCoupling.hpp" declline="18" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1finiteVolume_1_1cellCentred_1af5074343b72a74284fbf32873d854394" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void NeoFOAM::finiteVolume::cellCentred::updateVelocity</definition>
        <argsstring>(VolumeField&lt; Vector &gt; &amp;U, const VolumeField&lt; Vector &gt; &amp;HbyA, VolumeField&lt; scalar &gt; &amp;rAU, VolumeField&lt; scalar &gt; &amp;p)</argsstring>
        <name>updateVelocity</name>
        <qualifiedname>NeoFOAM::finiteVolume::cellCentred::updateVelocity</qualifiedname>
        <param>
          <type><ref refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1VolumeField" kindref="compound">VolumeField</ref>&lt; <ref refid="classNeoFOAM_1_1Vector" kindref="compound">Vector</ref> &gt; &amp;</type>
          <declname>U</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1VolumeField" kindref="compound">VolumeField</ref>&lt; <ref refid="classNeoFOAM_1_1Vector" kindref="compound">Vector</ref> &gt; &amp;</type>
          <declname>HbyA</declname>
        </param>
        <param>
          <type><ref refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1VolumeField" kindref="compound">VolumeField</ref>&lt; <ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref> &gt; &amp;</type>
          <declname>rAU</declname>
        </param>
        <param>
          <type><ref refid="classNeoFOAM_1_1finiteVolume_1_1cellCentred_1_1VolumeField" kindref="compound">VolumeField</ref>&lt; <ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref> &gt; &amp;</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/finiteVolume/cellCentred/pressureVelocityCoupling/pressureVelocityCoupling.hpp" line="24" column="6" declfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/finiteVolume/cellCentred/pressureVelocityCoupling/pressureVelocityCoupling.hpp" declline="24" declcolumn="6"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/core/database/fieldCollection.hpp" line="15" column="1"/>
  </compounddef>
</doxygen>
