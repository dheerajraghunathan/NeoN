<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classNeoN_1_1BoundaryData" kind="class" language="C++" prot="public">
    <compoundname>NeoN::BoundaryData</compoundname>
    <includes refid="boundaryData_8hpp" local="no">boundaryData.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename T</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classNeoN_1_1BoundaryData_1a933bd942a557e26f683769ca72007d78" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref></type>
        <definition>Executor NeoN::BoundaryData&lt; T &gt;::exec_</definition>
        <argsstring></argsstring>
        <name>exec_</name>
        <qualifiedname>NeoN::BoundaryData::exec_</qualifiedname>
        <briefdescription>
<para>The executor on which the field is stored. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="141" column="14" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoN_1_1BoundaryData_1adbe1e12772a50c574a456c14b27721fe" prot="private" static="no" mutable="no">
        <type><ref refid="classNeoN_1_1Field" kindref="compound">NeoN::Field</ref>&lt; T &gt;</type>
        <definition>NeoN::Field&lt;T&gt; NeoN::BoundaryData&lt; T &gt;::value_</definition>
        <argsstring></argsstring>
        <name>value_</name>
        <qualifiedname>NeoN::BoundaryData::value_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The <ref refid="classNeoN_1_1Field" kindref="compound">Field</ref> storing the computed values from the boundary condition. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="142" column="17" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="142" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoN_1_1BoundaryData_1ae907dc52c3a0e1a76f4c8d6fd7666575" prot="private" static="no" mutable="no">
        <type><ref refid="classNeoN_1_1Field" kindref="compound">NeoN::Field</ref>&lt; T &gt;</type>
        <definition>NeoN::Field&lt;T&gt; NeoN::BoundaryData&lt; T &gt;::refValue_</definition>
        <argsstring></argsstring>
        <name>refValue_</name>
        <qualifiedname>NeoN::BoundaryData::refValue_</qualifiedname>
        <briefdescription>
<para>The <ref refid="classNeoN_1_1Field" kindref="compound">Field</ref> storing the Dirichlet boundary values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="144" column="17" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="144" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoN_1_1BoundaryData_1af561ab25382c51ba8d196e5578a5b2a5" prot="private" static="no" mutable="no">
        <type><ref refid="classNeoN_1_1Field" kindref="compound">NeoN::Field</ref>&lt; <ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref> &gt;</type>
        <definition>NeoN::Field&lt;scalar&gt; NeoN::BoundaryData&lt; T &gt;::valueFraction_</definition>
        <argsstring></argsstring>
        <name>valueFraction_</name>
        <qualifiedname>NeoN::BoundaryData::valueFraction_</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The <ref refid="classNeoN_1_1Field" kindref="compound">Field</ref> storing the fraction of the boundary value. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="145" column="17" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="145" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoN_1_1BoundaryData_1a8c502445371595d0ca5d1e65ca72b046" prot="private" static="no" mutable="no">
        <type><ref refid="classNeoN_1_1Field" kindref="compound">NeoN::Field</ref>&lt; T &gt;</type>
        <definition>NeoN::Field&lt;T&gt; NeoN::BoundaryData&lt; T &gt;::refGrad_</definition>
        <argsstring></argsstring>
        <name>refGrad_</name>
        <qualifiedname>NeoN::BoundaryData::refGrad_</qualifiedname>
        <briefdescription>
<para>The <ref refid="classNeoN_1_1Field" kindref="compound">Field</ref> storing the Neumann boundary values. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="147" column="17" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="147" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoN_1_1BoundaryData_1a24b0a63d8fa4b2907a8f62df570707a1" prot="private" static="no" mutable="no">
        <type><ref refid="classNeoN_1_1Field" kindref="compound">NeoN::Field</ref>&lt; int &gt;</type>
        <definition>NeoN::Field&lt;int&gt; NeoN::BoundaryData&lt; T &gt;::boundaryTypes_</definition>
        <argsstring></argsstring>
        <name>boundaryTypes_</name>
        <qualifiedname>NeoN::BoundaryData::boundaryTypes_</qualifiedname>
        <briefdescription>
<para>The <ref refid="classNeoN_1_1Field" kindref="compound">Field</ref> storing the boundary types. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="148" column="17" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoN_1_1BoundaryData_1a3e9516139e5d7fbbde10ba42fff08def" prot="private" static="no" mutable="no">
        <type><ref refid="classNeoN_1_1Field" kindref="compound">NeoN::Field</ref>&lt; <ref refid="namespaceNeoN_1af0b7553899fd421d905a302d61334be3" kindref="member">localIdx</ref> &gt;</type>
        <definition>NeoN::Field&lt;localIdx&gt; NeoN::BoundaryData&lt; T &gt;::offset_</definition>
        <argsstring></argsstring>
        <name>offset_</name>
        <qualifiedname>NeoN::BoundaryData::offset_</qualifiedname>
        <briefdescription>
<para>The <ref refid="classNeoN_1_1Field" kindref="compound">Field</ref> storing the offsets of each boundary. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="149" column="17" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="149" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoN_1_1BoundaryData_1a42eb8b522be719d7545018b7fb263b1e" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceNeoN_1a5ea7bf3a45fbcf9c6ee454474ab13c06" kindref="member">size_t</ref></type>
        <definition>size_t NeoN::BoundaryData&lt; T &gt;::nBoundaries_</definition>
        <argsstring></argsstring>
        <name>nBoundaries_</name>
        <qualifiedname>NeoN::BoundaryData::nBoundaries_</qualifiedname>
        <briefdescription>
<para>The number of boundaries. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="150" column="12" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="150" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoN_1_1BoundaryData_1a74c10387165ece7c884f86e661430b43" prot="private" static="no" mutable="no">
        <type><ref refid="namespaceNeoN_1a5ea7bf3a45fbcf9c6ee454474ab13c06" kindref="member">size_t</ref></type>
        <definition>size_t NeoN::BoundaryData&lt; T &gt;::nBoundaryFaces_</definition>
        <argsstring></argsstring>
        <name>nBoundaryFaces_</name>
        <qualifiedname>NeoN::BoundaryData::nBoundaryFaces_</qualifiedname>
        <briefdescription>
<para>The number of boundary faces. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="151" column="12" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="151" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classNeoN_1_1BoundaryData_1a101f3b65d6af8463caab01ee954b7692" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoN::BoundaryData&lt; T &gt;::BoundaryData</definition>
        <argsstring>(const BoundaryData&lt; T &gt; &amp;rhs)</argsstring>
        <name>BoundaryData</name>
        <qualifiedname>NeoN::BoundaryData::BoundaryData</qualifiedname>
        <param>
          <type>const <ref refid="classNeoN_1_1BoundaryData" kindref="compound">BoundaryData</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>The boundaryFields object to be copied. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="39" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="39" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1BoundaryData_1a511013efddae95937965d5c4c88983ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoN::BoundaryData&lt; T &gt;::BoundaryData</definition>
        <argsstring>(const Executor &amp;exec, const BoundaryData&lt; T &gt; &amp;rhs)</argsstring>
        <name>BoundaryData</name>
        <qualifiedname>NeoN::BoundaryData::BoundaryData</qualifiedname>
        <param>
          <type>const <ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref> &amp;</type>
          <declname>exec</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoN_1_1BoundaryData" kindref="compound">BoundaryData</ref>&lt; T &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para>The boundaryFields object to be copied. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="51" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="51" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1BoundaryData_1a7ddc0754967ebbf2f8ad82c82f58b1d4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoN::BoundaryData&lt; T &gt;::BoundaryData</definition>
        <argsstring>(const Executor &amp;exec, const std::vector&lt; localIdx &gt; &amp;offsets)</argsstring>
        <name>BoundaryData</name>
        <qualifiedname>NeoN::BoundaryData::BoundaryData</qualifiedname>
        <param>
          <type>const <ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref> &amp;</type>
          <declname>exec</declname>
        </param>
        <param>
          <type>const std::vector&lt; <ref refid="namespaceNeoN_1af0b7553899fd421d905a302d61334be3" kindref="member">localIdx</ref> &gt; &amp;</type>
          <declname>offsets</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="59" column="5" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="59" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1BoundaryData_1a424111956500529fc46fa509ed55fa35" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classNeoN_1_1Field" kindref="compound">NeoN::Field</ref>&lt; T &gt; &amp;</type>
        <definition>const NeoN::Field&lt; T &gt; &amp; NeoN::BoundaryData&lt; T &gt;::value</definition>
        <argsstring>() const</argsstring>
        <name>value</name>
        <qualifiedname>NeoN::BoundaryData::value</qualifiedname>
        <briefdescription>
<para>Get the view storing the computed values from the boundary condition.   </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The view storing the computed values.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="68" column="23" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="68" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1BoundaryData_1a161e3fb02641fd5cd553f1af55b56512" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoN_1_1Field" kindref="compound">NeoN::Field</ref>&lt; T &gt; &amp;</type>
        <definition>NeoN::Field&lt; T &gt; &amp; NeoN::BoundaryData&lt; T &gt;::value</definition>
        <argsstring>()</argsstring>
        <name>value</name>
        <qualifiedname>NeoN::BoundaryData::value</qualifiedname>
        <briefdescription>
<para>Get the view storing the computed values from the boundary condition. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The view storing the computed values. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="75" column="17" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="75" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1BoundaryData_1a9101667d0aa868501d67e9fec012be30" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classNeoN_1_1Field" kindref="compound">NeoN::Field</ref>&lt; T &gt; &amp;</type>
        <definition>const NeoN::Field&lt; T &gt; &amp; NeoN::BoundaryData&lt; T &gt;::refValue</definition>
        <argsstring>() const</argsstring>
        <name>refValue</name>
        <qualifiedname>NeoN::BoundaryData::refValue</qualifiedname>
        <briefdescription>
<para>Get the view storing the Dirichlet boundary values.   </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The view storing the Dirichlet boundary values.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="78" column="23" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1BoundaryData_1aa4311bf23b0332f8281cba19e4b606c0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoN_1_1Field" kindref="compound">NeoN::Field</ref>&lt; T &gt; &amp;</type>
        <definition>NeoN::Field&lt; T &gt; &amp; NeoN::BoundaryData&lt; T &gt;::refValue</definition>
        <argsstring>()</argsstring>
        <name>refValue</name>
        <qualifiedname>NeoN::BoundaryData::refValue</qualifiedname>
        <briefdescription>
<para>Get the view storing the Dirichlet boundary values. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The view storing the Dirichlet boundary values. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="84" column="17" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1BoundaryData_1ae1e11b9c755a250853b761cdcaa49293" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classNeoN_1_1Field" kindref="compound">NeoN::Field</ref>&lt; <ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref> &gt; &amp;</type>
        <definition>const NeoN::Field&lt; scalar &gt; &amp; NeoN::BoundaryData&lt; T &gt;::valueFraction</definition>
        <argsstring>() const</argsstring>
        <name>valueFraction</name>
        <qualifiedname>NeoN::BoundaryData::valueFraction</qualifiedname>
        <briefdescription>
<para>Get the view storing the fraction of the boundary value.   </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The view storing the fraction of the boundary value.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="87" column="23" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="87" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1BoundaryData_1af473d8f878aeb31d8bbd349c1bd5ebca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoN_1_1Field" kindref="compound">NeoN::Field</ref>&lt; <ref refid="namespaceNeoN_1a93c8d00d3aa9fc6f9271c4c0b4f0da97" kindref="member">scalar</ref> &gt; &amp;</type>
        <definition>NeoN::Field&lt; scalar &gt; &amp; NeoN::BoundaryData&lt; T &gt;::valueFraction</definition>
        <argsstring>()</argsstring>
        <name>valueFraction</name>
        <qualifiedname>NeoN::BoundaryData::valueFraction</qualifiedname>
        <briefdescription>
<para>Get the view storing the fraction of the boundary value. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The view storing the fraction of the boundary value. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="93" column="17" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="93" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1BoundaryData_1aab24d40fe08585b26338b98afd076d30" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classNeoN_1_1Field" kindref="compound">NeoN::Field</ref>&lt; T &gt; &amp;</type>
        <definition>const NeoN::Field&lt; T &gt; &amp; NeoN::BoundaryData&lt; T &gt;::refGrad</definition>
        <argsstring>() const</argsstring>
        <name>refGrad</name>
        <qualifiedname>NeoN::BoundaryData::refGrad</qualifiedname>
        <briefdescription>
<para>Get the view storing the Neumann boundary values.   </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The view storing the Neumann boundary values.   </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="96" column="23" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1BoundaryData_1a56cafdebee47382ac0600adc907d7f74" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoN_1_1Field" kindref="compound">NeoN::Field</ref>&lt; T &gt; &amp;</type>
        <definition>NeoN::Field&lt; T &gt; &amp; NeoN::BoundaryData&lt; T &gt;::refGrad</definition>
        <argsstring>()</argsstring>
        <name>refGrad</name>
        <qualifiedname>NeoN::BoundaryData::refGrad</qualifiedname>
        <briefdescription>
<para>Get the view storing the Neumann boundary values. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The view storing the Neumann boundary values. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="102" column="17" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="102" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1BoundaryData_1acfe28b723c5e10f2d1944794981965ff" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classNeoN_1_1Field" kindref="compound">NeoN::Field</ref>&lt; int &gt; &amp;</type>
        <definition>const NeoN::Field&lt; int &gt; &amp; NeoN::BoundaryData&lt; T &gt;::boundaryTypes</definition>
        <argsstring>() const</argsstring>
        <name>boundaryTypes</name>
        <qualifiedname>NeoN::BoundaryData::boundaryTypes</qualifiedname>
        <briefdescription>
<para>Get the view storing the boundary types. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The view storing the boundary types. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="108" column="23" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="108" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1BoundaryData_1a3b1f9164a182f1edc8251654f01ecf63" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classNeoN_1_1Field" kindref="compound">NeoN::Field</ref>&lt; <ref refid="namespaceNeoN_1af0b7553899fd421d905a302d61334be3" kindref="member">localIdx</ref> &gt; &amp;</type>
        <definition>const NeoN::Field&lt; localIdx &gt; &amp; NeoN::BoundaryData&lt; T &gt;::offset</definition>
        <argsstring>() const</argsstring>
        <name>offset</name>
        <qualifiedname>NeoN::BoundaryData::offset</qualifiedname>
        <briefdescription>
<para>Get the view storing the offsets of each boundary. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The view storing the offsets of each boundary. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="114" column="23" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="114" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1BoundaryData_1a6c0923b1fb85dc2d018751e2885d2fea" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceNeoN_1a5ea7bf3a45fbcf9c6ee454474ab13c06" kindref="member">size_t</ref></type>
        <definition>size_t NeoN::BoundaryData&lt; T &gt;::nBoundaries</definition>
        <argsstring>() const</argsstring>
        <name>nBoundaries</name>
        <qualifiedname>NeoN::BoundaryData::nBoundaries</qualifiedname>
        <briefdescription>
<para>Get the number of boundaries. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of boundaries. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="120" column="12" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="120" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1BoundaryData_1a8b44b1974e976b28107286299a9e0d7a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespaceNeoN_1a5ea7bf3a45fbcf9c6ee454474ab13c06" kindref="member">size_t</ref></type>
        <definition>size_t NeoN::BoundaryData&lt; T &gt;::nBoundaryFaces</definition>
        <argsstring>() const</argsstring>
        <name>nBoundaryFaces</name>
        <qualifiedname>NeoN::BoundaryData::nBoundaryFaces</qualifiedname>
        <briefdescription>
<para>Get the number of boundary faces. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of boundary faces. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="126" column="12" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="126" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1BoundaryData_1aa90fa38463e69059c9c8ad7b717d73cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespaceNeoN_1a84c514269c3ade9cf4103acb1210a65f" kindref="member">Executor</ref> &amp;</type>
        <definition>const Executor &amp; NeoN::BoundaryData&lt; T &gt;::exec</definition>
        <argsstring>()</argsstring>
        <name>exec</name>
        <qualifiedname>NeoN::BoundaryData::exec</qualifiedname>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="128" column="20" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="128" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classNeoN_1_1BoundaryData_1a4611b34b97e77105f477f52beb1c621d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::pair&lt; <ref refid="namespaceNeoN_1af0b7553899fd421d905a302d61334be3" kindref="member">localIdx</ref>, <ref refid="namespaceNeoN_1af0b7553899fd421d905a302d61334be3" kindref="member">localIdx</ref> &gt;</type>
        <definition>std::pair&lt; localIdx, localIdx &gt; NeoN::BoundaryData&lt; T &gt;::range</definition>
        <argsstring>(localIdx patchId) const</argsstring>
        <name>range</name>
        <qualifiedname>NeoN::BoundaryData::range</qualifiedname>
        <param>
          <type><ref refid="namespaceNeoN_1af0b7553899fd421d905a302d61334be3" kindref="member">localIdx</ref></type>
          <declname>patchId</declname>
        </param>
        <briefdescription>
<para>Get the range for a given patchId. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The number of boundary faces. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="134" column="15" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="134" bodyend="137"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Represents the boundary fields for a computational domain. </para>
    </briefdescription>
    <detaileddescription>
<para>The <ref refid="classNeoN_1_1BoundaryData" kindref="compound">BoundaryData</ref> class stores the boundary conditions and related information for a computational domain. It provides access to the computed values, reference values, value fractions, reference gradients, boundary types, offsets, and the number of boundaries and boundary faces.</para>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ValueType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the underlying field values </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" line="30" column="1" bodyfile="/home/runner/work/NeoN/NeoN/include/NeoN/fields/boundaryData.hpp" bodystart="31" bodyend="152"/>
    <listofallmembers>
      <member refid="classNeoN_1_1BoundaryData_1a101f3b65d6af8463caab01ee954b7692" prot="public" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>BoundaryData</name></member>
      <member refid="classNeoN_1_1BoundaryData_1a511013efddae95937965d5c4c88983ec" prot="public" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>BoundaryData</name></member>
      <member refid="classNeoN_1_1BoundaryData_1a7ddc0754967ebbf2f8ad82c82f58b1d4" prot="public" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>BoundaryData</name></member>
      <member refid="classNeoN_1_1BoundaryData_1acfe28b723c5e10f2d1944794981965ff" prot="public" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>boundaryTypes</name></member>
      <member refid="classNeoN_1_1BoundaryData_1a24b0a63d8fa4b2907a8f62df570707a1" prot="private" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>boundaryTypes_</name></member>
      <member refid="classNeoN_1_1BoundaryData_1aa90fa38463e69059c9c8ad7b717d73cf" prot="public" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>exec</name></member>
      <member refid="classNeoN_1_1BoundaryData_1a933bd942a557e26f683769ca72007d78" prot="private" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>exec_</name></member>
      <member refid="classNeoN_1_1BoundaryData_1a6c0923b1fb85dc2d018751e2885d2fea" prot="public" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>nBoundaries</name></member>
      <member refid="classNeoN_1_1BoundaryData_1a42eb8b522be719d7545018b7fb263b1e" prot="private" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>nBoundaries_</name></member>
      <member refid="classNeoN_1_1BoundaryData_1a8b44b1974e976b28107286299a9e0d7a" prot="public" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>nBoundaryFaces</name></member>
      <member refid="classNeoN_1_1BoundaryData_1a74c10387165ece7c884f86e661430b43" prot="private" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>nBoundaryFaces_</name></member>
      <member refid="classNeoN_1_1BoundaryData_1a3b1f9164a182f1edc8251654f01ecf63" prot="public" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>offset</name></member>
      <member refid="classNeoN_1_1BoundaryData_1a3e9516139e5d7fbbde10ba42fff08def" prot="private" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>offset_</name></member>
      <member refid="classNeoN_1_1BoundaryData_1a4611b34b97e77105f477f52beb1c621d" prot="public" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>range</name></member>
      <member refid="classNeoN_1_1BoundaryData_1aab24d40fe08585b26338b98afd076d30" prot="public" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>refGrad</name></member>
      <member refid="classNeoN_1_1BoundaryData_1a56cafdebee47382ac0600adc907d7f74" prot="public" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>refGrad</name></member>
      <member refid="classNeoN_1_1BoundaryData_1a8c502445371595d0ca5d1e65ca72b046" prot="private" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>refGrad_</name></member>
      <member refid="classNeoN_1_1BoundaryData_1a9101667d0aa868501d67e9fec012be30" prot="public" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>refValue</name></member>
      <member refid="classNeoN_1_1BoundaryData_1aa4311bf23b0332f8281cba19e4b606c0" prot="public" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>refValue</name></member>
      <member refid="classNeoN_1_1BoundaryData_1ae907dc52c3a0e1a76f4c8d6fd7666575" prot="private" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>refValue_</name></member>
      <member refid="classNeoN_1_1BoundaryData_1a424111956500529fc46fa509ed55fa35" prot="public" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>value</name></member>
      <member refid="classNeoN_1_1BoundaryData_1a161e3fb02641fd5cd553f1af55b56512" prot="public" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>value</name></member>
      <member refid="classNeoN_1_1BoundaryData_1adbe1e12772a50c574a456c14b27721fe" prot="private" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>value_</name></member>
      <member refid="classNeoN_1_1BoundaryData_1ae1e11b9c755a250853b761cdcaa49293" prot="public" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>valueFraction</name></member>
      <member refid="classNeoN_1_1BoundaryData_1af473d8f878aeb31d8bbd349c1bd5ebca" prot="public" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>valueFraction</name></member>
      <member refid="classNeoN_1_1BoundaryData_1af561ab25382c51ba8d196e5578a5b2a5" prot="private" virt="non-virtual"><scope>NeoN::BoundaryData</scope><name>valueFraction_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
