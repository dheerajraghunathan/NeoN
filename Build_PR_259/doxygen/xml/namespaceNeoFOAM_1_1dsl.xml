<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="namespaceNeoFOAM_1_1dsl" kind="namespace" language="C++">
    <compoundname>NeoFOAM::dsl</compoundname>
    <innerclass refid="classNeoFOAM_1_1dsl_1_1Coeff" prot="public">NeoFOAM::dsl::Coeff</innerclass>
    <innerclass refid="classNeoFOAM_1_1dsl_1_1Expression" prot="public">NeoFOAM::dsl::Expression</innerclass>
    <innerclass refid="classNeoFOAM_1_1dsl_1_1OperatorMixin" prot="public">NeoFOAM::dsl::OperatorMixin</innerclass>
    <innerclass refid="classNeoFOAM_1_1dsl_1_1SpatialOperator" prot="public">NeoFOAM::dsl::SpatialOperator</innerclass>
    <innerclass refid="classNeoFOAM_1_1dsl_1_1TemporalOperator" prot="public">NeoFOAM::dsl::TemporalOperator</innerclass>
    <innernamespace refid="namespaceNeoFOAM_1_1dsl_1_1detail">NeoFOAM::dsl::detail</innernamespace>
    <innernamespace refid="namespaceNeoFOAM_1_1dsl_1_1exp">NeoFOAM::dsl::exp</innernamespace>
    <innernamespace refid="namespaceNeoFOAM_1_1dsl_1_1imp">NeoFOAM::dsl::imp</innernamespace>
    <innernamespace refid="namespaceNeoFOAM_1_1dsl_1_1temporal">NeoFOAM::dsl::temporal</innernamespace>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1afe10f51285498b6fc5aa951ba8df8ca6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1dsl_1_1Coeff" kindref="compound">Coeff</ref></type>
        <definition>Coeff NeoFOAM::dsl::operator*</definition>
        <argsstring>(const Coeff &amp;lhs, const Coeff &amp;rhs)</argsstring>
        <name>operator*</name>
        <qualifiedname>NeoFOAM::dsl::operator*</qualifiedname>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Coeff" kindref="compound">Coeff</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Coeff" kindref="compound">Coeff</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/coeff.hpp" line="57" column="15" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/coeff.hpp" bodystart="57" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1ac9c92e76ba5b1f41f35e04c1f240e01b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref></type>
        <definition>Expression NeoFOAM::dsl::operator+</definition>
        <argsstring>(Expression lhs, const Expression &amp;rhs)</argsstring>
        <name>operator+</name>
        <qualifiedname>NeoFOAM::dsl::operator+</qualifiedname>
        <param>
          <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="131" column="20" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="131" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1af6acfb7a1f08e743ba2818b55f376db5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref></type>
        <definition>Expression NeoFOAM::dsl::operator+</definition>
        <argsstring>(Expression lhs, const SpatialOperator &amp;rhs)</argsstring>
        <name>operator+</name>
        <qualifiedname>NeoFOAM::dsl::operator+</qualifiedname>
        <param>
          <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1SpatialOperator" kindref="compound">SpatialOperator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="137" column="20" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="137" bodyend="141"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1a4c6508505524b51c2f78170b7927e20d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename leftOperator</type>
          </param>
          <param>
            <type>typename rightOperator</type>
          </param>
        </templateparamlist>
        <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref></type>
        <definition>Expression NeoFOAM::dsl::operator+</definition>
        <argsstring>(leftOperator lhs, rightOperator rhs)</argsstring>
        <name>operator+</name>
        <qualifiedname>NeoFOAM::dsl::operator+</qualifiedname>
        <param>
          <type>leftOperator</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>rightOperator</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="144" column="20" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="144" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1ab64f450db34e06006dc875fd86135f34" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref></type>
        <definition>Expression NeoFOAM::dsl::operator+</definition>
        <argsstring>(const SpatialOperator &amp;lhs, const SpatialOperator &amp;rhs)</argsstring>
        <name>operator+</name>
        <qualifiedname>NeoFOAM::dsl::operator+</qualifiedname>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1SpatialOperator" kindref="compound">SpatialOperator</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1SpatialOperator" kindref="compound">SpatialOperator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="152" column="20" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="152" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1a5ea73088dd494171b80cdad32fefee92" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref></type>
        <definition>Expression NeoFOAM::dsl::operator*</definition>
        <argsstring>(scalar scale, const Expression &amp;es)</argsstring>
        <name>operator*</name>
        <qualifiedname>NeoFOAM::dsl::operator*</qualifiedname>
        <param>
          <type><ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref></type>
          <declname>scale</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref> &amp;</type>
          <declname>es</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="160" column="20" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="160" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1afc428714f57df9a1de192a6c6af1c47c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref></type>
        <definition>Expression NeoFOAM::dsl::operator-</definition>
        <argsstring>(Expression lhs, const Expression &amp;rhs)</argsstring>
        <name>operator-</name>
        <qualifiedname>NeoFOAM::dsl::operator-</qualifiedname>
        <param>
          <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="174" column="20" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="174" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1a2fcbb856b56ec2eeb88cbb680b03bf5c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref></type>
        <definition>Expression NeoFOAM::dsl::operator-</definition>
        <argsstring>(Expression lhs, const SpatialOperator &amp;rhs)</argsstring>
        <name>operator-</name>
        <qualifiedname>NeoFOAM::dsl::operator-</qualifiedname>
        <param>
          <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1SpatialOperator" kindref="compound">SpatialOperator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="180" column="20" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="180" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1a85b0203715101eca67387938c5cdafc4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref></type>
        <definition>Expression NeoFOAM::dsl::operator-</definition>
        <argsstring>(const SpatialOperator &amp;lhs, const SpatialOperator &amp;rhs)</argsstring>
        <name>operator-</name>
        <qualifiedname>NeoFOAM::dsl::operator-</qualifiedname>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1SpatialOperator" kindref="compound">SpatialOperator</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1SpatialOperator" kindref="compound">SpatialOperator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="186" column="20" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="186" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1ab6f9d17b731837c98b46a99e305c66cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FieldType</type>
          </param>
        </templateparamlist>
        <type><ref refid="classNeoFOAM_1_1la_1_1LinearSystem" kindref="compound">NeoFOAM::la::LinearSystem</ref>&lt; typename FieldType::ElementType, int &gt;</type>
        <definition>NeoFOAM::la::LinearSystem&lt; typename FieldType::ElementType, int &gt; NeoFOAM::dsl::ginkgoMatrix</definition>
        <argsstring>(Expression &amp;exp, FieldType &amp;solution)</argsstring>
        <name>ginkgoMatrix</name>
        <qualifiedname>NeoFOAM::dsl::ginkgoMatrix</qualifiedname>
        <param>
          <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref> &amp;</type>
          <declname>exp</declname>
        </param>
        <param>
          <type>FieldType &amp;</type>
          <declname>solution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/solver.hpp" line="25" column="1" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/solver.hpp" bodystart="25" bodyend="66"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1a9a6f044ece388893b4d20b1e3e620ca5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FieldType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NeoFOAM::dsl::solve</definition>
        <argsstring>(Expression &amp;exp, FieldType &amp;solution, scalar t, scalar dt, const Dictionary &amp;fvSchemes, const Dictionary &amp;fvSolution)</argsstring>
        <name>solve</name>
        <qualifiedname>NeoFOAM::dsl::solve</qualifiedname>
        <param>
          <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref> &amp;</type>
          <declname>exp</declname>
        </param>
        <param>
          <type>FieldType &amp;</type>
          <declname>solution</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref></type>
          <declname>dt</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1Dictionary" kindref="compound">Dictionary</ref> &amp;</type>
          <declname>fvSchemes</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1Dictionary" kindref="compound">Dictionary</ref> &amp;</type>
          <declname>fvSolution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/solver.hpp" line="78" column="6" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/solver.hpp" bodystart="78" bodyend="109"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1a5e9507e4b5c787b2c9faf9c998e40036" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1dsl_1_1SpatialOperator" kindref="compound">SpatialOperator</ref></type>
        <definition>SpatialOperator NeoFOAM::dsl::operator*</definition>
        <argsstring>(scalar scalarCoeff, SpatialOperator rhs)</argsstring>
        <name>operator*</name>
        <qualifiedname>NeoFOAM::dsl::operator*</qualifiedname>
        <param>
          <type><ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref></type>
          <declname>scalarCoeff</declname>
        </param>
        <param>
          <type><ref refid="classNeoFOAM_1_1dsl_1_1SpatialOperator" kindref="compound">SpatialOperator</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/spatialOperator.hpp" line="201" column="17" declfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/spatialOperator.hpp" declline="201" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1a3c8dbae56616116313bfbe0a2e859069" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1dsl_1_1SpatialOperator" kindref="compound">SpatialOperator</ref></type>
        <definition>SpatialOperator NeoFOAM::dsl::operator*</definition>
        <argsstring>(const Field&lt; scalar &gt; &amp;coeffField, SpatialOperator rhs)</argsstring>
        <name>operator*</name>
        <qualifiedname>NeoFOAM::dsl::operator*</qualifiedname>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1Field" kindref="compound">Field</ref>&lt; <ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref> &gt; &amp;</type>
          <declname>coeffField</declname>
        </param>
        <param>
          <type><ref refid="classNeoFOAM_1_1dsl_1_1SpatialOperator" kindref="compound">SpatialOperator</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/spatialOperator.hpp" line="203" column="17" declfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/spatialOperator.hpp" declline="203" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1aab1668c4f5f59538f9e81c8c2b345bb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1dsl_1_1SpatialOperator" kindref="compound">SpatialOperator</ref></type>
        <definition>SpatialOperator NeoFOAM::dsl::operator*</definition>
        <argsstring>(const Coeff &amp;coeff, SpatialOperator rhs)</argsstring>
        <name>operator*</name>
        <qualifiedname>NeoFOAM::dsl::operator*</qualifiedname>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Coeff" kindref="compound">Coeff</ref> &amp;</type>
          <declname>coeff</declname>
        </param>
        <param>
          <type><ref refid="classNeoFOAM_1_1dsl_1_1SpatialOperator" kindref="compound">SpatialOperator</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/spatialOperator.hpp" line="205" column="17" declfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/spatialOperator.hpp" declline="205" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1a142e51ab9f336fca119ebc7c429fabbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CoeffFunction</type>
          </param>
        </templateparamlist>
        <type><ref refid="classNeoFOAM_1_1dsl_1_1SpatialOperator" kindref="compound">SpatialOperator</ref></type>
        <definition>SpatialOperator NeoFOAM::dsl::operator*</definition>
        <argsstring>(CoeffFunction coeffFunc, const SpatialOperator &amp;lhs)</argsstring>
        <name>operator*</name>
        <qualifiedname>NeoFOAM::dsl::operator*</qualifiedname>
        <param>
          <type>CoeffFunction</type>
          <declname>coeffFunc</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1SpatialOperator" kindref="compound">SpatialOperator</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
    <requiresclause>std::invocable&lt;CoeffFunction&amp;, size_t&gt;    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/spatialOperator.hpp" line="209" column="17" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/spatialOperator.hpp" bodystart="209" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1adcb59b911ac6c9302238295647235720" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1dsl_1_1TemporalOperator" kindref="compound">TemporalOperator</ref></type>
        <definition>TemporalOperator NeoFOAM::dsl::operator*</definition>
        <argsstring>(scalar scalarCoeff, TemporalOperator rhs)</argsstring>
        <name>operator*</name>
        <qualifiedname>NeoFOAM::dsl::operator*</qualifiedname>
        <param>
          <type><ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref></type>
          <declname>scalarCoeff</declname>
        </param>
        <param>
          <type><ref refid="classNeoFOAM_1_1dsl_1_1TemporalOperator" kindref="compound">TemporalOperator</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/temporalOperator.hpp" line="209" column="18" declfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/temporalOperator.hpp" declline="209" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1a70ac893c5b6f528246d30ad5040279b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1dsl_1_1TemporalOperator" kindref="compound">TemporalOperator</ref></type>
        <definition>TemporalOperator NeoFOAM::dsl::operator*</definition>
        <argsstring>(const Field&lt; scalar &gt; &amp;coeffField, TemporalOperator rhs)</argsstring>
        <name>operator*</name>
        <qualifiedname>NeoFOAM::dsl::operator*</qualifiedname>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1Field" kindref="compound">Field</ref>&lt; <ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref> &gt; &amp;</type>
          <declname>coeffField</declname>
        </param>
        <param>
          <type><ref refid="classNeoFOAM_1_1dsl_1_1TemporalOperator" kindref="compound">TemporalOperator</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/temporalOperator.hpp" line="211" column="18" declfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/temporalOperator.hpp" declline="211" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1a0bf470101f198ef9ee47bcdbb8f98646" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1dsl_1_1TemporalOperator" kindref="compound">TemporalOperator</ref></type>
        <definition>TemporalOperator NeoFOAM::dsl::operator*</definition>
        <argsstring>(const Coeff &amp;coeff, TemporalOperator rhs)</argsstring>
        <name>operator*</name>
        <qualifiedname>NeoFOAM::dsl::operator*</qualifiedname>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Coeff" kindref="compound">Coeff</ref> &amp;</type>
          <declname>coeff</declname>
        </param>
        <param>
          <type><ref refid="classNeoFOAM_1_1dsl_1_1TemporalOperator" kindref="compound">TemporalOperator</ref></type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/temporalOperator.hpp" line="213" column="18" declfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/temporalOperator.hpp" declline="213" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1af354a70f0cfcd3a256f28b7d213025c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CoeffFunction</type>
          </param>
        </templateparamlist>
        <type><ref refid="classNeoFOAM_1_1dsl_1_1TemporalOperator" kindref="compound">TemporalOperator</ref></type>
        <definition>TemporalOperator NeoFOAM::dsl::operator*</definition>
        <argsstring>(CoeffFunction coeffFunc, const TemporalOperator &amp;lhs)</argsstring>
        <name>operator*</name>
        <qualifiedname>NeoFOAM::dsl::operator*</qualifiedname>
        <param>
          <type>CoeffFunction</type>
          <declname>coeffFunc</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1TemporalOperator" kindref="compound">TemporalOperator</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
    <requiresclause>std::invocable&lt;CoeffFunction&amp;, size_t&gt;    </requiresclause>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/temporalOperator.hpp" line="217" column="18" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/temporalOperator.hpp" bodystart="217" bodyend="228"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/coeff.hpp" line="8" column="1"/>
  </compounddef>
</doxygen>
