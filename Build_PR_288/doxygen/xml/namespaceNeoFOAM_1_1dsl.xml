<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="namespaceNeoFOAM_1_1dsl" kind="namespace" language="C++">
    <compoundname>NeoFOAM::dsl</compoundname>
    <innerclass refid="classNeoFOAM_1_1dsl_1_1Coeff" prot="public">NeoFOAM::dsl::Coeff</innerclass>
    <innerclass refid="classNeoFOAM_1_1dsl_1_1Expression" prot="public">NeoFOAM::dsl::Expression</innerclass>
    <innerclass refid="classNeoFOAM_1_1dsl_1_1Operator" prot="public">NeoFOAM::dsl::Operator</innerclass>
    <innerclass refid="classNeoFOAM_1_1dsl_1_1OperatorMixin" prot="public">NeoFOAM::dsl::OperatorMixin</innerclass>
    <innerclass refid="classNeoFOAM_1_1dsl_1_1SpatialOperator" prot="public">NeoFOAM::dsl::SpatialOperator</innerclass>
    <innerclass refid="classNeoFOAM_1_1dsl_1_1TemporalOperator" prot="public">NeoFOAM::dsl::TemporalOperator</innerclass>
    <innernamespace refid="namespaceNeoFOAM_1_1dsl_1_1detail">NeoFOAM::dsl::detail</innernamespace>
    <innernamespace refid="namespaceNeoFOAM_1_1dsl_1_1exp">NeoFOAM::dsl::exp</innernamespace>
    <innernamespace refid="namespaceNeoFOAM_1_1dsl_1_1imp">NeoFOAM::dsl::imp</innernamespace>
    <innernamespace refid="namespaceNeoFOAM_1_1dsl_1_1temporal">NeoFOAM::dsl::temporal</innernamespace>
    <sectiondef kind="func">
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1afe10f51285498b6fc5aa951ba8df8ca6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1dsl_1_1Coeff" kindref="compound">Coeff</ref></type>
        <definition>Coeff NeoFOAM::dsl::operator*</definition>
        <argsstring>(const Coeff &amp;lhs, const Coeff &amp;rhs)</argsstring>
        <name>operator*</name>
        <qualifiedname>NeoFOAM::dsl::operator*</qualifiedname>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Coeff" kindref="compound">Coeff</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Coeff" kindref="compound">Coeff</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/coeff.hpp" line="57" column="15" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/coeff.hpp" bodystart="57" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1a0ddfbee457dcdad260750014aa9aacdb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref>&lt; ValueType &gt;</type>
        <definition>Expression&lt; ValueType &gt; NeoFOAM::dsl::operator+</definition>
        <argsstring>(Expression&lt; ValueType &gt; lhs, const Expression&lt; ValueType &gt; &amp;rhs)</argsstring>
        <name>operator+</name>
        <qualifiedname>NeoFOAM::dsl::operator+</qualifiedname>
        <param>
          <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref>&lt; ValueType &gt;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref>&lt; ValueType &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="154" column="1" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="154" bodyend="158"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1ab7d68cdd508074d25a5c4c3fa1187865" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref>&lt; ValueType &gt;</type>
        <definition>Expression&lt; ValueType &gt; NeoFOAM::dsl::operator+</definition>
        <argsstring>(Expression&lt; ValueType &gt; lhs, const SpatialOperator&lt; ValueType &gt; &amp;rhs)</argsstring>
        <name>operator+</name>
        <qualifiedname>NeoFOAM::dsl::operator+</qualifiedname>
        <param>
          <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref>&lt; ValueType &gt;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1SpatialOperator" kindref="compound">SpatialOperator</ref>&lt; ValueType &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="162" column="1" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="162" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1a05ffb835e8ba37f5b172db215af07212" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename leftOperator</type>
          </param>
          <param>
            <type>typename rightOperator</type>
          </param>
        </templateparamlist>
        <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref>&lt; typename leftOperator::FieldValueType &gt;</type>
        <definition>Expression&lt; typename leftOperator::FieldValueType &gt; NeoFOAM::dsl::operator+</definition>
        <argsstring>(leftOperator lhs, rightOperator rhs)</argsstring>
        <name>operator+</name>
        <qualifiedname>NeoFOAM::dsl::operator+</qualifiedname>
        <param>
          <type>leftOperator</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>rightOperator</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="170" column="1" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="170" bodyend="177"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1aa55b44b0b7bd682591bf02926c7301a5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref>&lt; ValueType &gt;</type>
        <definition>Expression&lt; ValueType &gt; NeoFOAM::dsl::operator*</definition>
        <argsstring>(scalar scale, const Expression&lt; ValueType &gt; &amp;es)</argsstring>
        <name>operator*</name>
        <qualifiedname>NeoFOAM::dsl::operator*</qualifiedname>
        <param>
          <type><ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref></type>
          <declname>scale</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref>&lt; ValueType &gt; &amp;</type>
          <declname>es</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="188" column="20" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="188" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1ab137250c46c985b2dc960351d353d4b3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref>&lt; ValueType &gt;</type>
        <definition>Expression&lt; ValueType &gt; NeoFOAM::dsl::operator-</definition>
        <argsstring>(Expression&lt; ValueType &gt; lhs, const Expression&lt; ValueType &gt; &amp;rhs)</argsstring>
        <name>operator-</name>
        <qualifiedname>NeoFOAM::dsl::operator-</qualifiedname>
        <param>
          <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref>&lt; ValueType &gt;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref>&lt; ValueType &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="205" column="1" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="205" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1aa61b24095e87740b5061be69e1eeb2d5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref>&lt; ValueType &gt;</type>
        <definition>Expression&lt; ValueType &gt; NeoFOAM::dsl::operator-</definition>
        <argsstring>(Expression&lt; ValueType &gt; lhs, const SpatialOperator&lt; ValueType &gt; &amp;rhs)</argsstring>
        <name>operator-</name>
        <qualifiedname>NeoFOAM::dsl::operator-</qualifiedname>
        <param>
          <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref>&lt; ValueType &gt;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1SpatialOperator" kindref="compound">SpatialOperator</ref>&lt; ValueType &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="213" column="1" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="213" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1aba195b30e708087566101cc23ef8b6bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename leftOperator</type>
          </param>
          <param>
            <type>typename rightOperator</type>
          </param>
        </templateparamlist>
        <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref>&lt; typename leftOperator::FieldValueType &gt;</type>
        <definition>Expression&lt; typename leftOperator::FieldValueType &gt; NeoFOAM::dsl::operator-</definition>
        <argsstring>(leftOperator lhs, rightOperator rhs)</argsstring>
        <name>operator-</name>
        <qualifiedname>NeoFOAM::dsl::operator-</qualifiedname>
        <param>
          <type>leftOperator</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>rightOperator</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="221" column="1" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="221" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1a1467d00fc38873e99ff95a8214022c79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FieldType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NeoFOAM::dsl::solve</definition>
        <argsstring>(Expression&lt; typename FieldType::ElementType &gt; &amp;exp, FieldType &amp;solution, scalar t, scalar dt, const Dictionary &amp;fvSchemes, const Dictionary &amp;fvSolution)</argsstring>
        <name>solve</name>
        <qualifiedname>NeoFOAM::dsl::solve</qualifiedname>
        <param>
          <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref>&lt; typename FieldType::ElementType &gt; &amp;</type>
          <declname>exp</declname>
        </param>
        <param>
          <type>FieldType &amp;</type>
          <declname>solution</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref></type>
          <declname>t</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref></type>
          <declname>dt</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1Dictionary" kindref="compound">Dictionary</ref> &amp;</type>
          <declname>fvSchemes</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1Dictionary" kindref="compound">Dictionary</ref> &amp;</type>
          <declname>fvSolution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/solver.hpp" line="40" column="6" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/solver.hpp" bodystart="40" bodyend="89"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1a2bf1af7e185a5fd0a3a62abd349e854a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type><ref refid="classNeoFOAM_1_1dsl_1_1SpatialOperator" kindref="compound">SpatialOperator</ref>&lt; ValueType &gt;</type>
        <definition>SpatialOperator&lt; ValueType &gt; NeoFOAM::dsl::operator*</definition>
        <argsstring>(scalar scalarCoeff, SpatialOperator&lt; ValueType &gt; rhs)</argsstring>
        <name>operator*</name>
        <qualifiedname>NeoFOAM::dsl::operator*</qualifiedname>
        <param>
          <type><ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref></type>
          <declname>scalarCoeff</declname>
        </param>
        <param>
          <type><ref refid="classNeoFOAM_1_1dsl_1_1SpatialOperator" kindref="compound">SpatialOperator</ref>&lt; ValueType &gt;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/spatialOperator.hpp" line="188" column="17" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/spatialOperator.hpp" bodystart="188" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1a704dc5ee007614c19c8d87c53d644675" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type><ref refid="classNeoFOAM_1_1dsl_1_1SpatialOperator" kindref="compound">SpatialOperator</ref>&lt; ValueType &gt;</type>
        <definition>SpatialOperator&lt; ValueType &gt; NeoFOAM::dsl::operator*</definition>
        <argsstring>(const Field&lt; scalar &gt; &amp;coeffField, SpatialOperator&lt; ValueType &gt; rhs)</argsstring>
        <name>operator*</name>
        <qualifiedname>NeoFOAM::dsl::operator*</qualifiedname>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1Field" kindref="compound">Field</ref>&lt; <ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref> &gt; &amp;</type>
          <declname>coeffField</declname>
        </param>
        <param>
          <type><ref refid="classNeoFOAM_1_1dsl_1_1SpatialOperator" kindref="compound">SpatialOperator</ref>&lt; ValueType &gt;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/spatialOperator.hpp" line="197" column="1" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/spatialOperator.hpp" bodystart="197" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1ad4636ae808977461b9cf049337989164" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type><ref refid="classNeoFOAM_1_1dsl_1_1SpatialOperator" kindref="compound">SpatialOperator</ref>&lt; ValueType &gt;</type>
        <definition>SpatialOperator&lt; ValueType &gt; NeoFOAM::dsl::operator*</definition>
        <argsstring>(const Coeff &amp;coeff, SpatialOperator&lt; ValueType &gt; rhs)</argsstring>
        <name>operator*</name>
        <qualifiedname>NeoFOAM::dsl::operator*</qualifiedname>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Coeff" kindref="compound">Coeff</ref> &amp;</type>
          <declname>coeff</declname>
        </param>
        <param>
          <type><ref refid="classNeoFOAM_1_1dsl_1_1SpatialOperator" kindref="compound">SpatialOperator</ref>&lt; ValueType &gt;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/spatialOperator.hpp" line="205" column="17" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/spatialOperator.hpp" bodystart="205" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1a2e96aa106e88e32bc3db933ab65d38a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type><ref refid="classNeoFOAM_1_1dsl_1_1TemporalOperator" kindref="compound">TemporalOperator</ref>&lt; ValueType &gt;</type>
        <definition>TemporalOperator&lt; ValueType &gt; NeoFOAM::dsl::operator*</definition>
        <argsstring>(scalar scalarCoeff, TemporalOperator&lt; ValueType &gt; rhs)</argsstring>
        <name>operator*</name>
        <qualifiedname>NeoFOAM::dsl::operator*</qualifiedname>
        <param>
          <type><ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref></type>
          <declname>scalarCoeff</declname>
        </param>
        <param>
          <type><ref refid="classNeoFOAM_1_1dsl_1_1TemporalOperator" kindref="compound">TemporalOperator</ref>&lt; ValueType &gt;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/temporalOperator.hpp" line="220" column="18" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/temporalOperator.hpp" bodystart="220" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1a593f9cc8c713bdfd70001e4821246b3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type><ref refid="classNeoFOAM_1_1dsl_1_1TemporalOperator" kindref="compound">TemporalOperator</ref>&lt; ValueType &gt;</type>
        <definition>TemporalOperator&lt; ValueType &gt; NeoFOAM::dsl::operator*</definition>
        <argsstring>(const Field&lt; scalar &gt; &amp;coeffField, TemporalOperator&lt; ValueType &gt; rhs)</argsstring>
        <name>operator*</name>
        <qualifiedname>NeoFOAM::dsl::operator*</qualifiedname>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1Field" kindref="compound">Field</ref>&lt; <ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref> &gt; &amp;</type>
          <declname>coeffField</declname>
        </param>
        <param>
          <type><ref refid="classNeoFOAM_1_1dsl_1_1TemporalOperator" kindref="compound">TemporalOperator</ref>&lt; ValueType &gt;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/temporalOperator.hpp" line="229" column="1" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/temporalOperator.hpp" bodystart="229" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1ada90256c23997a40692dd5db52d299a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename ValueType</type>
          </param>
        </templateparamlist>
        <type><ref refid="classNeoFOAM_1_1dsl_1_1TemporalOperator" kindref="compound">TemporalOperator</ref>&lt; ValueType &gt;</type>
        <definition>TemporalOperator&lt; ValueType &gt; NeoFOAM::dsl::operator*</definition>
        <argsstring>(const Coeff &amp;coeff, TemporalOperator&lt; ValueType &gt; rhs)</argsstring>
        <name>operator*</name>
        <qualifiedname>NeoFOAM::dsl::operator*</qualifiedname>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Coeff" kindref="compound">Coeff</ref> &amp;</type>
          <declname>coeff</declname>
        </param>
        <param>
          <type><ref refid="classNeoFOAM_1_1dsl_1_1TemporalOperator" kindref="compound">TemporalOperator</ref>&lt; ValueType &gt;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/temporalOperator.hpp" line="237" column="18" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/temporalOperator.hpp" bodystart="237" bodyend="242"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/coeff.hpp" line="8" column="1"/>
  </compounddef>
</doxygen>
