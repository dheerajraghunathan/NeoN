<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.8" xml:lang="en-US">
  <compounddef id="classNeoFOAM_1_1la_1_1CSRMatrix" kind="class" language="C++" prot="public">
    <compoundname>NeoFOAM::la::CSRMatrix</compoundname>
    <includes refid="CSRMatrix_8hpp" local="no">CSRMatrix.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename ValueType</type>
      </param>
      <param>
        <type>typename IndexType</type>
      </param>
    </templateparamlist>
    <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classNeoFOAM_1_1la_1_1CSRMatrix_1a31aea5ca4d151e6ca8336dbe4eebb394" prot="private" static="no" mutable="no">
        <type><ref refid="classNeoFOAM_1_1Field" kindref="compound">Field</ref>&lt; ValueType &gt;</type>
        <definition>Field&lt;ValueType&gt; NeoFOAM::la::CSRMatrix&lt; ValueType, IndexType &gt;::value_</definition>
        <argsstring></argsstring>
        <name>value_</name>
        <qualifiedname>NeoFOAM::la::CSRMatrix::value_</qualifiedname>
        <briefdescription>
<para>The (non-zero) values of the CSR matrix. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" line="217" column="11" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" bodystart="217" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoFOAM_1_1la_1_1CSRMatrix_1a9bc81092dd881c2b3354545f8f51a70e" prot="private" static="no" mutable="no">
        <type><ref refid="classNeoFOAM_1_1Field" kindref="compound">Field</ref>&lt; IndexType &gt;</type>
        <definition>Field&lt;IndexType&gt; NeoFOAM::la::CSRMatrix&lt; ValueType, IndexType &gt;::columnIndex_</definition>
        <argsstring></argsstring>
        <name>columnIndex_</name>
        <qualifiedname>NeoFOAM::la::CSRMatrix::columnIndex_</qualifiedname>
        <briefdescription>
<para>The column indices of the CSR matrix. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" line="218" column="11" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" bodystart="218" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classNeoFOAM_1_1la_1_1CSRMatrix_1a1026d405cbf925e8cbeaeef6ab62ab27" prot="private" static="no" mutable="no">
        <type><ref refid="classNeoFOAM_1_1Field" kindref="compound">Field</ref>&lt; IndexType &gt;</type>
        <definition>Field&lt;IndexType&gt; NeoFOAM::la::CSRMatrix&lt; ValueType, IndexType &gt;::rowOffset_</definition>
        <argsstring></argsstring>
        <name>rowOffset_</name>
        <qualifiedname>NeoFOAM::la::CSRMatrix::rowOffset_</qualifiedname>
        <briefdescription>
<para>The row offsets for the CSR matrix. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" line="219" column="11" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" bodystart="219" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="public-func">
      <memberdef kind="function" id="classNeoFOAM_1_1la_1_1CSRMatrix_1a470bbdabf77ca7f61901b18d0551d61b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoFOAM::la::CSRMatrix&lt; ValueType, IndexType &gt;::CSRMatrix</definition>
        <argsstring>(const Field&lt; ValueType &gt; &amp;value, const Field&lt; IndexType &gt; &amp;columnIndex, const Field&lt; IndexType &gt; &amp;rowOffset)</argsstring>
        <name>CSRMatrix</name>
        <qualifiedname>NeoFOAM::la::CSRMatrix::CSRMatrix</qualifiedname>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1Field" kindref="compound">Field</ref>&lt; ValueType &gt; &amp;</type>
          <declname>value</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1Field" kindref="compound">Field</ref>&lt; IndexType &gt; &amp;</type>
          <declname>columnIndex</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1Field" kindref="compound">Field</ref>&lt; IndexType &gt; &amp;</type>
          <declname>rowOffset</declname>
        </param>
        <briefdescription>
<para>Constructor for <ref refid="classNeoFOAM_1_1la_1_1CSRMatrix" kindref="compound">CSRMatrix</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The non-zero values of the matrix. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>columnIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>The column indices for each non-zero value. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rowOffset</parametername>
</parameternamelist>
<parameterdescription>
<para>The starting index in values/colIdxs for each row. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" line="95" column="5" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" bodystart="95" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1la_1_1CSRMatrix_1ae0770a021daecac75811f6ced83b0de8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>NeoFOAM::la::CSRMatrix&lt; ValueType, IndexType &gt;::CSRMatrix</definition>
        <argsstring>(const Executor exec)</argsstring>
        <name>CSRMatrix</name>
        <qualifiedname>NeoFOAM::la::CSRMatrix::CSRMatrix</qualifiedname>
        <param>
          <type>const <ref refid="namespaceNeoFOAM_1aaa4d35d275559f501cb6a1eec717c905" kindref="member">Executor</ref></type>
          <declname>exec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" line="106" column="5" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" bodystart="106" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1la_1_1CSRMatrix_1a9bd72d19a65381bcb0b610ef65230ede" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>NeoFOAM::la::CSRMatrix&lt; ValueType, IndexType &gt;::~CSRMatrix</definition>
        <argsstring>()=default</argsstring>
        <name>~CSRMatrix</name>
        <qualifiedname>NeoFOAM::la::CSRMatrix::~CSRMatrix</qualifiedname>
        <briefdescription>
<para>Default destructor. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" line="111" column="5"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1la_1_1CSRMatrix_1a2b1fe42dfe2d65b094f613dde418af74" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="namespaceNeoFOAM_1aaa4d35d275559f501cb6a1eec717c905" kindref="member">Executor</ref> &amp;</type>
        <definition>const Executor &amp; NeoFOAM::la::CSRMatrix&lt; ValueType, IndexType &gt;::exec</definition>
        <argsstring>() const</argsstring>
        <name>exec</name>
        <qualifiedname>NeoFOAM::la::CSRMatrix::exec</qualifiedname>
        <briefdescription>
<para>Get the executor associated with this matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Reference to the executor. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" line="117" column="21" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" bodystart="117" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1la_1_1CSRMatrix_1adc4ebdbad277c6e638683ab978526042" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>IndexType</type>
        <definition>IndexType NeoFOAM::la::CSRMatrix&lt; ValueType, IndexType &gt;::nRows</definition>
        <argsstring>() const</argsstring>
        <name>nRows</name>
        <qualifiedname>NeoFOAM::la::CSRMatrix::nRows</qualifiedname>
        <briefdescription>
<para>Get the number of rows in the matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Number of rows. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" line="123" column="16" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" bodystart="123" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1la_1_1CSRMatrix_1a9f82c546edff365981c20296d61ed1de" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>IndexType</type>
        <definition>IndexType NeoFOAM::la::CSRMatrix&lt; ValueType, IndexType &gt;::nNonZeros</definition>
        <argsstring>() const</argsstring>
        <name>nNonZeros</name>
        <qualifiedname>NeoFOAM::la::CSRMatrix::nNonZeros</qualifiedname>
        <briefdescription>
<para>Get the number of non-zero values in the matrix. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Number of non-zero values. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" line="133" column="16" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" bodystart="133" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1la_1_1CSRMatrix_1ae19e42f39730deb0ef5540ec71e2fca3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::span&lt; ValueType &gt;</type>
        <definition>std::span&lt; ValueType &gt; NeoFOAM::la::CSRMatrix&lt; ValueType, IndexType &gt;::values</definition>
        <argsstring>()</argsstring>
        <name>values</name>
        <qualifiedname>NeoFOAM::la::CSRMatrix::values</qualifiedname>
        <briefdescription>
<para>Get a span to the values array. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classNeoFOAM_1_1Span" kindref="compound">Span</ref> containing the matrix values. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" line="139" column="16" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" bodystart="139" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1la_1_1CSRMatrix_1a2b3ba6080764cea2476bff7c283f9406" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::span&lt; IndexType &gt;</type>
        <definition>std::span&lt; IndexType &gt; NeoFOAM::la::CSRMatrix&lt; ValueType, IndexType &gt;::colIdxs</definition>
        <argsstring>()</argsstring>
        <name>colIdxs</name>
        <qualifiedname>NeoFOAM::la::CSRMatrix::colIdxs</qualifiedname>
        <briefdescription>
<para>Get a span to the column indices array. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classNeoFOAM_1_1Span" kindref="compound">Span</ref> containing the column indices. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" line="145" column="16" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" bodystart="145" bodyend="145"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1la_1_1CSRMatrix_1a962436693e6975d2891802f554432f5d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>std::span&lt; IndexType &gt;</type>
        <definition>std::span&lt; IndexType &gt; NeoFOAM::la::CSRMatrix&lt; ValueType, IndexType &gt;::rowPtrs</definition>
        <argsstring>()</argsstring>
        <name>rowPtrs</name>
        <qualifiedname>NeoFOAM::la::CSRMatrix::rowPtrs</qualifiedname>
        <briefdescription>
<para>Get a span to the row pointers array. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classNeoFOAM_1_1Span" kindref="compound">Span</ref> containing the row pointers. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" line="151" column="16" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" bodystart="151" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1la_1_1CSRMatrix_1a2f978e8b9ed5314b6335ffce4662f466" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::span&lt; const ValueType &gt;</type>
        <definition>const std::span&lt; const ValueType &gt; NeoFOAM::la::CSRMatrix&lt; ValueType, IndexType &gt;::values</definition>
        <argsstring>() const</argsstring>
        <name>values</name>
        <qualifiedname>NeoFOAM::la::CSRMatrix::values</qualifiedname>
        <briefdescription>
<para>Get a const span to the values array. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Const span containing the matrix values. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" line="157" column="22" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" bodystart="157" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1la_1_1CSRMatrix_1a2d4aa54392856be99602f6c0d5ef7ebb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::span&lt; const IndexType &gt;</type>
        <definition>const std::span&lt; const IndexType &gt; NeoFOAM::la::CSRMatrix&lt; ValueType, IndexType &gt;::colIdxs</definition>
        <argsstring>() const</argsstring>
        <name>colIdxs</name>
        <qualifiedname>NeoFOAM::la::CSRMatrix::colIdxs</qualifiedname>
        <briefdescription>
<para>Get a const span to the column indices array. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Const span containing the column indices. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" line="163" column="22" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" bodystart="163" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1la_1_1CSRMatrix_1a3506fa3c45492be6e4f6f358f8e4ae4f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const std::span&lt; const IndexType &gt;</type>
        <definition>const std::span&lt; const IndexType &gt; NeoFOAM::la::CSRMatrix&lt; ValueType, IndexType &gt;::rowPtrs</definition>
        <argsstring>() const</argsstring>
        <name>rowPtrs</name>
        <qualifiedname>NeoFOAM::la::CSRMatrix::rowPtrs</qualifiedname>
        <briefdescription>
<para>Get a const span to the row pointers array. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Const span containing the row pointers. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" line="169" column="22" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" bodystart="169" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1la_1_1CSRMatrix_1ad0856baef429505b2f675f7c8183a58f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1la_1_1CSRMatrix" kindref="compound">CSRMatrix</ref>&lt; ValueType, IndexType &gt;</type>
        <definition>CSRMatrix&lt; ValueType, IndexType &gt; NeoFOAM::la::CSRMatrix&lt; ValueType, IndexType &gt;::copyToExecutor</definition>
        <argsstring>(Executor dstExec) const</argsstring>
        <name>copyToExecutor</name>
        <qualifiedname>NeoFOAM::la::CSRMatrix::copyToExecutor</qualifiedname>
        <param>
          <type><ref refid="namespaceNeoFOAM_1aaa4d35d275559f501cb6a1eec717c905" kindref="member">Executor</ref></type>
          <declname>dstExec</declname>
        </param>
        <briefdescription>
<para>Copy the matrix to another executor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dstExec</parametername>
</parameternamelist>
<parameterdescription>
<para>The destination executor. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A copy of the matrix on the destination executor. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" line="176" column="16" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" bodystart="176" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1la_1_1CSRMatrix_1a4a6cafb2b386a006cff779ed325aa261" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1la_1_1CSRMatrix" kindref="compound">CSRMatrix</ref>&lt; ValueType, IndexType &gt;</type>
        <definition>CSRMatrix&lt; ValueType, IndexType &gt; NeoFOAM::la::CSRMatrix&lt; ValueType, IndexType &gt;::copyToHost</definition>
        <argsstring>() const</argsstring>
        <name>copyToHost</name>
        <qualifiedname>NeoFOAM::la::CSRMatrix::copyToHost</qualifiedname>
        <briefdescription>
<para>Copy the matrix to the host. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A copy of the matrix on the host. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" line="192" column="16" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" bodystart="192" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1la_1_1CSRMatrix_1af7ba270c32cf86070f1e70f647c78f82" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structNeoFOAM_1_1la_1_1CSRMatrixView" kindref="compound">CSRMatrixView</ref>&lt; ValueType, IndexType &gt;</type>
        <definition>CSRMatrixView&lt; ValueType, IndexType &gt; NeoFOAM::la::CSRMatrix&lt; ValueType, IndexType &gt;::view</definition>
        <argsstring>()</argsstring>
        <name>view</name>
        <qualifiedname>NeoFOAM::la::CSRMatrix::view</qualifiedname>
        <briefdescription>
<para>Get a view representation of the matrix&apos;s data. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="structNeoFOAM_1_1la_1_1CSRMatrixView" kindref="compound">CSRMatrixView</ref> for easy access to matrix elements. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" line="201" column="20" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" bodystart="201" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classNeoFOAM_1_1la_1_1CSRMatrix_1ac4a4afe4437a6994e8c63c25f09001a1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="structNeoFOAM_1_1la_1_1CSRMatrixView" kindref="compound">CSRMatrixView</ref>&lt; const ValueType, const IndexType &gt;</type>
        <definition>const CSRMatrixView&lt; const ValueType, const IndexType &gt; NeoFOAM::la::CSRMatrix&lt; ValueType, IndexType &gt;::view</definition>
        <argsstring>() const</argsstring>
        <name>view</name>
        <qualifiedname>NeoFOAM::la::CSRMatrix::view</qualifiedname>
        <briefdescription>
<para>Get a const view representation of the matrix&apos;s data. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Const <ref refid="structNeoFOAM_1_1la_1_1CSRMatrixView" kindref="compound">CSRMatrixView</ref> for read-only access to matrix elements. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" line="210" column="26" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" bodystart="210" bodyend="213"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>Sparse matrix class with compact storage by row (CSR) format. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>ValueType</parametername>
</parameternamelist>
<parameterdescription>
<para>The value type of the non-zero entries. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>IndexType</parametername>
</parameternamelist>
<parameterdescription>
<para>The index type of the rows and columns. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
    </detaileddescription>
    <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" line="84" column="1" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/linearAlgebra/CSRMatrix.hpp" bodystart="85" bodyend="220"/>
    <listofallmembers>
      <member refid="classNeoFOAM_1_1la_1_1CSRMatrix_1a2b3ba6080764cea2476bff7c283f9406" prot="public" virt="non-virtual"><scope>NeoFOAM::la::CSRMatrix</scope><name>colIdxs</name></member>
      <member refid="classNeoFOAM_1_1la_1_1CSRMatrix_1a2d4aa54392856be99602f6c0d5ef7ebb" prot="public" virt="non-virtual"><scope>NeoFOAM::la::CSRMatrix</scope><name>colIdxs</name></member>
      <member refid="classNeoFOAM_1_1la_1_1CSRMatrix_1a9bc81092dd881c2b3354545f8f51a70e" prot="private" virt="non-virtual"><scope>NeoFOAM::la::CSRMatrix</scope><name>columnIndex_</name></member>
      <member refid="classNeoFOAM_1_1la_1_1CSRMatrix_1ad0856baef429505b2f675f7c8183a58f" prot="public" virt="non-virtual"><scope>NeoFOAM::la::CSRMatrix</scope><name>copyToExecutor</name></member>
      <member refid="classNeoFOAM_1_1la_1_1CSRMatrix_1a4a6cafb2b386a006cff779ed325aa261" prot="public" virt="non-virtual"><scope>NeoFOAM::la::CSRMatrix</scope><name>copyToHost</name></member>
      <member refid="classNeoFOAM_1_1la_1_1CSRMatrix_1a470bbdabf77ca7f61901b18d0551d61b" prot="public" virt="non-virtual"><scope>NeoFOAM::la::CSRMatrix</scope><name>CSRMatrix</name></member>
      <member refid="classNeoFOAM_1_1la_1_1CSRMatrix_1ae0770a021daecac75811f6ced83b0de8" prot="public" virt="non-virtual"><scope>NeoFOAM::la::CSRMatrix</scope><name>CSRMatrix</name></member>
      <member refid="classNeoFOAM_1_1la_1_1CSRMatrix_1a2b1fe42dfe2d65b094f613dde418af74" prot="public" virt="non-virtual"><scope>NeoFOAM::la::CSRMatrix</scope><name>exec</name></member>
      <member refid="classNeoFOAM_1_1la_1_1CSRMatrix_1a9f82c546edff365981c20296d61ed1de" prot="public" virt="non-virtual"><scope>NeoFOAM::la::CSRMatrix</scope><name>nNonZeros</name></member>
      <member refid="classNeoFOAM_1_1la_1_1CSRMatrix_1adc4ebdbad277c6e638683ab978526042" prot="public" virt="non-virtual"><scope>NeoFOAM::la::CSRMatrix</scope><name>nRows</name></member>
      <member refid="classNeoFOAM_1_1la_1_1CSRMatrix_1a1026d405cbf925e8cbeaeef6ab62ab27" prot="private" virt="non-virtual"><scope>NeoFOAM::la::CSRMatrix</scope><name>rowOffset_</name></member>
      <member refid="classNeoFOAM_1_1la_1_1CSRMatrix_1a962436693e6975d2891802f554432f5d" prot="public" virt="non-virtual"><scope>NeoFOAM::la::CSRMatrix</scope><name>rowPtrs</name></member>
      <member refid="classNeoFOAM_1_1la_1_1CSRMatrix_1a3506fa3c45492be6e4f6f358f8e4ae4f" prot="public" virt="non-virtual"><scope>NeoFOAM::la::CSRMatrix</scope><name>rowPtrs</name></member>
      <member refid="classNeoFOAM_1_1la_1_1CSRMatrix_1a31aea5ca4d151e6ca8336dbe4eebb394" prot="private" virt="non-virtual"><scope>NeoFOAM::la::CSRMatrix</scope><name>value_</name></member>
      <member refid="classNeoFOAM_1_1la_1_1CSRMatrix_1ae19e42f39730deb0ef5540ec71e2fca3" prot="public" virt="non-virtual"><scope>NeoFOAM::la::CSRMatrix</scope><name>values</name></member>
      <member refid="classNeoFOAM_1_1la_1_1CSRMatrix_1a2f978e8b9ed5314b6335ffce4662f466" prot="public" virt="non-virtual"><scope>NeoFOAM::la::CSRMatrix</scope><name>values</name></member>
      <member refid="classNeoFOAM_1_1la_1_1CSRMatrix_1af7ba270c32cf86070f1e70f647c78f82" prot="public" virt="non-virtual"><scope>NeoFOAM::la::CSRMatrix</scope><name>view</name></member>
      <member refid="classNeoFOAM_1_1la_1_1CSRMatrix_1ac4a4afe4437a6994e8c63c25f09001a1" prot="public" virt="non-virtual"><scope>NeoFOAM::la::CSRMatrix</scope><name>view</name></member>
      <member refid="classNeoFOAM_1_1la_1_1CSRMatrix_1a9bd72d19a65381bcb0b610ef65230ede" prot="public" virt="non-virtual"><scope>NeoFOAM::la::CSRMatrix</scope><name>~CSRMatrix</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
