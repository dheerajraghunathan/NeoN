<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="namespaceNeoFOAM_1_1dsl" kind="namespace" language="C++">
    <compoundname>NeoFOAM::dsl</compoundname>
    <innerclass refid="classNeoFOAM_1_1dsl_1_1Coeff" prot="public">NeoFOAM::dsl::Coeff</innerclass>
    <innerclass refid="classNeoFOAM_1_1dsl_1_1Expression" prot="public">NeoFOAM::dsl::Expression</innerclass>
    <innerclass refid="classNeoFOAM_1_1dsl_1_1Operator" prot="public">NeoFOAM::dsl::Operator</innerclass>
    <innerclass refid="classNeoFOAM_1_1dsl_1_1OperatorMixin" prot="public">NeoFOAM::dsl::OperatorMixin</innerclass>
    <innerclass refid="classNeoFOAM_1_1dsl_1_1ForwardEuler" prot="public">NeoFOAM::dsl::ForwardEuler</innerclass>
    <innerclass refid="classNeoFOAM_1_1dsl_1_1TimeIntegratorBase" prot="public">NeoFOAM::dsl::TimeIntegratorBase</innerclass>
    <innerclass refid="classNeoFOAM_1_1dsl_1_1TimeIntegration" prot="public">NeoFOAM::dsl::TimeIntegration</innerclass>
    <innernamespace refid="namespaceNeoFOAM_1_1dsl_1_1detail">NeoFOAM::dsl::detail</innernamespace>
    <innernamespace refid="namespaceNeoFOAM_1_1dsl_1_1temporal">NeoFOAM::dsl::temporal</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespaceNeoFOAM_1_1dsl_1a2b6f9896fd153d54bcf3f533c60e8d2d" prot="public" static="no" mutable="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>concept</type>
        <definition>concept NeoFOAM::dsl::HasTemporalOperator</definition>
        <argsstring></argsstring>
        <name>HasTemporalOperator</name>
        <initializer>= requires(T t) {
    {
        t.temporalOperation(std::declval&lt;<ref refid="classNeoFOAM_1_1Field" kindref="compound">Field</ref>&lt;<ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref>&gt;&amp;&gt;(), std::declval&lt;<ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref>&gt;())
    } -&gt; std::same_as&lt;void&gt;; 
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/operator.hpp" line="21" column="9" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/operator.hpp" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="namespaceNeoFOAM_1_1dsl_1af9f928151f28fe8e2d438890926b7660" prot="public" static="no" mutable="no">
        <templateparamlist>
          <param>
            <type>typename T</type>
          </param>
        </templateparamlist>
        <type>concept</type>
        <definition>concept NeoFOAM::dsl::HasExplicitOperator</definition>
        <argsstring></argsstring>
        <name>HasExplicitOperator</name>
        <initializer>= requires(T t) {
    {
        t.explicitOperation(std::declval&lt;<ref refid="classNeoFOAM_1_1Field" kindref="compound">Field</ref>&lt;<ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref>&gt;&amp;&gt;())
    } -&gt; std::same_as&lt;void&gt;; 
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/operator.hpp" line="28" column="9" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/operator.hpp" bodystart="28" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1afe10f51285498b6fc5aa951ba8df8ca6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1dsl_1_1Coeff" kindref="compound">Coeff</ref></type>
        <definition>Coeff NeoFOAM::dsl::operator*</definition>
        <argsstring>(const Coeff &amp;lhs, const Coeff &amp;rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Coeff" kindref="compound">Coeff</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Coeff" kindref="compound">Coeff</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/coeff.hpp" line="103" column="14" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/coeff.hpp" bodystart="103" bodyend="108"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1ac9c92e76ba5b1f41f35e04c1f240e01b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref></type>
        <definition>Expression NeoFOAM::dsl::operator+</definition>
        <argsstring>(Expression lhs, const Expression &amp;rhs)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="111" column="12" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="111" bodyend="115"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1a01b7ab1ca011e58077b6637cc361be3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref></type>
        <definition>Expression NeoFOAM::dsl::operator+</definition>
        <argsstring>(Expression lhs, const Operator &amp;rhs)</argsstring>
        <name>operator+</name>
        <param>
          <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Operator" kindref="compound">Operator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="117" column="12" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="117" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1acbe5a97a4e0caf470783202c963dccc7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref></type>
        <definition>Expression NeoFOAM::dsl::operator+</definition>
        <argsstring>(const Operator &amp;lhs, const Operator &amp;rhs)</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Operator" kindref="compound">Operator</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Operator" kindref="compound">Operator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="123" column="12" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="123" bodyend="129"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1a5ea73088dd494171b80cdad32fefee92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref></type>
        <definition>Expression NeoFOAM::dsl::operator*</definition>
        <argsstring>(scalar scale, const Expression &amp;es)</argsstring>
        <name>operator*</name>
        <param>
          <type><ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref></type>
          <declname>scale</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref> &amp;</type>
          <declname>es</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="131" column="12" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="131" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1afc428714f57df9a1de192a6c6af1c47c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref></type>
        <definition>Expression NeoFOAM::dsl::operator-</definition>
        <argsstring>(Expression lhs, const Expression &amp;rhs)</argsstring>
        <name>operator-</name>
        <param>
          <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="149" column="12" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="149" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1ad076f0422e627810af06821be3750b1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref></type>
        <definition>Expression NeoFOAM::dsl::operator-</definition>
        <argsstring>(Expression lhs, const Operator &amp;rhs)</argsstring>
        <name>operator-</name>
        <param>
          <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref></type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Operator" kindref="compound">Operator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="155" column="12" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="155" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1aa5e7279703cfb7e7bb2279a3565e57ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref></type>
        <definition>Expression NeoFOAM::dsl::operator-</definition>
        <argsstring>(const Operator &amp;lhs, const Operator &amp;rhs)</argsstring>
        <name>operator-</name>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Operator" kindref="compound">Operator</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Operator" kindref="compound">Operator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" line="161" column="12" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/expression.hpp" bodystart="161" bodyend="167"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1a178fb922947150fb1a64f82d80a5b730" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto NeoFOAM::dsl::operator*</definition>
        <argsstring>(scalar scalarCoeff, const Operator &amp;rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type><ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref></type>
          <declname>scalarCoeff</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Operator" kindref="compound">Operator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/operator.hpp" line="180" column="6" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/operator.hpp" bodystart="180" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1a276984622ed090272a3a59bcc7bdfc42" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto NeoFOAM::dsl::operator*</definition>
        <argsstring>(const Field&lt; scalar &gt; &amp;coeffField, const Operator &amp;rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1Field" kindref="compound">Field</ref>&lt; <ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref> &gt; &amp;</type>
          <declname>coeffField</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Operator" kindref="compound">Operator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/operator.hpp" line="187" column="6" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/operator.hpp" bodystart="187" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1a098d5189c7dbb7620210c126110f622e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>auto</type>
        <definition>auto NeoFOAM::dsl::operator*</definition>
        <argsstring>(const Coeff &amp;coeff, const Operator &amp;rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Coeff" kindref="compound">Coeff</ref> &amp;</type>
          <declname>coeff</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Operator" kindref="compound">Operator</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/operator.hpp" line="194" column="6" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/operator.hpp" bodystart="194" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1a839c525155797f33df54e48363f2cc33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename CoeffFunction</type>
          </param>
        </templateparamlist>
        <type>requires std::invocable&lt; CoeffFunction &amp;, <ref refid="namespaceNeoFOAM_1aa8ea339f1c9a4f2232da876ead30a82c" kindref="member">size_t</ref> &gt; <ref refid="classNeoFOAM_1_1dsl_1_1Operator" kindref="compound">Operator</ref></type>
        <definition>requires std::invocable&lt;CoeffFunction&amp;, size_t&gt; Operator NeoFOAM::dsl::operator*</definition>
        <argsstring>([[maybe_unused]] CoeffFunction coeffFunc, const Operator &amp;lhs)</argsstring>
        <name>operator*</name>
        <param>
          <attributes>[[maybe_unused]</attributes>
          <type>] CoeffFunction</type>
          <declname>coeffFunc</declname>
        </param>
        <param>
          <type>const <ref refid="classNeoFOAM_1_1dsl_1_1Operator" kindref="compound">Operator</ref> &amp;</type>
          <declname>lhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/operator.hpp" line="203" column="10" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/operator.hpp" bodystart="203" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="namespaceNeoFOAM_1_1dsl_1a47993a1124a2fe0bd7df22998e031640" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename FieldType</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void NeoFOAM::dsl::solve</definition>
        <argsstring>(Expression &amp;exp, FieldType &amp;solution, scalar dt, [[maybe_unused]] const Dictionary &amp;fvSchemes, [[maybe_unused]] const Dictionary &amp;fvSolution)</argsstring>
        <name>solve</name>
        <param>
          <type><ref refid="classNeoFOAM_1_1dsl_1_1Expression" kindref="compound">Expression</ref> &amp;</type>
          <declname>exp</declname>
        </param>
        <param>
          <type>FieldType &amp;</type>
          <declname>solution</declname>
        </param>
        <param>
          <type><ref refid="namespaceNeoFOAM_1a03eba15c79160376393af407daa0fd7b" kindref="member">scalar</ref></type>
          <declname>dt</declname>
        </param>
        <param>
          <attributes>[[maybe_unused]</attributes>
          <type>] const <ref refid="classNeoFOAM_1_1Dictionary" kindref="compound">Dictionary</ref> &amp;</type>
          <declname>fvSchemes</declname>
        </param>
        <param>
          <attributes>[[maybe_unused]</attributes>
          <type>] const <ref refid="classNeoFOAM_1_1Dictionary" kindref="compound">Dictionary</ref> &amp;</type>
          <declname>fvSolution</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/solver.hpp" line="30" column="6" bodyfile="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/solver.hpp" bodystart="30" bodyend="53"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/runner/work/NeoFOAM/NeoFOAM/include/NeoFOAM/dsl/coeff.hpp" line="5" column="1"/>
  </compounddef>
</doxygen>
